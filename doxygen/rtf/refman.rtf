{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Maldive }Maldive}
{\comment Generated by doxygen 1.9.5.}
{\creatim \yr2023\mo4\dy17\hr15\min58\sec8}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Maldive}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Mon Apr 17 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Dynamic Malware Analysis Tool{\tc \v Dynamic Malware Analysis Tool}\par \pard\plain 
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
South East Technological University
\par}
{\tc\tcl2 \v South East Technological University}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Name: Shane Doherty
\par}
{\tc\tcl3 \v Name: Shane Doherty}
\par}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Student Number: C00249279
\par}
{\tc\tcl3 \v Student Number: C00249279}
\par}
\par}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
### Supervisor: Joseph Kehoe
\par}
{\tc\tcl2 \v ### Supervisor: Joseph Kehoe}
This work \'A9 2022 by Shane Doherty is licensed under Attribution-NonCommercial-ShareAlike 4.0 International. To view a copy of this license, visit {\f2 http://creativecommons.org/licenses/by-nc-sa/4.0/} \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
dynamicAnalysis.ActiveConnection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.CandidateWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.CodeExtract\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.CommandLine\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.DataDirectory\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.DllFile\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.ExecuteCode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.LegacyWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.MemoryWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.Mnem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.NetworkStats\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.NetworkTraffic\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.PacketTrace\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.PEFile\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.ProcessManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.ReadWrite\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.SelectFile\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.SelectProcess\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
org.eclipse.wb.swt.SWTResourceManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.test\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.Version\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.VirtualMemory\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.Window\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Composite
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
dynamicAnalysis.Details\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.FilesComposite\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.InstructionsComposite\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.MemoryComposite\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dynamicAnalysis.NetworkComposite\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ProxySelector
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CapstoneTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b dynamicAnalysis.ActiveConnection} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.CandidateWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CapstoneTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.CodeExtract} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.CommandLine} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.DataDirectory} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.Details} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.DllFile} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.ExecuteCode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.FilesComposite} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.InstructionsComposite} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.LegacyWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.MemoryComposite} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.MemoryWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.Mnem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.NetworkComposite} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.NetworkStats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.NetworkTraffic} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.PacketTrace} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.PEFile} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.ProcessManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.ReadWrite} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.SelectFile} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.SelectProcess} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b org.eclipse.wb.swt.SWTResourceManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.test} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.Version} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.VirtualMemory} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dynamicAnalysis.Window} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b bin/dynamicAnalysis/{\b dynamicAnalysis_ExecuteCode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b bin/dynamicAnalysis/{\b dynamicAnalysis_VirtualMemory.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b bin/dynamicAnalysis/{\b ExecuteImpl.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b bin/dynamicAnalysis/{\b ReadProcess.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b bin/dynamicAnalysis/{\b VirtualMemory.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b ActiveConnection.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b CandidateWindow.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b CapstoneTest.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b CodeExtract.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b CommandLine.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b DataDirectory.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b Details.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b DllFile.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b dynamicAnalysis_ExecuteCode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b dynamicAnalysis_VirtualMemory.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b ExecuteCode.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b ExecuteImpl.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b FilesComposite.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b InstructionsComposite.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b LegacyWindow.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b MemoryComposite.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b MemoryWindow.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b Mnem.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b NetworkComposite.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b NetworkStats.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b NetworkTraffic.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b PacketTrace.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b PEFile.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b ProcessManager.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b ReadProcess.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b ReadWrite.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b SelectFile.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b SelectProcess.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b test.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b Version.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b VirtualMemory.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b VirtualMemory.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/dynamicAnalysis/{\b Window.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/org/eclipse/wb/swt/{\b SWTResourceManager.java} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b target/classes/dynamicAnalysis/{\b dynamicAnalysis_ExecuteCode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b target/classes/dynamicAnalysis/{\b dynamicAnalysis_VirtualMemory.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b target/classes/dynamicAnalysis/{\b ExecuteImpl.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b target/classes/dynamicAnalysis/{\b ReadProcess.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b target/classes/dynamicAnalysis/{\b VirtualMemory.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.ActiveConnection Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ActiveConnection} (String protocol, String localAddress, String foreignAddress, String state, long pid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getProtocol} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProtocol} (String protocol)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getLocalAddress} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLocalAddress} (String localAddress)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getForeignAddress} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setForeignAddress} (String foreignAddress)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getState} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setState} (String state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b getPid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPid} (long pid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information relating to the sent packet. Contains information that can be used to determine what the packet contains. \par
}{
Definition at line {\b 6} of file {\b ActiveConnection.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ActiveConnection\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:ActiveConnection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.ActiveConnection.ActiveConnection (String  {\i protocol}, String  {\i localAddress}, String  {\i foreignAddress}, String  {\i state}, long  {\i pid})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new active connection.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i protocol} \cell }{the protocol of the packet \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i localAddress} \cell }{the local address of the packet \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i foreignAddress} \cell }{the foreign address of the packet \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i state} \cell }{the state of the packet \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pid} \cell }{the pid that the packet was sent from \cell }
{\row }
}
}{
Definition at line {\b 33} of file {\b ActiveConnection.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getForeignAddress\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:getForeignAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ActiveConnection.getForeignAddress ()}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the foreign address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the foreign address \par
}}}{
Definition at line {\b 87} of file {\b ActiveConnection.java}.}\par
}
{\xe \v getLocalAddress\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:getLocalAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ActiveConnection.getLocalAddress ()}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the local address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the local address \par
}}}{
Definition at line {\b 67} of file {\b ActiveConnection.java}.}\par
}
{\xe \v getPid\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:getPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long dynamicAnalysis.ActiveConnection.getPid ()}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the pid.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the pid \par
}}}{
Definition at line {\b 127} of file {\b ActiveConnection.java}.}\par
}
{\xe \v getProtocol\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:getProtocol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ActiveConnection.getProtocol ()}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the protocol.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the protocol \par
}}}{
Definition at line {\b 47} of file {\b ActiveConnection.java}.}\par
}
{\xe \v getState\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:getState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ActiveConnection.getState ()}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the state.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the state \par
}}}{
Definition at line {\b 107} of file {\b ActiveConnection.java}.}\par
}
{\xe \v setForeignAddress\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:setForeignAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ActiveConnection.setForeignAddress (String  {\i foreignAddress})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the foreign address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i foreignAddress} \cell }{the new foreign address \cell }
{\row }
}
}{
Definition at line {\b 97} of file {\b ActiveConnection.java}.}\par
}
{\xe \v setLocalAddress\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:setLocalAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ActiveConnection.setLocalAddress (String  {\i localAddress})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the local address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i localAddress} \cell }{the new local address \cell }
{\row }
}
}{
Definition at line {\b 77} of file {\b ActiveConnection.java}.}\par
}
{\xe \v setPid\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:setPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ActiveConnection.setPid (long  {\i pid})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pid.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pid} \cell }{the new pid \cell }
{\row }
}
}{
Definition at line {\b 137} of file {\b ActiveConnection.java}.}\par
}
{\xe \v setProtocol\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:setProtocol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ActiveConnection.setProtocol (String  {\i protocol})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the protocol.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i protocol} \cell }{the new protocol \cell }
{\row }
}
}{
Definition at line {\b 57} of file {\b ActiveConnection.java}.}\par
}
{\xe \v setState\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:setState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ActiveConnection.setState (String  {\i state})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the state.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i state} \cell }{the new state \cell }
{\row }
}
}{
Definition at line {\b 117} of file {\b ActiveConnection.java}.}\par
}
{\xe \v toString\:dynamicAnalysis.ActiveConnection}
{\xe \v dynamicAnalysis.ActiveConnection\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ActiveConnection.toString ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the full information of the packet \par
}}}{
Definition at line {\b 148} of file {\b ActiveConnection.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/ActiveConnection.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.CandidateWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.CandidateWindow}
{\xe \v dynamicAnalysis.CandidateWindow}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b main} (String[] args)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createContents} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Shell {\b shell}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b CandidateWindow}. \par
}{
Definition at line {\b 35} of file {\b CandidateWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createContents\:dynamicAnalysis.CandidateWindow}
{\xe \v dynamicAnalysis.CandidateWindow\:createContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.CandidateWindow.createContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create contents of the window. \par
}{
Definition at line {\b 85} of file {\b CandidateWindow.java}.}\par
}
{\xe \v main\:dynamicAnalysis.CandidateWindow}
{\xe \v dynamicAnalysis.CandidateWindow\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.CandidateWindow.main (String[]  {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Launch the application.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{the arguments \cell }
{\row }
}
}{
Definition at line {\b 52} of file {\b CandidateWindow.java}.}\par
}
{\xe \v open\:dynamicAnalysis.CandidateWindow}
{\xe \v dynamicAnalysis.CandidateWindow\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.CandidateWindow.open ()}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the window. \par
}{
Definition at line {\b 67} of file {\b CandidateWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v shell\:dynamicAnalysis.CandidateWindow}
{\xe \v dynamicAnalysis.CandidateWindow\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Shell dynamicAnalysis.CandidateWindow.shell{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The shell. \par
}{
Definition at line {\b 39} of file {\b CandidateWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/CandidateWindow.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CapstoneTest Class Reference\par \pard\plain 
{\tc\tcl2 \v CapstoneTest}
{\xe \v CapstoneTest}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Inheritance diagram for CapstoneTest:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_capstone_test.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PrivateDataProxy} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< Proxy > {\b select} (URI uri)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b connectFailed} (URI arg0, SocketAddress arg1, IOException arg2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b CapstoneTest}. \par
}{
Definition at line {\b 23} of file {\b CapstoneTest.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v connectFailed\:CapstoneTest}
{\xe \v CapstoneTest\:connectFailed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CapstoneTest.connectFailed (URI  {\i arg0}, SocketAddress  {\i arg1}, IOException  {\i arg2})}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connect failed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg0} \cell }{the arg 0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg1} \cell }{the arg 1 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i arg2} \cell }{the arg 2 \cell }
{\row }
}
}{
Definition at line {\b 91} of file {\b CapstoneTest.java}.}\par
}
{\xe \v PrivateDataProxy\:CapstoneTest}
{\xe \v CapstoneTest\:PrivateDataProxy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CapstoneTest.PrivateDataProxy ()}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Private data proxy. \par
}{
Definition at line {\b 39} of file {\b CapstoneTest.java}.}\par
}
{\xe \v select\:CapstoneTest}
{\xe \v CapstoneTest\:select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List< Proxy > CapstoneTest.select (URI  {\i uri})}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Select.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i uri} \cell }{the uri \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the list \par
}}}{
Definition at line {\b 69} of file {\b CapstoneTest.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/CapstoneTest.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.CodeExtract Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CodeExtract} (File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b loadInstructions} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
File {\b getFile} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFile} (File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getInstructions} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getCode} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String[] {\b getCodeArr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PEFile} {\b getPeFile} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPeFile} ({\b PEFile} peFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPointer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Capstone.CsInsn[] {\b getAllInsn} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAllInsn} (Capstone.CsInsn[] allInsn)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getBytes} ()  throws IOException 	\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b getVersion} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Top level extraction of code from a PE file. Uses Capstone to translate a byte stream to x86 instructions. \par
}{
Definition at line {\b 15} of file {\b CodeExtract.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CodeExtract\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:CodeExtract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.CodeExtract.CodeExtract (File  {\i file})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates the {\b CodeExtract} class.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the file to extract the x86 instructions from \cell }
{\row }
}
}{
Definition at line {\b 40} of file {\b CodeExtract.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getAllInsn\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getAllInsn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Capstone.CsInsn[] dynamicAnalysis.CodeExtract.getAllInsn ()}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Capstone instruction set.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the Capstone instruction set \par
}}}{
Definition at line {\b 221} of file {\b CodeExtract.java}.}\par
}
{\xe \v getBytes\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.CodeExtract.getBytes () throws IOException}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the raw instruction bytes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the raw instruction bytes \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i IOException} \cell }{Signals that an I/O exception has occurred. \cell }
{\row }
}
}{
Definition at line {\b 242} of file {\b CodeExtract.java}.}\par
}
{\xe \v getCode\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CodeExtract.getCode ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the code.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the code \par
}}}{
Definition at line {\b 173} of file {\b CodeExtract.java}.}\par
}
{\xe \v getCodeArr\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getCodeArr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String[] dynamicAnalysis.CodeExtract.getCodeArr ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the code arr.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the code arr \par
}}}{
Definition at line {\b 182} of file {\b CodeExtract.java}.}\par
}
{\xe \v getFile\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
File dynamicAnalysis.CodeExtract.getFile ()}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the file \par
}}}{
Definition at line {\b 137} of file {\b CodeExtract.java}.}\par
}
{\xe \v getInstructions\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getInstructions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.CodeExtract.getInstructions ()}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the instructions.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the instructions \par
}}}{
Definition at line {\b 164} of file {\b CodeExtract.java}.}\par
}
{\xe \v getPeFile\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getPeFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PEFile} dynamicAnalysis.CodeExtract.getPeFile ()}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the pe file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the pe file \par
}}}{
Definition at line {\b 191} of file {\b CodeExtract.java}.}\par
}
{\xe \v getPointer\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.CodeExtract.getPointer ()}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the pointer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the pointer \par
}}}{
Definition at line {\b 211} of file {\b CodeExtract.java}.}\par
}
{\xe \v getVersion\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:getVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Version} dynamicAnalysis.CodeExtract.getVersion ()}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the PE version, either 32 bit or 64 bit.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the PE version \par
}}}{
Definition at line {\b 252} of file {\b CodeExtract.java}.}\par
}
{\xe \v loadInstructions\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:loadInstructions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.CodeExtract.loadInstructions ()}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load x86 instructions.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
byte array containing raw instruction bytes \par
}}}{
Definition at line {\b 62} of file {\b CodeExtract.java}.}\par
}
{\xe \v setAllInsn\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:setAllInsn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.CodeExtract.setAllInsn (Capstone.CsInsn[]  {\i allInsn})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Capstone instruction set.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i allInsn} \cell }{the new Capstone instruction set. \cell }
{\row }
}
}{
Definition at line {\b 231} of file {\b CodeExtract.java}.}\par
}
{\xe \v setFile\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:setFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.CodeExtract.setFile (File  {\i file})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the new file \cell }
{\row }
}
}{
Definition at line {\b 146} of file {\b CodeExtract.java}.}\par
}
{\xe \v setPeFile\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:setPeFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.CodeExtract.setPeFile ({\b PEFile}  {\i peFile})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pe file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i peFile} \cell }{the new pe file \cell }
{\row }
}
}{
Definition at line {\b 201} of file {\b CodeExtract.java}.}\par
}
{\xe \v toString\:dynamicAnalysis.CodeExtract}
{\xe \v dynamicAnalysis.CodeExtract\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CodeExtract.toString ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string \par
}}}{
Definition at line {\b 263} of file {\b CodeExtract.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/CodeExtract.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.CommandLine Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandLine} (long pid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandLine} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b getPid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPid} (long pid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b runName} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b runDLLs} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b runFiles} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getAll} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getNetstat} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b CommandLine}. Used to communicate with the command line whenever it is required. \par
}{
Definition at line {\b 13} of file {\b CommandLine.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CommandLine\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:CommandLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.CommandLine.CommandLine (long  {\i pid})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new command line.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pid} \cell }{the process ID \cell }
{\row }
}
}{
Definition at line {\b 24} of file {\b CommandLine.java}.}\par
}
{\xe \v CommandLine\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:CommandLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.CommandLine.CommandLine ()}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new command line. \par
}{
Definition at line {\b 32} of file {\b CommandLine.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getAll\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:getAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CommandLine.getAll ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all processes currently running.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the cmd result from running the command \par
}}}{
Definition at line {\b 129} of file {\b CommandLine.java}.}\par
}
{\xe \v getNetstat\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:getNetstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CommandLine.getNetstat ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the network information from all processes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the cmd result from running the command \par
}}}{
Definition at line {\b 139} of file {\b CommandLine.java}.}\par
}
{\xe \v getPid\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:getPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long dynamicAnalysis.CommandLine.getPid ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the pid.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the pid \par
}}}{
Definition at line {\b 42} of file {\b CommandLine.java}.}\par
}
{\xe \v runDLLs\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:runDLLs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CommandLine.runDLLs ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lists DLLS used by the process. Credit to Mark Russinovich of Microsoft for the utility.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the cmd result from running the command \par
}}}{
Definition at line {\b 109} of file {\b CommandLine.java}.}\par
}
{\xe \v runFiles\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:runFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CommandLine.runFiles ()}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run files.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the cmd result from running the command \par
}}}{
Definition at line {\b 119} of file {\b CommandLine.java}.}\par
}
{\xe \v runName\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:runName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CommandLine.runName ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses tasklist to get relevant process information from the process ID.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the cmd result from running the command \par
}}}{
Definition at line {\b 99} of file {\b CommandLine.java}.}\par
}
{\xe \v setPid\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:setPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.CommandLine.setPid (long  {\i pid})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pid.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pid} \cell }{the new pid \cell }
{\row }
}
}{
Definition at line {\b 52} of file {\b CommandLine.java}.}\par
}
{\xe \v toString\:dynamicAnalysis.CommandLine}
{\xe \v dynamicAnalysis.CommandLine\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.CommandLine.toString ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string \par
}}}{
Definition at line {\b 150} of file {\b CommandLine.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/CommandLine.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.DataDirectory Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataDirectory} (byte[] bytes, int virtualAddress, int size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getBytes} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBytes} (byte[] bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getVirtualAddress} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVirtualAddress} (int virtualAddress)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getSize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (int size)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b DataDirectory}. \par
}{
Definition at line {\b 9} of file {\b DataDirectory.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DataDirectory\:dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory\:DataDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.DataDirectory.DataDirectory (byte[]  {\i bytes}, int  {\i virtualAddress}, int  {\i size})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new data directory.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{the bytes \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i virtualAddress} \cell }{the virtual address \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{the size \cell }
{\row }
}
}{
Definition at line {\b 28} of file {\b DataDirectory.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getBytes\:dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory\:getBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.DataDirectory.getBytes ()}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the bytes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the bytes \par
}}}{
Definition at line {\b 40} of file {\b DataDirectory.java}.}\par
}
{\xe \v getSize\:dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory\:getSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.DataDirectory.getSize ()}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the size.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the size \par
}}}{
Definition at line {\b 80} of file {\b DataDirectory.java}.}\par
}
{\xe \v getVirtualAddress\:dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory\:getVirtualAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.DataDirectory.getVirtualAddress ()}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the virtual address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the virtual address \par
}}}{
Definition at line {\b 60} of file {\b DataDirectory.java}.}\par
}
{\xe \v setBytes\:dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory\:setBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.DataDirectory.setBytes (byte[]  {\i bytes})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the bytes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{the new bytes \cell }
{\row }
}
}{
Definition at line {\b 50} of file {\b DataDirectory.java}.}\par
}
{\xe \v setSize\:dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.DataDirectory.setSize (int  {\i size})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the size.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{the new size \cell }
{\row }
}
}{
Definition at line {\b 90} of file {\b DataDirectory.java}.}\par
}
{\xe \v setVirtualAddress\:dynamicAnalysis.DataDirectory}
{\xe \v dynamicAnalysis.DataDirectory\:setVirtualAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.DataDirectory.setVirtualAddress (int  {\i virtualAddress})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the virtual address.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i virtualAddress} \cell }{the new virtual address \cell }
{\row }
}
}{
Definition at line {\b 70} of file {\b DataDirectory.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/DataDirectory.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.Details Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.Details}
{\xe \v dynamicAnalysis.Details}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
Inheritance diagram for dynamicAnalysis.Details:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdynamic_analysis_1_1_details.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Details} (Composite parent, int style, boolean selection)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b isSelection} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelection} (boolean selection)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkSubclass} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unused implementation of a composite to show the details of a process. This is included as a demonstration only. \par
}{
Definition at line {\b 20} of file {\b Details.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Details\:dynamicAnalysis.Details}
{\xe \v dynamicAnalysis.Details\:Details}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Details.Details (Composite  {\i parent}, int  {\i style}, boolean  {\i selection})}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the details composite.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{the main window that acts as the parent \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{the SWT style applied to the composite \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i selection} \cell }{the selection \cell }
{\row }
}
}{
Definition at line {\b 48} of file {\b Details.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkSubclass\:dynamicAnalysis.Details}
{\xe \v dynamicAnalysis.Details\:checkSubclass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.Details.checkSubclass (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check subclass. \par
}{
Definition at line {\b 158} of file {\b Details.java}.}\par
}
{\xe \v clearData\:dynamicAnalysis.Details}
{\xe \v dynamicAnalysis.Details\:clearData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.Details.clearData ()}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear data from the GUI table. \par
}{
Definition at line {\b 121} of file {\b Details.java}.}\par
}
{\xe \v isSelection\:dynamicAnalysis.Details}
{\xe \v dynamicAnalysis.Details\:isSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean dynamicAnalysis.Details.isSelection ()}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the selection is toggled.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the selection value \par
}}}{
Definition at line {\b 139} of file {\b Details.java}.}\par
}
{\xe \v setSelection\:dynamicAnalysis.Details}
{\xe \v dynamicAnalysis.Details\:setSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.Details.setSelection (boolean  {\i selection})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the selection toggle.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i selection} \cell }{the new selection value \cell }
{\row }
}
}{
Definition at line {\b 149} of file {\b Details.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/Details.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.DllFile Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.DllFile}
{\xe \v dynamicAnalysis.DllFile}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DllFile} (String path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getPath} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPath} (String path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
File {\b getFile} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Class used to identify DLL files. \par
}{
Definition at line {\b 11} of file {\b DllFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DllFile\:dynamicAnalysis.DllFile}
{\xe \v dynamicAnalysis.DllFile\:DllFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.DllFile.DllFile (String  {\i path})}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new dll file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{the path of the DLL file \cell }
{\row }
}
}{
Definition at line {\b 25} of file {\b DllFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getFile\:dynamicAnalysis.DllFile}
{\xe \v dynamicAnalysis.DllFile\:getFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
File dynamicAnalysis.DllFile.getFile ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the file \par
}}}{
Definition at line {\b 56} of file {\b DllFile.java}.}\par
}
{\xe \v getPath\:dynamicAnalysis.DllFile}
{\xe \v dynamicAnalysis.DllFile\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.DllFile.getPath ()}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the path of the DLL file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the path of the DLL file \par
}}}{
Definition at line {\b 36} of file {\b DllFile.java}.}\par
}
{\xe \v setPath\:dynamicAnalysis.DllFile}
{\xe \v dynamicAnalysis.DllFile\:setPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.DllFile.setPath (String  {\i path})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the path.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{the new path \cell }
{\row }
}
}{
Definition at line {\b 46} of file {\b DllFile.java}.}\par
}
{\xe \v toString\:dynamicAnalysis.DllFile}
{\xe \v dynamicAnalysis.DllFile\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.DllFile.toString ()}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string \par
}}}{
Definition at line {\b 77} of file {\b DllFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/DllFile.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.ExecuteCode Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExecuteCode} (byte[] codes, File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExecuteCode} (byte code, File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
File {\b getFile} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFile} (File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getCodes} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCodes} (byte[] codes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b getCode} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCode} (byte code)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
native String {\b test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b read} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Unused implementation that would have allowed for registry view. Included for demonstration purposes only \par
}{
Definition at line {\b 12} of file {\b ExecuteCode.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExecuteCode\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:ExecuteCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.ExecuteCode.ExecuteCode (byte[]  {\i codes}, File  {\i file})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates the {\b ExecuteCode} method with an array\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i codes} \cell }{the byte array of registry values \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the file to be accessed \cell }
{\row }
}
}{
Definition at line {\b 48} of file {\b ExecuteCode.java}.}\par
}
{\xe \v ExecuteCode\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:ExecuteCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.ExecuteCode.ExecuteCode (byte  {\i code}, File  {\i file})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates the {\b ExecuteCode} method with single instruction\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i codes} \cell }{the byte containing a registry value \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the file to be accessed \cell }
{\row }
}
}{
Definition at line {\b 60} of file {\b ExecuteCode.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getCode\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:getCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte dynamicAnalysis.ExecuteCode.getCode ()}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a single registry code.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the registry code \par
}}}{
Definition at line {\b 109} of file {\b ExecuteCode.java}.}\par
}
{\xe \v getCodes\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:getCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.ExecuteCode.getCodes ()}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the registry codes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the registry codes \par
}}}{
Definition at line {\b 91} of file {\b ExecuteCode.java}.}\par
}
{\xe \v getFile\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:getFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
File dynamicAnalysis.ExecuteCode.getFile ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the file \par
}}}{
Definition at line {\b 71} of file {\b ExecuteCode.java}.}\par
}
{\xe \v read\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int[] dynamicAnalysis.ExecuteCode.read ()}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the current registry values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the array containing the four registry values \par
}}}{
Definition at line {\b 151} of file {\b ExecuteCode.java}.}\par
}
{\xe \v setCode\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:setCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ExecuteCode.setCode (byte  {\i code})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the registry code.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i code} \cell }{the new registry code \cell }
{\row }
}
}{
Definition at line {\b 118} of file {\b ExecuteCode.java}.}\par
}
{\xe \v setCodes\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:setCodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ExecuteCode.setCodes (byte[]  {\i codes})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the registry codes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i codes} \cell }{the new registry codes \cell }
{\row }
}
}{
Definition at line {\b 100} of file {\b ExecuteCode.java}.}\par
}
{\xe \v setFile\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:setFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ExecuteCode.setFile (File  {\i file})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the new file \cell }
{\row }
}
}{
Definition at line {\b 81} of file {\b ExecuteCode.java}.}\par
}
{\xe \v test\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
native String dynamicAnalysis.ExecuteCode.test ()}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string \par
}}}}
{\xe \v toString\:dynamicAnalysis.ExecuteCode}
{\xe \v dynamicAnalysis.ExecuteCode\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ExecuteCode.toString ()}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string describing values being used \par
}}}{
Definition at line {\b 165} of file {\b ExecuteCode.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/ExecuteCode.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.FilesComposite Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.FilesComposite}
{\xe \v dynamicAnalysis.FilesComposite}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
Inheritance diagram for dynamicAnalysis.FilesComposite:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdynamic_analysis_1_1_files_composite.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilesComposite} (Composite parent, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getProcessId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProcessId} (int processId)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkSubclass} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Composite to display the files used by the process \par
}{
Definition at line {\b 17} of file {\b FilesComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FilesComposite\:dynamicAnalysis.FilesComposite}
{\xe \v dynamicAnalysis.FilesComposite\:FilesComposite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.FilesComposite.FilesComposite (Composite  {\i parent}, int  {\i style})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the composite.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{the parent that contains this composite \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{the SWT style \cell }
{\row }
}
}{
Definition at line {\b 35} of file {\b FilesComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkSubclass\:dynamicAnalysis.FilesComposite}
{\xe \v dynamicAnalysis.FilesComposite\:checkSubclass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.FilesComposite.checkSubclass (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check subclass. \par
}{
Definition at line {\b 97} of file {\b FilesComposite.java}.}\par
}
{\xe \v getProcessId\:dynamicAnalysis.FilesComposite}
{\xe \v dynamicAnalysis.FilesComposite\:getProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.FilesComposite.getProcessId ()}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the process id.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the process id \par
}}}{
Definition at line {\b 78} of file {\b FilesComposite.java}.}\par
}
{\xe \v setProcessId\:dynamicAnalysis.FilesComposite}
{\xe \v dynamicAnalysis.FilesComposite\:setProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.FilesComposite.setProcessId (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the process id.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i processId} \cell }{the new process id \cell }
{\row }
}
}{
Definition at line {\b 88} of file {\b FilesComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/FilesComposite.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.InstructionsComposite Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.InstructionsComposite}
{\xe \v dynamicAnalysis.InstructionsComposite}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
Inheritance diagram for dynamicAnalysis.InstructionsComposite:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdynamic_analysis_1_1_instructions_composite.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InstructionsComposite} (Composite parent, int style, File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Capstone.CsInsn[] {\b getAllInsn} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAllInsn} (Capstone.CsInsn[] allInsn)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkSubclass} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Composite to display the x86 instructions of a PE file \par
}{
Definition at line {\b 38} of file {\b InstructionsComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InstructionsComposite\:dynamicAnalysis.InstructionsComposite}
{\xe \v dynamicAnalysis.InstructionsComposite\:InstructionsComposite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.InstructionsComposite.InstructionsComposite (Composite  {\i parent}, int  {\i style}, File  {\i file})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the instructions composite.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{the parent that contains the composite \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{the SWT style \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the file that contains the x86 instructions \cell }
{\row }
}
}{
Definition at line {\b 75} of file {\b InstructionsComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkSubclass\:dynamicAnalysis.InstructionsComposite}
{\xe \v dynamicAnalysis.InstructionsComposite\:checkSubclass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.InstructionsComposite.checkSubclass (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check subclass. \par
}{
Definition at line {\b 422} of file {\b InstructionsComposite.java}.}\par
}
{\xe \v getAllInsn\:dynamicAnalysis.InstructionsComposite}
{\xe \v dynamicAnalysis.InstructionsComposite\:getAllInsn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Capstone.CsInsn[] dynamicAnalysis.InstructionsComposite.getAllInsn ()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Capstone instruction array.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the Capstone instruction array \par
}}}{
Definition at line {\b 403} of file {\b InstructionsComposite.java}.}\par
}
{\xe \v layout\:dynamicAnalysis.InstructionsComposite}
{\xe \v dynamicAnalysis.InstructionsComposite\:layout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.InstructionsComposite.layout ()}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Layout. \par
}{
Definition at line {\b 392} of file {\b InstructionsComposite.java}.}\par
}
{\xe \v setAllInsn\:dynamicAnalysis.InstructionsComposite}
{\xe \v dynamicAnalysis.InstructionsComposite\:setAllInsn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.InstructionsComposite.setAllInsn (Capstone.CsInsn[]  {\i allInsn})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Capstone instruction array.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i allInsn} \cell }{the Capstone instruction array \cell }
{\row }
}
}{
Definition at line {\b 413} of file {\b InstructionsComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/InstructionsComposite.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.LegacyWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tone} (int hz, int msecs)  throws LineUnavailableException  	  \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b main} (String[] args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b tone} (int hz, int msecs, double vol)  throws LineUnavailableException  	  \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b SAMPLE_RATE} = 8000f\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createContents} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Shell {\b shell}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The initial window used by the program. Now unused, included for demonstration purposes only. \par
}{
Definition at line {\b 36} of file {\b LegacyWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createContents\:dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow\:createContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.LegacyWindow.createContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create contents of the window. \par
}{
Definition at line {\b 136} of file {\b LegacyWindow.java}.}\par
}
{\xe \v main\:dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.LegacyWindow.main (String[]  {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main method.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{the arguments \cell }
{\row }
}
}{
Definition at line {\b 61} of file {\b LegacyWindow.java}.}\par
}
{\xe \v open\:dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.LegacyWindow.open ()}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open. \par
}{
Definition at line {\b 74} of file {\b LegacyWindow.java}.}\par
}
{\xe \v tone\:dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow\:tone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.LegacyWindow.tone (int  {\i hz}, int  {\i msecs}) throws LineUnavailableException}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tone.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hz} \cell }{the hz \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i msecs} \cell }{the msecs \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i LineUnavailableException} \cell }{the line unavailable exception \cell }
{\row }
}
}{
Definition at line {\b 96} of file {\b LegacyWindow.java}.}\par
}
{\xe \v tone\:dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow\:tone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.LegacyWindow.tone (int  {\i hz}, int  {\i msecs}, double  {\i vol}) throws LineUnavailableException{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tone.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hz} \cell }{the hz \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i msecs} \cell }{the msecs \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vol} \cell }{the vol \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i LineUnavailableException} \cell }{the line unavailable exception \cell }
{\row }
}
}{
Definition at line {\b 109} of file {\b LegacyWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v SAMPLE_RATE\:dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow\:SAMPLE_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float dynamicAnalysis.LegacyWindow.SAMPLE_RATE = 8000f{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sample rate. \par
}{
Definition at line {\b 87} of file {\b LegacyWindow.java}.}\par
}
{\xe \v shell\:dynamicAnalysis.LegacyWindow}
{\xe \v dynamicAnalysis.LegacyWindow\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Shell dynamicAnalysis.LegacyWindow.shell{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The shell. \par
}{
Definition at line {\b 39} of file {\b LegacyWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/LegacyWindow.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.MemoryComposite Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
Inheritance diagram for dynamicAnalysis.MemoryComposite:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdynamic_analysis_1_1_memory_composite.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryComposite} (Composite parent, int style, Color green)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getProcessId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProcessId} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getBytes} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBytes} (byte[] bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Color {\b getRed} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRed} (Color red)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkSubclass} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The composite to display the virtual memory in the GUI \par
}{
Definition at line {\b 42} of file {\b MemoryComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MemoryComposite\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:MemoryComposite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.MemoryComposite.MemoryComposite (Composite  {\i parent}, int  {\i style}, Color  {\i green})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the memory composite.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{the main window that acts as the parent \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{the SWT style applied to the composite \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i green} \cell }{the SWT color green \cell }
{\row }
}
}{
Definition at line {\b 85} of file {\b MemoryComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkSubclass\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:checkSubclass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryComposite.checkSubclass (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check subclass. \par
}{
Definition at line {\b 448} of file {\b MemoryComposite.java}.}\par
}
{\xe \v getBytes\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:getBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.MemoryComposite.getBytes ()}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the virtual memory space.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the virtual memory space byte array \par
}}}{
Definition at line {\b 229} of file {\b MemoryComposite.java}.}\par
}
{\xe \v getProcessId\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:getProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.MemoryComposite.getProcessId ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the process id.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the process id \par
}}}{
Definition at line {\b 197} of file {\b MemoryComposite.java}.}\par
}
{\xe \v getRed\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:getRed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Color dynamicAnalysis.MemoryComposite.getRed ()}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the SWT color red.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the SWT color red \par
}}}{
Definition at line {\b 249} of file {\b MemoryComposite.java}.}\par
}
{\xe \v setBytes\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:setBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryComposite.setBytes (byte[]  {\i bytes})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the virtual memory space.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{the new virtual memory space. \cell }
{\row }
}
}{
Definition at line {\b 239} of file {\b MemoryComposite.java}.}\par
}
{\xe \v setProcessId\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:setProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryComposite.setProcessId (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the process id.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i processId} \cell }{the new process id \cell }
{\row }
}
}{
Definition at line {\b 207} of file {\b MemoryComposite.java}.}\par
}
{\xe \v setRed\:dynamicAnalysis.MemoryComposite}
{\xe \v dynamicAnalysis.MemoryComposite\:setRed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryComposite.setRed (Color  {\i red})}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the SWT color red.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i red} \cell }{the new SWT color red \cell }
{\row }
}
}{
Definition at line {\b 258} of file {\b MemoryComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/MemoryComposite.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.MemoryWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MemoryWindow} (int processId, int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getProcessId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProcessId} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getBytes} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBytes} (byte[] bytes)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createBaseContents} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
synchronized void {\b createContents} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Shell {\b shell}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b MemoryWindow}. \par
}{
Definition at line {\b 29} of file {\b MemoryWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MemoryWindow\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:MemoryWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.MemoryWindow.MemoryWindow (int  {\i processId}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new memory window.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i processId} \cell }{the process id \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{the x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{the y \cell }
{\row }
}
}{
Definition at line {\b 94} of file {\b MemoryWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createBaseContents\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:createBaseContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryWindow.createBaseContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the base contents. \par
}{
Definition at line {\b 382} of file {\b MemoryWindow.java}.}\par
}
{\xe \v createContents\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:createContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
synchronized void dynamicAnalysis.MemoryWindow.createContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the contents. \par
}{
Definition at line {\b 454} of file {\b MemoryWindow.java}.}\par
}
{\xe \v getBytes\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:getBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.MemoryWindow.getBytes ()}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the bytes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the bytes \par
}}}{
Definition at line {\b 205} of file {\b MemoryWindow.java}.}\par
}
{\xe \v getProcessId\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:getProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.MemoryWindow.getProcessId ()}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the process id.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the process id \par
}}}{
Definition at line {\b 113} of file {\b MemoryWindow.java}.}\par
}
{\xe \v getX\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.MemoryWindow.getX ()}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the x.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the x \par
}}}{
Definition at line {\b 133} of file {\b MemoryWindow.java}.}\par
}
{\xe \v getY\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.MemoryWindow.getY ()}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the y.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the y \par
}}}{
Definition at line {\b 153} of file {\b MemoryWindow.java}.}\par
}
{\xe \v open\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryWindow.open ()}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open. \par
}{
Definition at line {\b 172} of file {\b MemoryWindow.java}.}\par
}
{\xe \v setBytes\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:setBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryWindow.setBytes (byte[]  {\i bytes})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the bytes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{the new bytes \cell }
{\row }
}
}{
Definition at line {\b 216} of file {\b MemoryWindow.java}.}\par
}
{\xe \v setProcessId\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:setProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryWindow.setProcessId (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the process id.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i processId} \cell }{the new process id \cell }
{\row }
}
}{
Definition at line {\b 123} of file {\b MemoryWindow.java}.}\par
}
{\xe \v setX\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:setX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryWindow.setX (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the x.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{the new x \cell }
{\row }
}
}{
Definition at line {\b 143} of file {\b MemoryWindow.java}.}\par
}
{\xe \v setY\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:setY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.MemoryWindow.setY (int  {\i y})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the y.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{the new y \cell }
{\row }
}
}{
Definition at line {\b 164} of file {\b MemoryWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v shell\:dynamicAnalysis.MemoryWindow}
{\xe \v dynamicAnalysis.MemoryWindow\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Shell dynamicAnalysis.MemoryWindow.shell{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The shell. \par
}{
Definition at line {\b 33} of file {\b MemoryWindow.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/MemoryWindow.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.Mnem Enum Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b getByte} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JNE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JMP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JL}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JBE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JAE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JA}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JLE}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Enum for mnemonics used by the x86 instruction set. \par
}{
Definition at line {\b 9} of file {\b Mnem.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getByte\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:getByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte dynamicAnalysis.Mnem.getByte ()}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the byte value of the jump instruction.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the byte value of the jump instruction \par
}}}{
Definition at line {\b 35} of file {\b Mnem.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v JA\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JA}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump Above. \par
}{
Definition at line {\b 26} of file {\b Mnem.java}.}\par
}
{\xe \v JAE\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JAE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JAE}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The jae. \par
}{
Definition at line {\b 22} of file {\b Mnem.java}.}\par
}
{\xe \v JB\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JB}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump Below. \par
}{
Definition at line {\b 24} of file {\b Mnem.java}.}\par
}
{\xe \v JBE\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JBE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JBE}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump Before or Equal. \par
}{
Definition at line {\b 18} of file {\b Mnem.java}.}\par
}
{\xe \v JE\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JE}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump if Equal. \par
}{
Definition at line {\b 20} of file {\b Mnem.java}.}\par
}
{\xe \v JL\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JL}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump Less than. \par
}{
Definition at line {\b 16} of file {\b Mnem.java}.}\par
}
{\xe \v JLE\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JLE}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump if Less or Equal. \par
}{
Definition at line {\b 28} of file {\b Mnem.java}.}\par
}
{\xe \v JMP\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JMP}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump. \par
}{
Definition at line {\b 14} of file {\b Mnem.java}.}\par
}
{\xe \v JNE\:dynamicAnalysis.Mnem}
{\xe \v dynamicAnalysis.Mnem\:JNE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Mnem.JNE}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jump Not Equal. \par
}{
Definition at line {\b 12} of file {\b Mnem.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this enum was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/Mnem.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.NetworkComposite Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.NetworkComposite}
{\xe \v dynamicAnalysis.NetworkComposite}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
Inheritance diagram for dynamicAnalysis.NetworkComposite:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdynamic_analysis_1_1_network_composite.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NetworkComposite} (Composite parent, int style, long pid)  throws PcapNativeException 	\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkSubclass} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The composite to monitor network traffic \par
}{
Definition at line {\b 48} of file {\b NetworkComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NetworkComposite\:dynamicAnalysis.NetworkComposite}
{\xe \v dynamicAnalysis.NetworkComposite\:NetworkComposite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.NetworkComposite.NetworkComposite (Composite  {\i parent}, int  {\i style}, long  {\i pid}) throws PcapNativeException}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates the network composite.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i parent} \cell }{the main window that acts as the parent \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{the SWT style applied to the network composite \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pid} \cell }{the unique process identifier \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PcapNativeException} \cell }{the pcap libraries' native exception \cell }
{\row }
}
}{
Definition at line {\b 92} of file {\b NetworkComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkSubclass\:dynamicAnalysis.NetworkComposite}
{\xe \v dynamicAnalysis.NetworkComposite\:checkSubclass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.NetworkComposite.checkSubclass (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check subclass. \par
}{
Definition at line {\b 387} of file {\b NetworkComposite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/NetworkComposite.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.NetworkStats Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.NetworkStats}
{\xe \v dynamicAnalysis.NetworkStats}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NetworkStats} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ActiveConnection}[] {\b getActiveConnections} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setActiveConnections} ({\b ActiveConnection}[] activeConnections)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retrieves statistics from the network \par
}{
Definition at line {\b 11} of file {\b NetworkStats.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NetworkStats\:dynamicAnalysis.NetworkStats}
{\xe \v dynamicAnalysis.NetworkStats\:NetworkStats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.NetworkStats.NetworkStats ()}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new network stats method. \par
}{
Definition at line {\b 20} of file {\b NetworkStats.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getActiveConnections\:dynamicAnalysis.NetworkStats}
{\xe \v dynamicAnalysis.NetworkStats\:getActiveConnections}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ActiveConnection}[] dynamicAnalysis.NetworkStats.getActiveConnections ()}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the active connections.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the active connections \par
}}}{
Definition at line {\b 86} of file {\b NetworkStats.java}.}\par
}
{\xe \v setActiveConnections\:dynamicAnalysis.NetworkStats}
{\xe \v dynamicAnalysis.NetworkStats\:setActiveConnections}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.NetworkStats.setActiveConnections ({\b ActiveConnection}[]  {\i activeConnections})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the active connections.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i activeConnections} \cell }{the new active connections \cell }
{\row }
}
}{
Definition at line {\b 96} of file {\b NetworkStats.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/NetworkStats.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.NetworkTraffic Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.NetworkTraffic}
{\xe \v dynamicAnalysis.NetworkTraffic}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b main} (String[] args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The class used for testing purposes relating to network traffic. Unused, included for demonstration purposes only. \par
}{
Definition at line {\b 26} of file {\b NetworkTraffic.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v main\:dynamicAnalysis.NetworkTraffic}
{\xe \v dynamicAnalysis.NetworkTraffic\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.NetworkTraffic.main (String[]  {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main method.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{the arguments \cell }
{\row }
}
}{
Definition at line {\b 33} of file {\b NetworkTraffic.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/NetworkTraffic.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.PacketTrace Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.PacketTrace}
{\xe \v dynamicAnalysis.PacketTrace}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PacketTrace} ()  throws PcapNativeException 	\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HashMap< String, String > {\b getDevices} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String[] {\b getAddresses} (String deviceName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ArrayList< Multimap< String, IpPacket > > {\b getPackets} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ArrayList< IpPacket > {\b getPackets} (String address, int attempts)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b PacketTrace}. Uses several maps to tie packets to addresses, and addresses to network interfaces. \par
}{
Definition at line {\b 30} of file {\b PacketTrace.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PacketTrace\:dynamicAnalysis.PacketTrace}
{\xe \v dynamicAnalysis.PacketTrace\:PacketTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.PacketTrace.PacketTrace () throws PcapNativeException}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new packet trace class.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PcapNativeException} \cell }{the Pcap native exception \cell }
{\row }
}
}{
Definition at line {\b 56} of file {\b PacketTrace.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getAddresses\:dynamicAnalysis.PacketTrace}
{\xe \v dynamicAnalysis.PacketTrace\:getAddresses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String[] dynamicAnalysis.PacketTrace.getAddresses (String  {\i deviceName})}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the string array containing all addresses from a network device.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i deviceName} \cell }{the name of the network device \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the addresses from the device \par
}}}{
Definition at line {\b 119} of file {\b PacketTrace.java}.}\par
}
{\xe \v getDevices\:dynamicAnalysis.PacketTrace}
{\xe \v dynamicAnalysis.PacketTrace\:getDevices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HashMap< String, String > dynamicAnalysis.PacketTrace.getDevices ()}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the hashmap of active devices. Will only contain devices that have packet activity.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the devices \par
}}}{
Definition at line {\b 100} of file {\b PacketTrace.java}.}\par
}
{\xe \v getPackets\:dynamicAnalysis.PacketTrace}
{\xe \v dynamicAnalysis.PacketTrace\:getPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArrayList< Multimap< String, IpPacket > > dynamicAnalysis.PacketTrace.getPackets ()}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all packets from all addresses.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the full list of packets \par
}}}{
Definition at line {\b 129} of file {\b PacketTrace.java}.}\par
}
{\xe \v getPackets\:dynamicAnalysis.PacketTrace}
{\xe \v dynamicAnalysis.PacketTrace\:getPackets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ArrayList< IpPacket > dynamicAnalysis.PacketTrace.getPackets (String  {\i address}, int  {\i attempts})}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the packets from a specific address. Has a timeout counter of 10 as it will be recursively called if there is a problem with concurrency.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i address} \cell }{the address to retrieve packets from \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i attempts} \cell }{the incrementing number of attempts to be recursively incremented \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the packets from the chosen address \par
}}}{
Definition at line {\b 141} of file {\b PacketTrace.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/PacketTrace.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.PEFile Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PEFile} (File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
File {\b getFile} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFile} (File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getOffset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b getVersion} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getInstructions} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPointer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b getBytes} ()  throws IOException 	\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBytes} (byte[] bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readFile} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b PEFile}. Retrieves and stores information on a Portable Executable relating to the file format \par
}{
Definition at line {\b 19} of file {\b PEFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PEFile\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:PEFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.PEFile.PEFile (File  {\i file})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new PE file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the PE file \cell }
{\row }
}
}{
Definition at line {\b 44} of file {\b PEFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getBytes\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:getBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.PEFile.getBytes () throws IOException}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all bytes contained in the PE file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the bytes contained in the PE file. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i IOException} \cell }{Signals that the file cannot be read or is not found \cell }
{\row }
}
}{
Definition at line {\b 142} of file {\b PEFile.java}.}\par
}
{\xe \v getFile\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:getFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
File dynamicAnalysis.PEFile.getFile ()}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the PE file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the PE file \par
}}}{
Definition at line {\b 54} of file {\b PEFile.java}.}\par
}
{\xe \v getInstructions\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:getInstructions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.PEFile.getInstructions ()}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the raw x86 instruction bytes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the raw x86 instruction bytes \par
}}}{
Definition at line {\b 94} of file {\b PEFile.java}.}\par
}
{\xe \v getOffset\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:getOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.PEFile.getOffset ()}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the offset.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the offset \par
}}}{
Definition at line {\b 74} of file {\b PEFile.java}.}\par
}
{\xe \v getPointer\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:getPointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.PEFile.getPointer ()}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the pointer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the pointer \par
}}}{
Definition at line {\b 121} of file {\b PEFile.java}.}\par
}
{\xe \v getVersion\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:getVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Version} dynamicAnalysis.PEFile.getVersion ()}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the PE file's version.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the version \par
}}}{
Definition at line {\b 84} of file {\b PEFile.java}.}\par
}
{\xe \v readFile\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:readFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.PEFile.readFile ()}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the PE file, populating fields that are stored \par
}{
Definition at line {\b 160} of file {\b PEFile.java}.}\par
}
{\xe \v setBytes\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:setBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.PEFile.setBytes (byte[]  {\i bytes})}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the bytes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{the new bytes \cell }
{\row }
}
}{
Definition at line {\b 152} of file {\b PEFile.java}.}\par
}
{\xe \v setFile\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:setFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.PEFile.setFile (File  {\i file})}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the PE file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the new PE file \cell }
{\row }
}
}{
Definition at line {\b 64} of file {\b PEFile.java}.}\par
}
{\xe \v toString\:dynamicAnalysis.PEFile}
{\xe \v dynamicAnalysis.PEFile\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.PEFile.toString ()}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string containing information on the PE file \par
}}}{
Definition at line {\b 199} of file {\b PEFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/PEFile.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.ProcessManager Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ProcessManager} (File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ProcessManager} (int pid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
File {\b getFile} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFile} (File file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Process {\b createProcess} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b getPid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getPidAsString} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getName} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String[] {\b getDLLs} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DllFile}[] {\b getDllFiles} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String[] {\b getFiles} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Process {\b getProcess} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProcess} (Process process)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b destroyProcess} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toString} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b ProcessManager}. Manages the created and accessed processes. \par
}{
Definition at line {\b 13} of file {\b ProcessManager.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ProcessManager\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:ProcessManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.ProcessManager.ProcessManager (File  {\i file})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new manager for processes when using a file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the file to be accessed \cell }
{\row }
}
}{
Definition at line {\b 42} of file {\b ProcessManager.java}.}\par
}
{\xe \v ProcessManager\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:ProcessManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.ProcessManager.ProcessManager (int  {\i pid})}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new manager for processes when using an already running process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pid} \cell }{the unique identifier for the process \cell }
{\row }
}
}{
Definition at line {\b 56} of file {\b ProcessManager.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createProcess\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:createProcess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Process dynamicAnalysis.ProcessManager.createProcess ()}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a new process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the process \par
}}}{
Definition at line {\b 89} of file {\b ProcessManager.java}.}\par
}
{\xe \v destroyProcess\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:destroyProcess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean dynamicAnalysis.ProcessManager.destroyProcess ()}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forcibly destroy process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true, if successfully destroyed \par
}}}{
Definition at line {\b 285} of file {\b ProcessManager.java}.}\par
}
{\xe \v getDllFiles\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getDllFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DllFile}[] dynamicAnalysis.ProcessManager.getDllFiles ()}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the DLL files in use by the process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the DLL files in use by the process \par
}}}{
Definition at line {\b 208} of file {\b ProcessManager.java}.}\par
}
{\xe \v getDLLs\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getDLLs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String[] dynamicAnalysis.ProcessManager.getDLLs ()}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the string array representation of DLLs in use by the process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string array representation of DLLs in use by the process \par
}}}{
Definition at line {\b 198} of file {\b ProcessManager.java}.}\par
}
{\xe \v getFile\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
File dynamicAnalysis.ProcessManager.getFile ()}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the file being accessed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the file being accessed. \par
}}}{
Definition at line {\b 69} of file {\b ProcessManager.java}.}\par
}
{\xe \v getFiles\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String[] dynamicAnalysis.ProcessManager.getFiles ()}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the files in use by the process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the files in use by the process \par
}}}{
Definition at line {\b 218} of file {\b ProcessManager.java}.}\par
}
{\xe \v getName\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ProcessManager.getName ()}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the name of the process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the name of the process \par
}}}{
Definition at line {\b 188} of file {\b ProcessManager.java}.}\par
}
{\xe \v getPid\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long dynamicAnalysis.ProcessManager.getPid ()}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the unique identifier of the process in use.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the unique identifier of the process in use \par
}}}{
Definition at line {\b 111} of file {\b ProcessManager.java}.}\par
}
{\xe \v getPidAsString\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getPidAsString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ProcessManager.getPidAsString ()}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the unique identifier of the process in use as a string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the unique identifier of the process in use as a string \par
}}}{
Definition at line {\b 121} of file {\b ProcessManager.java}.}\par
}
{\xe \v getProcess\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:getProcess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Process dynamicAnalysis.ProcessManager.getProcess ()}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the process \par
}}}{
Definition at line {\b 265} of file {\b ProcessManager.java}.}\par
}
{\xe \v setFile\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:setFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ProcessManager.setFile (File  {\i file})}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the file being accessed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the new file \cell }
{\row }
}
}{
Definition at line {\b 79} of file {\b ProcessManager.java}.}\par
}
{\xe \v setProcess\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:setProcess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.ProcessManager.setProcess (Process  {\i process})}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{the new process \cell }
{\row }
}
}{
Definition at line {\b 275} of file {\b ProcessManager.java}.}\par
}
{\xe \v toString\:dynamicAnalysis.ProcessManager}
{\xe \v dynamicAnalysis.ProcessManager\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.ProcessManager.toString ()}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
To string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the string containing values pertaining to the process manager \par
}}}{
Definition at line {\b 300} of file {\b ProcessManager.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/ProcessManager.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.ReadWrite Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite}
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b write} (String word, String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b writeLine} (String word, String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b delete} (String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getLength} (String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static String {\b getLine} (int number, String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b indexOf} (String word, String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b replace} (String oldWord, String newWord, String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b replace} (int index, String newWord, String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static boolean {\b isReady} (String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b deleteLine} (int index, String file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static String {\b toString} (String file)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper class for reading and writing to a text file. \par
}{
Definition at line {\b 10} of file {\b ReadWrite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v delete\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.ReadWrite.delete (String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file to write to \cell }
{\row }
}
}{
Definition at line {\b 65} of file {\b ReadWrite.java}.}\par
}
{\xe \v deleteLine\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:deleteLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.ReadWrite.deleteLine (int  {\i index}, String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Delete line at the specified index.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{the index to delete the line at \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file \cell }
{\row }
}
}{
Definition at line {\b 316} of file {\b ReadWrite.java}.}\par
}
{\xe \v getLength\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:getLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dynamicAnalysis.ReadWrite.getLength (String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the length.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file to write to \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the number of lines in the file \par
}}}{
Definition at line {\b 76} of file {\b ReadWrite.java}.}\par
}
{\xe \v getLine\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:getLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static String dynamicAnalysis.ReadWrite.getLine (int  {\i number}, String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the line at the specified index.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i number} \cell }{the index to retrieve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the file \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the line at the specified index \par
}}}{
Definition at line {\b 113} of file {\b ReadWrite.java}.}\par
}
{\xe \v indexOf\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:indexOf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dynamicAnalysis.ReadWrite.indexOf (String  {\i word}, String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
First index that the specified string is found at. Returns -1 if it is not found.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i word} \cell }{the string to be searched in the text file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file to be searched \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the index that the string is located in the text file, -1 if it is not found \par
}}}{
Definition at line {\b 150} of file {\b ReadWrite.java}.}\par
}
{\xe \v isReady\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:isReady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static boolean dynamicAnalysis.ReadWrite.isReady (String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the text file is ready to be written and read from.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true, if is ready to be read and wrote to \par
}}}{
Definition at line {\b 293} of file {\b ReadWrite.java}.}\par
}
{\xe \v replace\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.ReadWrite.replace (int  {\i index}, String  {\i newWord}, String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace the line at the specified index with a new line.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{the index to be replaces \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newWord} \cell }{the new word to replace at the index \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file \cell }
{\row }
}
}{
Definition at line {\b 240} of file {\b ReadWrite.java}.}\par
}
{\xe \v replace\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.ReadWrite.replace (String  {\i oldWord}, String  {\i newWord}, String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replace the first occurence of a line with another.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oldWord} \cell }{the line to be replaces \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newWord} \cell }{the new line to replace the first occurence of oldWord \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file \cell }
{\row }
}
}{
Definition at line {\b 189} of file {\b ReadWrite.java}.}\par
}
{\xe \v toString\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static String dynamicAnalysis.ReadWrite.toString (String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the entire text file and returns as a string\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the entire contents of the text file \par
}}}{
Definition at line {\b 366} of file {\b ReadWrite.java}.}\par
}
{\xe \v write\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.ReadWrite.write (String  {\i word}, String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write to a file. Clears existing lines in the file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i word} \cell }{the string to be written to the text file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file to write to \cell }
{\row }
}
}{
Definition at line {\b 19} of file {\b ReadWrite.java}.}\par
}
{\xe \v writeLine\:dynamicAnalysis.ReadWrite}
{\xe \v dynamicAnalysis.ReadWrite\:writeLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.ReadWrite.writeLine (String  {\i word}, String  {\i file}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write to a file. Keeps existing lines in the file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i word} \cell }{the string to be written to the text file \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{the text file to write to \cell }
{\row }
}
}{
Definition at line {\b 46} of file {\b ReadWrite.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/ReadWrite.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.SelectFile Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectFile} (int x, int y, boolean pidMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b isPidMode} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPidMode} (boolean pidMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getText} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPid} (int pid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b isDisposed} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b focus} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createContents} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Shell {\b shell}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class {\b SelectFile}. Displays a window to choose a file from. Can also select a process. \par
}{
Definition at line {\b 24} of file {\b SelectFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SelectFile\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:SelectFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.SelectFile.SelectFile (int  {\i x}, int  {\i y}, boolean  {\i pidMode})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Launch the file selection window.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{the X value to position at \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{the Y value to position at \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pidMode} \cell }{whether to read a file or a process \cell }
{\row }
}
}{
Definition at line {\b 55} of file {\b SelectFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createContents\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:createContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectFile.createContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create contents of the window. \par
}{
Definition at line {\b 88} of file {\b SelectFile.java}.}\par
}
{\xe \v focus\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:focus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectFile.focus ()}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force focus on the file selection window. \par
}{
Definition at line {\b 345} of file {\b SelectFile.java}.}\par
}
{\xe \v getPid\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:getPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.SelectFile.getPid ()}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the PID.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the PID \par
}}}{
Definition at line {\b 317} of file {\b SelectFile.java}.}\par
}
{\xe \v getText\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:getText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String dynamicAnalysis.SelectFile.getText ()}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the file path.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the file path \par
}}}{
Definition at line {\b 307} of file {\b SelectFile.java}.}\par
}
{\xe \v getX\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.SelectFile.getX ()}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the X value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the X value \par
}}}{
Definition at line {\b 247} of file {\b SelectFile.java}.}\par
}
{\xe \v getY\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.SelectFile.getY ()}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Y value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the Y value \par
}}}{
Definition at line {\b 267} of file {\b SelectFile.java}.}\par
}
{\xe \v isDisposed\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:isDisposed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean dynamicAnalysis.SelectFile.isDisposed ()}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window is disposed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true, if window is disposed \par
}}}{
Definition at line {\b 337} of file {\b SelectFile.java}.}\par
}
{\xe \v isPidMode\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:isPidMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean dynamicAnalysis.SelectFile.isPidMode ()}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the window should read a process or a file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true, if is in pid mode \par
}}}{
Definition at line {\b 287} of file {\b SelectFile.java}.}\par
}
{\xe \v open\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectFile.open ()}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the window. \par
}{
Definition at line {\b 66} of file {\b SelectFile.java}.}\par
}
{\xe \v setPid\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:setPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectFile.setPid (int  {\i pid})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the PID.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pid} \cell }{the new PID \cell }
{\row }
}
}{
Definition at line {\b 327} of file {\b SelectFile.java}.}\par
}
{\xe \v setPidMode\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:setPidMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectFile.setPidMode (boolean  {\i pidMode})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the pid mode.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pidMode} \cell }{the new pid mode \cell }
{\row }
}
}{
Definition at line {\b 297} of file {\b SelectFile.java}.}\par
}
{\xe \v setX\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:setX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectFile.setX (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the X value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{the new X value \cell }
{\row }
}
}{
Definition at line {\b 257} of file {\b SelectFile.java}.}\par
}
{\xe \v setY\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:setY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectFile.setY (int  {\i y})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Y value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{the new Y value \cell }
{\row }
}
}{
Definition at line {\b 277} of file {\b SelectFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v shell\:dynamicAnalysis.SelectFile}
{\xe \v dynamicAnalysis.SelectFile\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Shell dynamicAnalysis.SelectFile.shell{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The SWT shell for the window. \par
}{
Definition at line {\b 28} of file {\b SelectFile.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/SelectFile.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.SelectProcess Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess}
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectProcess} (String[] names, int[] pids, String[] memory, int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String[] {\b getNames} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNames} (String[] names)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int[] {\b getPids} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPids} (int[] pids)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String[] {\b getMemory} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMemory} (String[] memory)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (int y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createContents} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Shell {\b shell}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window to choose a currently running process to hook into. Displays a list of all running processes \par
}{
Definition at line {\b 33} of file {\b SelectProcess.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SelectProcess\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:SelectProcess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.SelectProcess.SelectProcess (String[]  {\i names}, int[]  {\i pids}, String[]  {\i memory}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Launch the file selection window.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i names} \cell }{the names of the processes \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pids} \cell }{the PIDs of the processes \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i memory} \cell }{the memory that the processes use \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{the X value for positioning \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{the Y value for positioning \cell }
{\row }
}
}{
Definition at line {\b 76} of file {\b SelectProcess.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createContents\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:createContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectProcess.createContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create contents of the window. \par
}{
Definition at line {\b 296} of file {\b SelectProcess.java}.}\par
}
{\xe \v getMemory\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:getMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String[] dynamicAnalysis.SelectProcess.getMemory ()}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the memory used by the processes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the memory used by the processes \par
}}}{
Definition at line {\b 169} of file {\b SelectProcess.java}.}\par
}
{\xe \v getNames\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:getNames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String[] dynamicAnalysis.SelectProcess.getNames ()}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the names of the processes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the names of the processes \par
}}}{
Definition at line {\b 109} of file {\b SelectProcess.java}.}\par
}
{\xe \v getPid\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:getPid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.SelectProcess.getPid ()}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the unique identifier of a process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the unique identifier of a process \par
}}}{
Definition at line {\b 149} of file {\b SelectProcess.java}.}\par
}
{\xe \v getPids\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:getPids}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int[] dynamicAnalysis.SelectProcess.getPids ()}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the unique identifiers of the processes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the unique identifiers of the processes \par
}}}{
Definition at line {\b 129} of file {\b SelectProcess.java}.}\par
}
{\xe \v getX\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.SelectProcess.getX ()}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the X value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the X value \par
}}}{
Definition at line {\b 189} of file {\b SelectProcess.java}.}\par
}
{\xe \v getY\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.SelectProcess.getY ()}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Y value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the Y value \par
}}}{
Definition at line {\b 209} of file {\b SelectProcess.java}.}\par
}
{\xe \v open\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectProcess.open ()}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the window. \par
}{
Definition at line {\b 88} of file {\b SelectProcess.java}.}\par
}
{\xe \v setMemory\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:setMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectProcess.setMemory (String[]  {\i memory})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the memory used by the processes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i memory} \cell }{the new memory used by the processes \cell }
{\row }
}
}{
Definition at line {\b 179} of file {\b SelectProcess.java}.}\par
}
{\xe \v setNames\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:setNames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectProcess.setNames (String[]  {\i names})}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the names of the processes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i names} \cell }{the new names of the processes \cell }
{\row }
}
}{
Definition at line {\b 119} of file {\b SelectProcess.java}.}\par
}
{\xe \v setPids\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:setPids}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectProcess.setPids (int[]  {\i pids})}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the unique identifiers of the processes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pids} \cell }{the new unique identifiers of the processes \cell }
{\row }
}
}{
Definition at line {\b 139} of file {\b SelectProcess.java}.}\par
}
{\xe \v setX\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:setX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectProcess.setX (int  {\i x})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the X value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{the new X value \cell }
{\row }
}
}{
Definition at line {\b 199} of file {\b SelectProcess.java}.}\par
}
{\xe \v setY\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:setY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.SelectProcess.setY (int  {\i y})}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the Y value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{the new Y value \cell }
{\row }
}
}{
Definition at line {\b 219} of file {\b SelectProcess.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v shell\:dynamicAnalysis.SelectProcess}
{\xe \v dynamicAnalysis.SelectProcess\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Shell dynamicAnalysis.SelectProcess.shell{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The shell for the process selection window. \par
}{
Definition at line {\b 37} of file {\b SelectProcess.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/SelectProcess.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
org.eclipse.wb.swt.SWTResourceManager Class Reference\par \pard\plain 
{\tc\tcl2 \v org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Color {\b getColor} (int systemColorID)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Color {\b getColor} (int r, int g, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Color {\b getColor} (RGB rgb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b disposeColors} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Image {\b getImage} (String path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Image {\b getImage} (Class<?> clazz, String path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Image {\b decorateImage} (Image baseImage, Image decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Image {\b decorateImage} (final Image baseImage, final Image decorator, final int corner)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b disposeImages} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Font {\b getFont} (String name, int height, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Font {\b getFont} (String name, int size, int style, boolean strikeout, boolean underline)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Font {\b getBoldFont} (Font baseFont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b disposeFonts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Cursor {\b getCursor} (int id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b disposeCursors} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dispose} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static final int {\b TOP_LEFT} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static final int {\b TOP_RIGHT} = 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static final int {\b BOTTOM_LEFT} = 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static final int {\b BOTTOM_RIGHT} = 4\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Image {\b getImage} (InputStream stream)  throws IOException \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static final int {\b LAST_CORNER_KEY} = 5\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utility class for managing OS resources associated with SWT controls such as colors, fonts, images, etc. \par
!!! IMPORTANT !!! Application code must explicitly invoke the {\f2 {\b dispose()}}  method to release the operating system resources managed by cached objects when those objects and OS resources are no longer needed (e.g. on application shutdown) \par
This class may be freely distributed as part of any application or plugin. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
scheglov_ke \par
Dan Rubel \par
}}}{
Definition at line {\b 43} of file {\b SWTResourceManager.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v decorateImage\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:decorateImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Image org.eclipse.wb.swt.SWTResourceManager.decorateImage (final Image  {\i baseImage}, final Image  {\i decorator}, final int  {\i corner}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an {\f2 {\b Image}}  composed of a base image decorated by another image.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i baseImage} \cell }{the base {\f2 {\b Image}}  that should be decorated \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i decorator} \cell }{the {\f2 {\b Image}}  to decorate the base image \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i corner} \cell }{the corner to place decorator image \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the resulting decorated {\f2 {\b Image}}  \par
}}}{
Definition at line {\b 233} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v decorateImage\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:decorateImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Image org.eclipse.wb.swt.SWTResourceManager.decorateImage (Image  {\i baseImage}, Image  {\i decorator}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an {\f2 {\b Image}}  composed of a base image decorated by another image.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i baseImage} \cell }{the base {\f2 {\b Image}}  that should be decorated \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i decorator} \cell }{the {\f2 {\b Image}}  to decorate the base image \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 {\b Image}}  The resulting decorated image \par
}}}{
Definition at line {\b 219} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v dispose\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:dispose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void org.eclipse.wb.swt.SWTResourceManager.dispose (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dispose of cached objects and their underlying OS resources. This should only be called when the cached objects are no longer needed (e.g. on application shutdown). \par
}{
Definition at line {\b 441} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v disposeColors\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:disposeColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void org.eclipse.wb.swt.SWTResourceManager.disposeColors (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dispose of all the cached {\f2 {\b Color}} 's. \par
}{
Definition at line {\b 94} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v disposeCursors\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:disposeCursors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void org.eclipse.wb.swt.SWTResourceManager.disposeCursors (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dispose all of the cached cursors. \par
}{
Definition at line {\b 426} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v disposeFonts\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:disposeFonts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void org.eclipse.wb.swt.SWTResourceManager.disposeFonts (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dispose all of the cached {\f2 {\b Font}} 's. \par
}{
Definition at line {\b 386} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v disposeImages\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:disposeImages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void org.eclipse.wb.swt.SWTResourceManager.disposeImages (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dispose all of the cached {\f2 {\b Image}} 's. \par
}{
Definition at line {\b 275} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getBoldFont\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getBoldFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Font org.eclipse.wb.swt.SWTResourceManager.getBoldFont (Font  {\i baseFont}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a bold version of the given {\f2 {\b Font}} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i baseFont} \cell }{the {\f2 {\b Font}}  for which a bold version is desired \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the bold version of the given {\f2 {\b Font}}  \par
}}}{
Definition at line {\b 373} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getColor\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Color org.eclipse.wb.swt.SWTResourceManager.getColor (int  {\i r}, int  {\i g}, int  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a {\f2 {\b Color}}  given its red, green and blue component values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i r} \cell }{the red component of the color \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i g} \cell }{the green component of the color \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i b} \cell }{the blue component of the color \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the {\f2 {\b Color}}  matching the given red, green and blue component values \par
}}}{
Definition at line {\b 72} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getColor\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Color org.eclipse.wb.swt.SWTResourceManager.getColor (int  {\i systemColorID}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the system {\f2 {\b Color}}  matching the specific ID.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i systemColorID} \cell }{the ID value for the color \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the system {\f2 {\b Color}}  matching the specific ID \par
}}}{
Definition at line {\b 57} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getColor\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Color org.eclipse.wb.swt.SWTResourceManager.getColor (RGB  {\i rgb}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a {\f2 {\b Color}}  given its RGB value.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rgb} \cell }{the {\f2 {\b RGB}}  value of the color \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the {\f2 {\b Color}}  matching the RGB value \par
}}}{
Definition at line {\b 82} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getCursor\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getCursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Cursor org.eclipse.wb.swt.SWTResourceManager.getCursor (int  {\i id}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the system cursor matching the specific ID.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{int The ID value for the cursor \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Cursor The system cursor matching the specific ID \par
}}}{
Definition at line {\b 414} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getFont\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Font org.eclipse.wb.swt.SWTResourceManager.getFont (String  {\i name}, int  {\i height}, int  {\i style}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a {\f2 {\b Font}}  based on its name, height and style.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{the name of the font \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{the height of the font \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{the style of the font \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 {\b Font}}  The font matching the name, height and style \par
}}}{
Definition at line {\b 321} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getFont\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Font org.eclipse.wb.swt.SWTResourceManager.getFont (String  {\i name}, int  {\i size}, int  {\i style}, boolean  {\i strikeout}, boolean  {\i underline}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a {\f2 {\b Font}}  based on its name, height and style. Windows-specific strikeout and underline flags are also supported.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{the name of the font \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{the size of the font \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{the style of the font \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i strikeout} \cell }{the strikeout flag (warning: Windows only) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i underline} \cell }{the underline flag (warning: Windows only) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 {\b Font}}  The font matching the name, height, style, strikeout and underline \par
}}}{
Definition at line {\b 340} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getImage\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Image org.eclipse.wb.swt.SWTResourceManager.getImage (Class<?>  {\i clazz}, String  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an {\f2 {\b Image}}  stored in the file at the specified path relative to the specified class.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i clazz} \cell }{the {\f2 {\b Class}}  relative to which to find the image \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{the path to the image file, if starts with {\f2 '/'}  \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the {\f2 {\b Image}}  stored in the file at the specified path \par
}}}{
Definition at line {\b 157} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getImage\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Image org.eclipse.wb.swt.SWTResourceManager.getImage (InputStream  {\i stream}) throws IOException{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an {\f2 {\b Image}}  encoded by the specified {\f2 {\b InputStream}} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stream} \cell }{the {\f2 {\b InputStream}}  encoding the image data \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the {\f2 {\b Image}}  encoded by the specified input stream \par
}}}{
Definition at line {\b 116} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v getImage\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:getImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Image org.eclipse.wb.swt.SWTResourceManager.getImage (String  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an {\f2 {\b Image}}  stored in the file at the specified path.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{the path to the image file \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the {\f2 {\b Image}}  stored in the file at the specified path \par
}}}{
Definition at line {\b 135} of file {\b SWTResourceManager.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v BOTTOM_LEFT\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:BOTTOM_LEFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final int org.eclipse.wb.swt.SWTResourceManager.BOTTOM_LEFT = 3{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Style constant for placing decorator image in bottom left corner of base image. \par
}{
Definition at line {\b 196} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v BOTTOM_RIGHT\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:BOTTOM_RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final int org.eclipse.wb.swt.SWTResourceManager.BOTTOM_RIGHT = 4{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Style constant for placing decorator image in bottom right corner of base image. \par
}{
Definition at line {\b 200} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v LAST_CORNER_KEY\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:LAST_CORNER_KEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final int org.eclipse.wb.swt.SWTResourceManager.LAST_CORNER_KEY = 5{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal value. \par
}{
Definition at line {\b 204} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v TOP_LEFT\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:TOP_LEFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final int org.eclipse.wb.swt.SWTResourceManager.TOP_LEFT = 1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Style constant for placing decorator image in top left corner of base image. \par
}{
Definition at line {\b 188} of file {\b SWTResourceManager.java}.}\par
}
{\xe \v TOP_RIGHT\:org.eclipse.wb.swt.SWTResourceManager}
{\xe \v org.eclipse.wb.swt.SWTResourceManager\:TOP_RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final int org.eclipse.wb.swt.SWTResourceManager.TOP_RIGHT = 2{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Style constant for placing decorator image in top right corner of base image. \par
}{
Definition at line {\b 192} of file {\b SWTResourceManager.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/org/eclipse/wb/swt/SWTResourceManager.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.test Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.test}
{\xe \v dynamicAnalysis.test}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b main} (String[] args)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createContents} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Shell {\b shell}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Class test. \par
}{
Definition at line {\b 21} of file {\b test.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createContents\:dynamicAnalysis.test}
{\xe \v dynamicAnalysis.test\:createContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.test.createContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create contents of the window. \par
}{
Definition at line {\b 74} of file {\b test.java}.}\par
}
{\xe \v main\:dynamicAnalysis.test}
{\xe \v dynamicAnalysis.test\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.test.main (String[]  {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Launch the application.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{the arguments \cell }
{\row }
}
}{
Definition at line {\b 41} of file {\b test.java}.}\par
}
{\xe \v open\:dynamicAnalysis.test}
{\xe \v dynamicAnalysis.test\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.test.open ()}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the window. \par
}{
Definition at line {\b 56} of file {\b test.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v shell\:dynamicAnalysis.test}
{\xe \v dynamicAnalysis.test\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Shell dynamicAnalysis.test.shell{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The shell. \par
}{
Definition at line {\b 25} of file {\b test.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/test.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.Version Enum Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.Version}
{\xe \v dynamicAnalysis.Version}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b getValue} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b x32} =(false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b x64} =(true)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b Version} enum. Translates a boolean value into either x32 or x64 for a PE file \par
}{
Definition at line {\b 9} of file {\b Version.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getValue\:dynamicAnalysis.Version}
{\xe \v dynamicAnalysis.Version\:getValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean dynamicAnalysis.Version.getValue ()}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the boolean value from the PE version.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the boolean value \par
}}}{
Definition at line {\b 34} of file {\b Version.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v x32\:dynamicAnalysis.Version}
{\xe \v dynamicAnalysis.Version\:x32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Version.x32 =(false)}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The x32 value, set to false. \par
}{
Definition at line {\b 12} of file {\b Version.java}.}\par
}
{\xe \v x64\:dynamicAnalysis.Version}
{\xe \v dynamicAnalysis.Version\:x64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.Version.x64 =(true)}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The x64 value, set to true. \par
}{
Definition at line {\b 15} of file {\b Version.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this enum was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/Version.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.VirtualMemory Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.VirtualMemory}
{\xe \v dynamicAnalysis.VirtualMemory}
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VirtualMemory} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getProcessId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setProcessId} (int processId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b readMemory} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Top level loader to call VirtualMemory.cpp through Java Native Interface. Retrieves the virtual memory from a given process ID. \par
}{
Definition at line {\b 11} of file {\b VirtualMemory.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v VirtualMemory\:dynamicAnalysis.VirtualMemory}
{\xe \v dynamicAnalysis.VirtualMemory\:VirtualMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamicAnalysis.VirtualMemory.VirtualMemory (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new virtual memory with the process ID.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i processId} \cell }{the process ID to retrieve the virtual memory space from \cell }
{\row }
}
}{
Definition at line {\b 32} of file {\b VirtualMemory.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getProcessId\:dynamicAnalysis.VirtualMemory}
{\xe \v dynamicAnalysis.VirtualMemory\:getProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.VirtualMemory.getProcessId ()}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the unique identifier from the selected process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the unique identifier of the process \par
}}}{
Definition at line {\b 42} of file {\b VirtualMemory.java}.}\par
}
{\xe \v readMemory\:dynamicAnalysis.VirtualMemory}
{\xe \v dynamicAnalysis.VirtualMemory\:readMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] dynamicAnalysis.VirtualMemory.readMemory ()}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calls the C++ function to read the virtual memory space, given a process ID.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
the full virtual memory space of the process \par
}}}{
Definition at line {\b 75} of file {\b VirtualMemory.java}.}\par
}
{\xe \v setProcessId\:dynamicAnalysis.VirtualMemory}
{\xe \v dynamicAnalysis.VirtualMemory\:setProcessId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.VirtualMemory.setProcessId (int  {\i processId})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the unique identifier for the process.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i processId} \cell }{the new unique identifier for the selected process. \cell }
{\row }
}
}{
Definition at line {\b 52} of file {\b VirtualMemory.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/VirtualMemory.java\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis.Window Class Reference\par \pard\plain 
{\tc\tcl2 \v dynamicAnalysis.Window}
{\xe \v dynamicAnalysis.Window}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b main} (String[] args)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b processId}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createContents} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Shell {\b shell}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main window that is loaded when the program is first run. Contains most functionality. \par
}{
Definition at line {\b 49} of file {\b Window.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createContents\:dynamicAnalysis.Window}
{\xe \v dynamicAnalysis.Window\:createContents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.Window.createContents (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create contents of the window. \par
}{
Definition at line {\b 130} of file {\b Window.java}.}\par
}
{\xe \v main\:dynamicAnalysis.Window}
{\xe \v dynamicAnalysis.Window\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dynamicAnalysis.Window.main (String[]  {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Launch the application.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{the arguments \cell }
{\row }
}
}{
Definition at line {\b 81} of file {\b Window.java}.}\par
}
{\xe \v open\:dynamicAnalysis.Window}
{\xe \v dynamicAnalysis.Window\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dynamicAnalysis.Window.open ()}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open the window. \par
}{
Definition at line {\b 98} of file {\b Window.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v processId\:dynamicAnalysis.Window}
{\xe \v dynamicAnalysis.Window\:processId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dynamicAnalysis.Window.processId{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The process id. \par
}{
Definition at line {\b 68} of file {\b Window.java}.}\par
}
{\xe \v shell\:dynamicAnalysis.Window}
{\xe \v dynamicAnalysis.Window\:shell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Shell dynamicAnalysis.Window.shell{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The window's SWT shell. \par
}{
Definition at line {\b 53} of file {\b Window.java}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/dynamicAnalysis/Window.java\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis_ExecuteCode.h\par \pard\plain 
{\tc\tcl2 \v bin/dynamicAnalysis/dynamicAnalysis_ExecuteCode.h}
{\xe \v bin/dynamicAnalysis/dynamicAnalysis_ExecuteCode.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* DO NOT EDIT THIS FILE - it is machine generated */}\par
00002 {\cf21 #include <jni.h>}\par
00003 {\cf20 /* Header for class dynamicAnalysis_ExecuteCode */}\par
00004 \par
00005 {\cf21 #ifndef _Included_dynamicAnalysis_ExecuteCode}\par
00006 {\cf21 #define _Included_dynamicAnalysis_ExecuteCode}\par
00007 {\cf21 #ifdef __cplusplus}\par
00008 {\cf17 extern} {\cf22 "C"} \{\par
00009 {\cf21 #endif}\par
00010 {\cf20 /*}\par
00011 {\cf20  * Class:     dynamicAnalysis_ExecuteCode}\par
00012 {\cf20  * Method:    executeInstruction}\par
00013 {\cf20  * Signature: (B)V}\par
00014 {\cf20  */}\par
00015 JNIEXPORT {\cf18 void} JNICALL Java_dynamicAnalysis_ExecuteCode_executeInstruction\par
00016   (JNIEnv *, jobject, jbyte);\par
00017 {\cf20 /*}\par
00018 {\cf20  * Class:     dynamicAnalysis_ExecuteCode}\par
00019 {\cf20  * Method:    read}\par
00020 {\cf20  * Signature: (V)[B}\par
00021 {\cf20  */}\par
00022 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_ExecuteCode_read\par
00023   (JNIEnv *, jobject);\par
00024 \par
00025 {\cf21 #ifdef __cplusplus}\par
00026 \}\par
00027 {\cf21 #endif}\par
00028 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis_ExecuteCode.h\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/dynamicAnalysis_ExecuteCode.h}
{\xe \v src/dynamicAnalysis/dynamicAnalysis_ExecuteCode.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* DO NOT EDIT THIS FILE - it is machine generated */}\par
00002 {\cf21 #include <jni.h>}\par
00003 {\cf20 /* Header for class dynamicAnalysis_ExecuteCode */}\par
00004 \par
00005 {\cf21 #ifndef _Included_dynamicAnalysis_ExecuteCode}\par
00006 {\cf21 #define _Included_dynamicAnalysis_ExecuteCode}\par
00007 {\cf21 #ifdef __cplusplus}\par
00008 {\cf17 extern} {\cf22 "C"} \{\par
00009 {\cf21 #endif}\par
00010 {\cf20 /*}\par
00011 {\cf20  * Class:     dynamicAnalysis_ExecuteCode}\par
00012 {\cf20  * Method:    executeInstruction}\par
00013 {\cf20  * Signature: (B)V}\par
00014 {\cf20  */}\par
00015 JNIEXPORT {\cf18 void} JNICALL Java_dynamicAnalysis_ExecuteCode_executeInstruction\par
00016   (JNIEnv *, jobject, jbyte);\par
00017 {\cf20 /*}\par
00018 {\cf20  * Class:     dynamicAnalysis_ExecuteCode}\par
00019 {\cf20  * Method:    read}\par
00020 {\cf20  * Signature: (V)[B}\par
00021 {\cf20  */}\par
00022 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_ExecuteCode_read\par
00023   (JNIEnv *, jobject);\par
00024 \par
00025 {\cf21 #ifdef __cplusplus}\par
00026 \}\par
00027 {\cf21 #endif}\par
00028 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis_ExecuteCode.h\par \pard\plain 
{\tc\tcl2 \v target/classes/dynamicAnalysis/dynamicAnalysis_ExecuteCode.h}
{\xe \v target/classes/dynamicAnalysis/dynamicAnalysis_ExecuteCode.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* DO NOT EDIT THIS FILE - it is machine generated */}\par
00002 {\cf21 #include <jni.h>}\par
00003 {\cf20 /* Header for class dynamicAnalysis_ExecuteCode */}\par
00004 \par
00005 {\cf21 #ifndef _Included_dynamicAnalysis_ExecuteCode}\par
00006 {\cf21 #define _Included_dynamicAnalysis_ExecuteCode}\par
00007 {\cf21 #ifdef __cplusplus}\par
00008 {\cf17 extern} {\cf22 "C"} \{\par
00009 {\cf21 #endif}\par
00010 {\cf20 /*}\par
00011 {\cf20  * Class:     dynamicAnalysis_ExecuteCode}\par
00012 {\cf20  * Method:    executeInstruction}\par
00013 {\cf20  * Signature: (B)V}\par
00014 {\cf20  */}\par
00015 JNIEXPORT {\cf18 void} JNICALL Java_dynamicAnalysis_ExecuteCode_executeInstruction\par
00016   (JNIEnv *, jobject, jbyte);\par
00017 {\cf20 /*}\par
00018 {\cf20  * Class:     dynamicAnalysis_ExecuteCode}\par
00019 {\cf20  * Method:    read}\par
00020 {\cf20  * Signature: (V)[B}\par
00021 {\cf20  */}\par
00022 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_ExecuteCode_read\par
00023   (JNIEnv *, jobject);\par
00024 \par
00025 {\cf21 #ifdef __cplusplus}\par
00026 \}\par
00027 {\cf21 #endif}\par
00028 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis_VirtualMemory.h\par \pard\plain 
{\tc\tcl2 \v bin/dynamicAnalysis/dynamicAnalysis_VirtualMemory.h}
{\xe \v bin/dynamicAnalysis/dynamicAnalysis_VirtualMemory.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* DO NOT EDIT THIS FILE - it is machine generated */}\par
00002 {\cf21 #include <jni.h>}\par
00003 {\cf20 /* Header for class dynamicAnalysis_VirtualMemory */}\par
00004 \par
00005 {\cf21 #ifndef _Included_dynamicAnalysis_VirtualMemory}\par
00006 {\cf21 #define _Included_dynamicAnalysis_VirtualMemory}\par
00007 {\cf21 #ifdef __cplusplus}\par
00008 {\cf17 extern} {\cf22 "C"} \{\par
00009 {\cf21 #endif}\par
00010 {\cf20 /*}\par
00011 {\cf20  * Class:     dynamicAnalysis_VirtualMemory}\par
00012 {\cf20  * Method:    scanProcess}\par
00013 {\cf20  * Signature: (I)[B}\par
00014 {\cf20  */}\par
00015 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_VirtualMemory_scanProcess\par
00016   (JNIEnv *, jobject, jint);\par
00017 \par
00018 {\cf21 #ifdef __cplusplus}\par
00019 \}\par
00020 {\cf21 #endif}\par
00021 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis_VirtualMemory.h\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/dynamicAnalysis_VirtualMemory.h}
{\xe \v src/dynamicAnalysis/dynamicAnalysis_VirtualMemory.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* DO NOT EDIT THIS FILE - it is machine generated */}\par
00002 {\cf21 #include <jni.h>}\par
00003 {\cf20 /* Header for class dynamicAnalysis_VirtualMemory */}\par
00004 \par
00005 {\cf21 #ifndef _Included_dynamicAnalysis_VirtualMemory}\par
00006 {\cf21 #define _Included_dynamicAnalysis_VirtualMemory}\par
00007 {\cf21 #ifdef __cplusplus}\par
00008 {\cf17 extern} {\cf22 "C"} \{\par
00009 {\cf21 #endif}\par
00010 {\cf20 /*}\par
00011 {\cf20  * Class:     dynamicAnalysis_VirtualMemory}\par
00012 {\cf20  * Method:    scanProcess}\par
00013 {\cf20  * Signature: (I)[B}\par
00014 {\cf20  */}\par
00015 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_VirtualMemory_scanProcess\par
00016   (JNIEnv *, jobject, jint);\par
00017 \par
00018 {\cf21 #ifdef __cplusplus}\par
00019 \}\par
00020 {\cf21 #endif}\par
00021 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dynamicAnalysis_VirtualMemory.h\par \pard\plain 
{\tc\tcl2 \v target/classes/dynamicAnalysis/dynamicAnalysis_VirtualMemory.h}
{\xe \v target/classes/dynamicAnalysis/dynamicAnalysis_VirtualMemory.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* DO NOT EDIT THIS FILE - it is machine generated */}\par
00002 {\cf21 #include <jni.h>}\par
00003 {\cf20 /* Header for class dynamicAnalysis_VirtualMemory */}\par
00004 \par
00005 {\cf21 #ifndef _Included_dynamicAnalysis_VirtualMemory}\par
00006 {\cf21 #define _Included_dynamicAnalysis_VirtualMemory}\par
00007 {\cf21 #ifdef __cplusplus}\par
00008 {\cf17 extern} {\cf22 "C"} \{\par
00009 {\cf21 #endif}\par
00010 {\cf20 /*}\par
00011 {\cf20  * Class:     dynamicAnalysis_VirtualMemory}\par
00012 {\cf20  * Method:    scanProcess}\par
00013 {\cf20  * Signature: (I)[B}\par
00014 {\cf20  */}\par
00015 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_VirtualMemory_scanProcess\par
00016   (JNIEnv *, jobject, jint);\par
00017 \par
00018 {\cf21 #ifdef __cplusplus}\par
00019 \}\par
00020 {\cf21 #endif}\par
00021 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExecuteImpl.c\par \pard\plain 
{\tc\tcl2 \v bin/dynamicAnalysis/ExecuteImpl.c}
{\xe \v bin/dynamicAnalysis/ExecuteImpl.c}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <jni.h>}        {\cf20 // JNI header provided by JDK}\par
00002 {\cf21 #include <stdio.h>}      {\cf20 // C Standard IO Header}\par
00003 {\cf21 #include "dynamicAnalysis_ExecuteCode.h"}   {\cf20 // Generated}\par
00004  \par
00005 {\cf20 // Implementation of the native method sayHello()}\par
00006 JNIEXPORT {\cf18 void} JNICALL JNICALL Java_dynamicAnalysis_ExecuteCode_executeInstruction\par
00007   (JNIEnv *, jobject, jbyte) \{\par
00008    printf({\cf22 "Hello World!\\n"});\par
00009    {\cf19 return};\par
00010 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExecuteImpl.c\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/ExecuteImpl.c}
{\xe \v src/dynamicAnalysis/ExecuteImpl.c}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <jni.h>}        {\cf20 // JNI header provided by JDK}\par
00002 {\cf21 #include <stdio.h>}      {\cf20 // C Standard IO Header}\par
00003 {\cf21 #include "dynamicAnalysis_ExecuteCode.h"}   {\cf20 // Generated}\par
00004  \par
00005 {\cf20 // Implementation of the native method sayHello()}\par
00006 JNIEXPORT {\cf18 void} JNICALL JNICALL Java_dynamicAnalysis_ExecuteCode_executeInstruction\par
00007   (JNIEnv *, jobject, jbyte) \{\par
00008    printf({\cf22 "Hello World!\\n"});\par
00009    {\cf19 return};\par
00010 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExecuteImpl.c\par \pard\plain 
{\tc\tcl2 \v target/classes/dynamicAnalysis/ExecuteImpl.c}
{\xe \v target/classes/dynamicAnalysis/ExecuteImpl.c}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <jni.h>}        {\cf20 // JNI header provided by JDK}\par
00002 {\cf21 #include <stdio.h>}      {\cf20 // C Standard IO Header}\par
00003 {\cf21 #include "dynamicAnalysis_ExecuteCode.h"}   {\cf20 // Generated}\par
00004  \par
00005 {\cf20 // Implementation of the native method sayHello()}\par
00006 JNIEXPORT {\cf18 void} JNICALL JNICALL Java_dynamicAnalysis_ExecuteCode_executeInstruction\par
00007   (JNIEnv *, jobject, jbyte) \{\par
00008    printf({\cf22 "Hello World!\\n"});\par
00009    {\cf19 return};\par
00010 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ReadProcess.cpp\par \pard\plain 
{\tc\tcl2 \v bin/dynamicAnalysis/ReadProcess.cpp}
{\xe \v bin/dynamicAnalysis/ReadProcess.cpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <windows.h>}\par
00003 {\cf21 #include <memoryapi.h>}\par
00004 \par
00005 {\cf17 using namespace }std;\par
00006 \par
00007 {\cf18 void} EnableDebugPriv()\par
00008 \{\par
00009     HANDLE hToken;\par
00010     LUID luid;\par
00011     TOKEN_PRIVILEGES tkp;\par
00012 \par
00013     OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken);\par
00014 \par
00015     LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &luid);\par
00016 \par
00017     tkp.PrivilegeCount = 1;\par
00018     tkp.Privileges[0].Luid = luid;\par
00019     tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\par
00020 \par
00021     AdjustTokenPrivileges(hToken, {\cf17 false}, &tkp, {\cf17 sizeof}(tkp), NULL, NULL);\par
00022 \par
00023     CloseHandle(hToken);\par
00024 \}\par
00025 \par
00026 {\cf18 int} main()\par
00027 \{\par
00028     EnableDebugPriv();\par
00029     MEMORY_BASIC_INFORMATION mbi; {\cf20 //mbi used as register for assigning in query}\par
00030     HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, 16824); {\cf20 //process using pid}\par
00031     DWORD oldprotect; {\cf20 //given the value of old protect}\par
00032     BYTE* buffer; {\cf20 //string for buffer}\par
00033     {\cf18 int} addr; {\cf20 //need to find what this gets assigned to}\par
00034     VirtualQueryEx(hProcess, NULL, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi)); {\cf20 //early assign of mbi, equals 28 (size)}\par
00035     addr = (int)mbi.BaseAddress; {\cf20 //BaseAddress gives 0, shouldnt be correct}\par
00036     {\cf18 int} check = VirtualProtectEx(hProcess, 0, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00037     {\cf18 int} temp;\par
00038     SIZE_T size;\par
00039     {\cf19 while} (temp = VirtualQueryEx(hProcess, (LPCVOID)addr, (PMEMORY_BASIC_INFORMATION)&mbi, mbi.RegionSize)) {\cf20 //will not work for 64 bit programs (Invalid access to memory location.)}\par
00040     \{\par
00041         {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect); {\cf20 //issue here, error 487: ERROR_INVALID_ADDRESS, address incrementing seems valid. 100% relation to whether memory gets read}\par
00042         {\cf19 if} (check != 0)\par
00043         \{\par
00044             buffer = {\cf17 new} BYTE[mbi.RegionSize];\par
00045             ReadProcessMemory(hProcess, (LPVOID)addr, buffer, mbi.RegionSize, &size); {\cf20 //not filling entire buffer}\par
00046             VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, oldprotect, &oldprotect);\par
00047             cout << buffer;\par
00048         \}\par
00049         addr += mbi.RegionSize;\par
00050     \}\par
00051     CloseHandle(hProcess);\par
00052 \par
00053 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ReadProcess.cpp\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/ReadProcess.cpp}
{\xe \v src/dynamicAnalysis/ReadProcess.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <windows.h>}\par
00003 {\cf21 #include <memoryapi.h>}\par
00004 \par
00005 {\cf17 using namespace }std;\par
00006 \par
00007 {\cf18 void} EnableDebugPriv()\par
00008 \{\par
00009     HANDLE hToken;\par
00010     LUID luid;\par
00011     TOKEN_PRIVILEGES tkp;\par
00012 \par
00013     OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken);\par
00014 \par
00015     LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &luid);\par
00016 \par
00017     tkp.PrivilegeCount = 1;\par
00018     tkp.Privileges[0].Luid = luid;\par
00019     tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\par
00020 \par
00021     AdjustTokenPrivileges(hToken, {\cf17 false}, &tkp, {\cf17 sizeof}(tkp), NULL, NULL);\par
00022 \par
00023     CloseHandle(hToken);\par
00024 \}\par
00025 \par
00026 {\cf18 int} main()\par
00027 \{\par
00028     EnableDebugPriv();\par
00029     MEMORY_BASIC_INFORMATION mbi; {\cf20 //mbi used as register for assigning in query}\par
00030     HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, 16824); {\cf20 //process using pid}\par
00031     DWORD oldprotect; {\cf20 //given the value of old protect}\par
00032     BYTE* buffer; {\cf20 //string for buffer}\par
00033     {\cf18 int} addr; {\cf20 //need to find what this gets assigned to}\par
00034     VirtualQueryEx(hProcess, NULL, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi)); {\cf20 //early assign of mbi, equals 28 (size)}\par
00035     addr = (int)mbi.BaseAddress; {\cf20 //BaseAddress gives 0, shouldnt be correct}\par
00036     {\cf18 int} check = VirtualProtectEx(hProcess, 0, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00037     {\cf18 int} temp;\par
00038     SIZE_T size;\par
00039     {\cf19 while} (temp = VirtualQueryEx(hProcess, (LPCVOID)addr, (PMEMORY_BASIC_INFORMATION)&mbi, mbi.RegionSize)) {\cf20 //will not work for 64 bit programs (Invalid access to memory location.)}\par
00040     \{\par
00041         {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect); {\cf20 //issue here, error 487: ERROR_INVALID_ADDRESS, address incrementing seems valid. 100% relation to whether memory gets read}\par
00042         {\cf19 if} (check != 0)\par
00043         \{\par
00044             buffer = {\cf17 new} BYTE[mbi.RegionSize];\par
00045             ReadProcessMemory(hProcess, (LPVOID)addr, buffer, mbi.RegionSize, &size); {\cf20 //not filling entire buffer}\par
00046             VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, oldprotect, &oldprotect);\par
00047             cout << buffer;\par
00048         \}\par
00049         addr += mbi.RegionSize;\par
00050     \}\par
00051     CloseHandle(hProcess);\par
00052 \par
00053 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ReadProcess.cpp\par \pard\plain 
{\tc\tcl2 \v target/classes/dynamicAnalysis/ReadProcess.cpp}
{\xe \v target/classes/dynamicAnalysis/ReadProcess.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <windows.h>}\par
00003 {\cf21 #include <memoryapi.h>}\par
00004 \par
00005 {\cf17 using namespace }std;\par
00006 \par
00007 {\cf18 void} EnableDebugPriv()\par
00008 \{\par
00009     HANDLE hToken;\par
00010     LUID luid;\par
00011     TOKEN_PRIVILEGES tkp;\par
00012 \par
00013     OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken);\par
00014 \par
00015     LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &luid);\par
00016 \par
00017     tkp.PrivilegeCount = 1;\par
00018     tkp.Privileges[0].Luid = luid;\par
00019     tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\par
00020 \par
00021     AdjustTokenPrivileges(hToken, {\cf17 false}, &tkp, {\cf17 sizeof}(tkp), NULL, NULL);\par
00022 \par
00023     CloseHandle(hToken);\par
00024 \}\par
00025 \par
00026 {\cf18 int} main()\par
00027 \{\par
00028     EnableDebugPriv();\par
00029     MEMORY_BASIC_INFORMATION mbi; {\cf20 //mbi used as register for assigning in query}\par
00030     HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, 16824); {\cf20 //process using pid}\par
00031     DWORD oldprotect; {\cf20 //given the value of old protect}\par
00032     BYTE* buffer; {\cf20 //string for buffer}\par
00033     {\cf18 int} addr; {\cf20 //need to find what this gets assigned to}\par
00034     VirtualQueryEx(hProcess, NULL, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi)); {\cf20 //early assign of mbi, equals 28 (size)}\par
00035     addr = (int)mbi.BaseAddress; {\cf20 //BaseAddress gives 0, shouldnt be correct}\par
00036     {\cf18 int} check = VirtualProtectEx(hProcess, 0, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00037     {\cf18 int} temp;\par
00038     SIZE_T size;\par
00039     {\cf19 while} (temp = VirtualQueryEx(hProcess, (LPCVOID)addr, (PMEMORY_BASIC_INFORMATION)&mbi, mbi.RegionSize)) {\cf20 //will not work for 64 bit programs (Invalid access to memory location.)}\par
00040     \{\par
00041         {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect); {\cf20 //issue here, error 487: ERROR_INVALID_ADDRESS, address incrementing seems valid. 100% relation to whether memory gets read}\par
00042         {\cf19 if} (check != 0)\par
00043         \{\par
00044             buffer = {\cf17 new} BYTE[mbi.RegionSize];\par
00045             ReadProcessMemory(hProcess, (LPVOID)addr, buffer, mbi.RegionSize, &size); {\cf20 //not filling entire buffer}\par
00046             VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, oldprotect, &oldprotect);\par
00047             cout << buffer;\par
00048         \}\par
00049         addr += mbi.RegionSize;\par
00050     \}\par
00051     CloseHandle(hProcess);\par
00052 \par
00053 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VirtualMemory.cpp\par \pard\plain 
{\tc\tcl2 \v bin/dynamicAnalysis/VirtualMemory.cpp}
{\xe \v bin/dynamicAnalysis/VirtualMemory.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <jni.h>}        {\cf20 // JNI header provided by JDK}\par
00002 {\cf21 #include <stdio.h>}      {\cf20 // C Standard IO Header}\par
00003 {\cf21 #include "dynamicAnalysis_VirtualMemory.h"}   {\cf20 // Generated}\par
00004 {\cf21 #include <windows.h>}\par
00005 {\cf21 #include <memoryapi.h>}\par
00006 {\cf21 #include <vector>}\par
00007 \par
00008 {\cf17 using namespace }std;\par
00009 \par
00010 {\cf18 void} EnableDebugPriv()\par
00011 \{\par
00012     HANDLE hToken;\par
00013     LUID luid;\par
00014     TOKEN_PRIVILEGES tkp;\par
00015 \par
00016     OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken);\par
00017 \par
00018     LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &luid);\par
00019 \par
00020     tkp.PrivilegeCount = 1;\par
00021     tkp.Privileges[0].Luid = luid;\par
00022     tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\par
00023 \par
00024     AdjustTokenPrivileges(hToken, {\cf17 false}, &tkp, {\cf17 sizeof}(tkp), NULL, NULL);\par
00025 \par
00026     CloseHandle(hToken);\par
00027 \}\par
00028 \par
00029 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_VirtualMemory_scanProcess (JNIEnv *env, jobject, jint processId)\par
00030 \{\par
00031     EnableDebugPriv();\par
00032     MEMORY_BASIC_INFORMATION64 mbi;\par
00033     HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, ({\cf18 int})processId);\par
00034     DWORD oldprotect;\par
00035     {\cf18 unsigned} {\cf18 char}* buffer = {\cf17 new} {\cf18 unsigned} {\cf18 char}[1];\par
00036     __int64 addr = 0;\par
00037     VirtualQueryEx(hProcess, 0, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi));\par
00038     addr = mbi.BaseAddress;\par
00039     {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)0, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00040     SIZE_T size;\par
00041     {\cf18 int} signedSize = 0;\par
00042     vector<unsigned char> regionData;\par
00043     {\cf19 while} (VirtualQueryEx(hProcess, (LPVOID)addr, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi)))\par
00044     \{\par
00045         signedSize = {\cf17 static_cast<}{\cf18 int}{\cf17 >}(mbi.RegionSize);\par
00046         {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00047         {\cf19 if} (check)\par
00048         \{\par
00049             {\cf19 try}\par
00050             \{\par
00051                 buffer = {\cf17 new} {\cf18 unsigned} {\cf18 char}[signedSize];\par
00052                 ReadProcessMemory(hProcess, (LPCVOID)addr, buffer, mbi.RegionSize, &size);\par
00053                 {\cf19 for} ({\cf18 int} index = 0; index < mbi.RegionSize; index++)\par
00054                 \{\par
00055                     regionData.push_back(buffer[index]);\par
00056                 \}\par
00057             \}\par
00058             {\cf19 catch} (bad_alloc e)\par
00059             \{\par
00060                 {\cf19 break};\par
00061             \}\par
00062         \}\par
00063         addr = (addr + mbi.RegionSize);\par
00064     \}\par
00065     {\cf18 unsigned} {\cf18 char}* total = {\cf17 new} {\cf18 unsigned} {\cf18 char}[regionData.size()];\par
00066     {\cf18 int} totalIndex = 0;\par
00067     {\cf19 try}\par
00068     \{\par
00069         {\cf19 for} ({\cf17 auto} i = regionData.begin(); i < regionData.end(); ++i)\par
00070         \{\par
00071             total[totalIndex] = *i;\par
00072             totalIndex++;\par
00073         \}\par
00074     \}\par
00075     {\cf19 catch} (bad_alloc e) \{\}\par
00076     CloseHandle(hProcess);\par
00077     jbyteArray result = env->NewByteArray(totalIndex);\par
00078         env->SetByteArrayRegion( result, 0, totalIndex, ({\cf17 const} jbyte*)total );\par
00079     {\cf19 return} result;\par
00080 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VirtualMemory.cpp\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/VirtualMemory.cpp}
{\xe \v src/dynamicAnalysis/VirtualMemory.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <jni.h>}        {\cf20 // JNI header provided by JDK}\par
00002 {\cf21 #include <stdio.h>}      {\cf20 // C Standard IO Header}\par
00003 {\cf21 #include "dynamicAnalysis_VirtualMemory.h"}   {\cf20 // Generated}\par
00004 {\cf21 #include <windows.h>}\par
00005 {\cf21 #include <memoryapi.h>}\par
00006 {\cf21 #include <vector>}\par
00007 \par
00008 {\cf17 using namespace }std;\par
00009 \par
00010 {\cf18 void} EnableDebugPriv()\par
00011 \{\par
00012     HANDLE hToken;\par
00013     LUID luid;\par
00014     TOKEN_PRIVILEGES tkp;\par
00015 \par
00016     OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken);\par
00017 \par
00018     LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &luid);\par
00019 \par
00020     tkp.PrivilegeCount = 1;\par
00021     tkp.Privileges[0].Luid = luid;\par
00022     tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\par
00023 \par
00024     AdjustTokenPrivileges(hToken, {\cf17 false}, &tkp, {\cf17 sizeof}(tkp), NULL, NULL);\par
00025 \par
00026     CloseHandle(hToken);\par
00027 \}\par
00028 \par
00029 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_VirtualMemory_scanProcess (JNIEnv *env, jobject, jint processId)\par
00030 \{\par
00031     EnableDebugPriv();\par
00032     MEMORY_BASIC_INFORMATION64 mbi;\par
00033     HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, ({\cf18 int})processId);\par
00034     DWORD oldprotect;\par
00035     {\cf18 unsigned} {\cf18 char}* buffer = {\cf17 new} {\cf18 unsigned} {\cf18 char}[1];\par
00036     __int64 addr = 0;\par
00037     VirtualQueryEx(hProcess, 0, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi));\par
00038     addr = mbi.BaseAddress;\par
00039     {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)0, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00040     SIZE_T size;\par
00041     {\cf18 int} signedSize = 0;\par
00042     vector<unsigned char> regionData;\par
00043     {\cf19 while} (VirtualQueryEx(hProcess, (LPVOID)addr, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi)))\par
00044     \{\par
00045         signedSize = {\cf17 static_cast<}{\cf18 int}{\cf17 >}(mbi.RegionSize);\par
00046         {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00047         {\cf19 if} (check)\par
00048         \{\par
00049             {\cf19 try}\par
00050             \{\par
00051                 buffer = {\cf17 new} {\cf18 unsigned} {\cf18 char}[signedSize];\par
00052                 ReadProcessMemory(hProcess, (LPCVOID)addr, buffer, mbi.RegionSize, &size);\par
00053                 {\cf19 for} ({\cf18 int} index = 0; index < mbi.RegionSize; index++)\par
00054                 \{\par
00055                     regionData.push_back(buffer[index]);\par
00056                 \}\par
00057             \}\par
00058             {\cf19 catch} (bad_alloc e)\par
00059             \{\par
00060                 {\cf19 break};\par
00061             \}\par
00062         \}\par
00063         addr = (addr + mbi.RegionSize);\par
00064     \}\par
00065     {\cf18 unsigned} {\cf18 char}* total = {\cf17 new} {\cf18 unsigned} {\cf18 char}[regionData.size()];\par
00066     {\cf18 int} totalIndex = 0;\par
00067     {\cf19 try}\par
00068     \{\par
00069         {\cf19 for} ({\cf17 auto} i = regionData.begin(); i < regionData.end(); ++i)\par
00070         \{\par
00071             total[totalIndex] = *i;\par
00072             totalIndex++;\par
00073         \}\par
00074     \}\par
00075     {\cf19 catch} (bad_alloc e) \{\}\par
00076     CloseHandle(hProcess);\par
00077     jbyteArray result = env->NewByteArray(totalIndex);\par
00078         env->SetByteArrayRegion( result, 0, totalIndex, ({\cf17 const} jbyte*)total );\par
00079     {\cf19 return} result;\par
00080 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VirtualMemory.cpp\par \pard\plain 
{\tc\tcl2 \v target/classes/dynamicAnalysis/VirtualMemory.cpp}
{\xe \v target/classes/dynamicAnalysis/VirtualMemory.cpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <jni.h>}        {\cf20 // JNI header provided by JDK}\par
00002 {\cf21 #include <stdio.h>}      {\cf20 // C Standard IO Header}\par
00003 {\cf21 #include "dynamicAnalysis_VirtualMemory.h"}   {\cf20 // Generated}\par
00004 {\cf21 #include <windows.h>}\par
00005 {\cf21 #include <memoryapi.h>}\par
00006 {\cf21 #include <vector>}\par
00007 \par
00008 {\cf17 using namespace }std;\par
00009 \par
00010 {\cf18 void} EnableDebugPriv()\par
00011 \{\par
00012     HANDLE hToken;\par
00013     LUID luid;\par
00014     TOKEN_PRIVILEGES tkp;\par
00015 \par
00016     OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &hToken);\par
00017 \par
00018     LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &luid);\par
00019 \par
00020     tkp.PrivilegeCount = 1;\par
00021     tkp.Privileges[0].Luid = luid;\par
00022     tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;\par
00023 \par
00024     AdjustTokenPrivileges(hToken, {\cf17 false}, &tkp, {\cf17 sizeof}(tkp), NULL, NULL);\par
00025 \par
00026     CloseHandle(hToken);\par
00027 \}\par
00028 \par
00029 JNIEXPORT jbyteArray JNICALL Java_dynamicAnalysis_VirtualMemory_scanProcess (JNIEnv *env, jobject, jint processId)\par
00030 \{\par
00031     EnableDebugPriv();\par
00032     MEMORY_BASIC_INFORMATION64 mbi;\par
00033     HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, ({\cf18 int})processId);\par
00034     DWORD oldprotect;\par
00035     {\cf18 unsigned} {\cf18 char}* buffer = {\cf17 new} {\cf18 unsigned} {\cf18 char}[1];\par
00036     __int64 addr = 0;\par
00037     VirtualQueryEx(hProcess, 0, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi));\par
00038     addr = mbi.BaseAddress;\par
00039     {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)0, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00040     SIZE_T size;\par
00041     {\cf18 int} signedSize = 0;\par
00042     vector<unsigned char> regionData;\par
00043     {\cf19 while} (VirtualQueryEx(hProcess, (LPVOID)addr, (PMEMORY_BASIC_INFORMATION)&mbi, {\cf17 sizeof}(mbi)))\par
00044     \{\par
00045         signedSize = {\cf17 static_cast<}{\cf18 int}{\cf17 >}(mbi.RegionSize);\par
00046         {\cf18 int} check = VirtualProtectEx(hProcess, (LPVOID)addr, mbi.RegionSize, PAGE_EXECUTE_READWRITE, &oldprotect);\par
00047         {\cf19 if} (check)\par
00048         \{\par
00049             {\cf19 try}\par
00050             \{\par
00051                 buffer = {\cf17 new} {\cf18 unsigned} {\cf18 char}[signedSize];\par
00052                 ReadProcessMemory(hProcess, (LPCVOID)addr, buffer, mbi.RegionSize, &size);\par
00053                 {\cf19 for} ({\cf18 int} index = 0; index < mbi.RegionSize; index++)\par
00054                 \{\par
00055                     regionData.push_back(buffer[index]);\par
00056                 \}\par
00057             \}\par
00058             {\cf19 catch} (bad_alloc e)\par
00059             \{\par
00060                 {\cf19 break};\par
00061             \}\par
00062         \}\par
00063         addr = (addr + mbi.RegionSize);\par
00064     \}\par
00065     {\cf18 unsigned} {\cf18 char}* total = {\cf17 new} {\cf18 unsigned} {\cf18 char}[regionData.size()];\par
00066     {\cf18 int} totalIndex = 0;\par
00067     {\cf19 try}\par
00068     \{\par
00069         {\cf19 for} ({\cf17 auto} i = regionData.begin(); i < regionData.end(); ++i)\par
00070         \{\par
00071             total[totalIndex] = *i;\par
00072             totalIndex++;\par
00073         \}\par
00074     \}\par
00075     {\cf19 catch} (bad_alloc e) \{\}\par
00076     CloseHandle(hProcess);\par
00077     jbyteArray result = env->NewByteArray(totalIndex);\par
00078         env->SetByteArrayRegion( result, 0, totalIndex, ({\cf17 const} jbyte*)total );\par
00079     {\cf19 return} result;\par
00080 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ActiveConnection.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/ActiveConnection.java}
{\xe \v src/dynamicAnalysis/ActiveConnection.java}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 package }dynamicAnalysis;\par
00002 \par
00006 {\cf17 public} {\cf17 class }ActiveConnection\par
00007 \{\par
00008     \par
00010     {\cf17 private} String protocol;\par
00011     \par
00013     {\cf17 private} String localAddress;\par
00014     \par
00016     {\cf17 private} String foreignAddress;\par
00017     \par
00019     {\cf17 private} String state;\par
00020     \par
00022     {\cf17 private} {\cf18 long} pid;\par
00023     \par
00033     {\cf17 public} ActiveConnection(String protocol, String localAddress, String foreignAddress, String state, {\cf18 long} pid)\par
00034     \{\par
00035         setProtocol(protocol);\par
00036         setLocalAddress(localAddress);\par
00037         setForeignAddress(foreignAddress);\par
00038         setState(state);\par
00039         setPid(pid);\par
00040     \}\par
00041     \par
00047     {\cf17 public} String getProtocol()\par
00048     \{\par
00049         {\cf19 return} protocol;\par
00050     \}\par
00051     \par
00057     {\cf17 public} {\cf18 void} setProtocol(String protocol)\par
00058     \{\par
00059         this.protocol = protocol;\par
00060     \}\par
00061     \par
00067     {\cf17 public} String getLocalAddress()\par
00068     \{\par
00069         {\cf19 return} localAddress;\par
00070     \}\par
00071     \par
00077     {\cf17 public} {\cf18 void} setLocalAddress(String localAddress)\par
00078     \{\par
00079         this.localAddress = localAddress;\par
00080     \}\par
00081     \par
00087     {\cf17 public} String getForeignAddress()\par
00088     \{\par
00089         {\cf19 return} foreignAddress;\par
00090     \}\par
00091     \par
00097     {\cf17 public} {\cf18 void} setForeignAddress(String foreignAddress)\par
00098     \{\par
00099         this.foreignAddress = foreignAddress;\par
00100     \}\par
00101     \par
00107     {\cf17 public} String getState()\par
00108     \{\par
00109         {\cf19 return} state;\par
00110     \}\par
00111     \par
00117     {\cf17 public} {\cf18 void} setState(String state)\par
00118     \{\par
00119         this.state = state;\par
00120     \}\par
00121     \par
00127     {\cf17 public} {\cf18 long} getPid()\par
00128     \{\par
00129         {\cf19 return} pid;\par
00130     \}\par
00131     \par
00137     {\cf17 public} {\cf18 void} setPid({\cf18 long} pid)\par
00138     \{\par
00139         this.pid = pid;\par
00140     \}\par
00141     \par
00147     @Override\par
00148     {\cf17 public} String toString()\par
00149     \{\par
00150         {\cf19 return} {\cf22 "ActiveConnection [protocol="} + protocol + {\cf22 ", localAddress="} + localAddress + {\cf22 ", foreignAddress="}\par
00151                 + foreignAddress + {\cf22 ", state="} + state + {\cf22 ", pid="} + pid + {\cf22 "]"};\par
00152     \}\par
00153     \par
00154 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CandidateWindow.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/CandidateWindow.java}
{\xe \v src/dynamicAnalysis/CandidateWindow.java}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00007 {\cf17 import} org.eclipse.swt.widgets.Shell;\par
00008 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00009 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00010 \par
00011 {\cf17 import} java.io.File;\par
00012 \par
00013 {\cf17 import} org.eclipse.swt.SWT;\par
00014 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00015 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00016 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00017 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00018 {\cf17 import} org.eclipse.swt.widgets.Composite;\par
00019 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00020 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00021 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00022 {\cf17 import} org.eclipse.swt.events.ModifyEvent;\par
00023 {\cf17 import} org.eclipse.swt.events.ModifyListener;\par
00024 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00025 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00026 {\cf17 import} org.eclipse.swt.custom.StyledText;\par
00027 {\cf17 import} org.eclipse.swt.widgets.TableColumn;\par
00028 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00029 {\cf17 import} org.eclipse.swt.widgets.Menu;\par
00030 {\cf17 import} org.eclipse.swt.widgets.MenuItem;\par
00031 \par
00035 {\cf17 public} {\cf17 class }CandidateWindow\par
00036 \{\par
00037 \par
00039     {\cf17 protected} Shell shell;\par
00040     \par
00042     {\cf17 private} Label text;\par
00043     \par
00045     {\cf17 private} String filePath;\par
00046     \par
00052     {\cf17 public} {\cf17 static} {\cf18 void} main(String[] args)\par
00053     \{\par
00054         {\cf19 try}\par
00055         \{\par
00056             CandidateWindow window = {\cf17 new} CandidateWindow();\par
00057             window.open();\par
00058         \} {\cf19 catch} (Exception e)\par
00059         \{\par
00060             e.printStackTrace();\par
00061         \}\par
00062     \}\par
00063 \par
00067     {\cf17 public} {\cf18 void} open()\par
00068     \{\par
00069         Display display = Display.getDefault();\par
00070         createContents();\par
00071         shell.open();\par
00072         shell.layout();\par
00073         {\cf19 while} (!shell.isDisposed())\par
00074         \{\par
00075             {\cf19 if} (!display.readAndDispatch())\par
00076             \{\par
00077                 display.sleep();\par
00078             \}\par
00079         \}\par
00080     \}\par
00081 \par
00085     {\cf17 protected} {\cf18 void} createContents()\par
00086     \{\par
00087         shell = {\cf17 new} Shell();\par
00088         shell.setSize(324, 249);\par
00089         shell.setText({\cf22 "SWT Application"});\par
00090         shell.setLayout({\cf17 new} FormLayout());\par
00091         \par
00092         Button btnProcess = {\cf17 new} Button(shell, SWT.CHECK);\par
00093         \par
00094         text = {\cf17 new} Label(shell, SWT.BORDER);\par
00095         \par
00096         Button btnLaunch = {\cf17 new} Button(shell, SWT.NONE);\par
00097         \par
00098         FormData fd_text = {\cf17 new} FormData();\par
00099         fd_text.bottom = {\cf17 new} FormAttachment(0, 28);\par
00100         text.setLayoutData(fd_text);\par
00101         \par
00102         \par
00103         Button btnInstructions = {\cf17 new} Button(shell, SWT.NONE);\par
00104         btnInstructions.setEnabled({\cf17 false});\par
00105         btnInstructions.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00106             @Override\par
00107             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00108             \}\par
00109         \});\par
00110         FormData fd_btnInstructions = {\cf17 new} FormData();\par
00111         fd_btnInstructions.left = {\cf17 new} FormAttachment(text, 120, SWT.LEFT);\par
00112         fd_btnInstructions.right = {\cf17 new} FormAttachment(text, 0, SWT.RIGHT);\par
00113         btnInstructions.setLayoutData(fd_btnInstructions);\par
00114         btnInstructions.setText({\cf22 "x86 Instructions"});\par
00115         \par
00116         Button btnMemory = {\cf17 new} Button(shell, SWT.NONE);\par
00117         fd_btnInstructions.top = {\cf17 new} FormAttachment(0, 117);\par
00118         btnMemory.setEnabled({\cf17 false});\par
00119         btnMemory.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00120             @Override\par
00121             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00122             \}\par
00123         \});\par
00124         btnMemory.setText({\cf22 "Virtual Memory"});\par
00125         FormData fd_btnMemory = {\cf17 new} FormData();\par
00126         fd_btnMemory.bottom = {\cf17 new} FormAttachment(btnInstructions, -6);\par
00127         fd_btnMemory.right = {\cf17 new} FormAttachment(text, 0, SWT.RIGHT);\par
00128         fd_btnMemory.left = {\cf17 new} FormAttachment(0, 203);\par
00129         btnMemory.setLayoutData(fd_btnMemory);\par
00130         \par
00131         Button btnAdvanced = {\cf17 new} Button(shell, SWT.NONE);\par
00132         fd_btnInstructions.bottom = {\cf17 new} FormAttachment(btnAdvanced, -6);\par
00133         btnAdvanced.setEnabled({\cf17 false});\par
00134         btnAdvanced.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00135             @Override\par
00136             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00137             \}\par
00138         \});\par
00139         btnAdvanced.setText({\cf22 "Advanced"});\par
00140         FormData fd_btnAdvanced = {\cf17 new} FormData();\par
00141         fd_btnAdvanced.right = {\cf17 new} FormAttachment(0, 298);\par
00142         fd_btnAdvanced.top = {\cf17 new} FormAttachment(0, 148);\par
00143         fd_btnAdvanced.left = {\cf17 new} FormAttachment(0, 203);\par
00144         btnAdvanced.setLayoutData(fd_btnAdvanced);\par
00145         \par
00146         Button btnSelect = {\cf17 new} Button(shell, SWT.NONE);\par
00147         btnSelect.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00148             @Override\par
00149             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00150                 System.out.println({\cf22 "selection: "}+btnProcess.getSelection());\par
00151                 SelectFile selectFile = {\cf17 new} SelectFile(shell.getLocation().x, shell.getLocation().y, btnProcess.getSelection());\par
00152                 filePath = selectFile.getText();\par
00153                 btnLaunch.setEnabled({\cf17 true});\par
00154                 {\cf19 try}\par
00155                 \{\par
00156                     text.setText(filePath);\par
00157                 \}\par
00158                 {\cf19 catch}(IllegalArgumentException e1) \{\}\par
00159             \}\par
00160         \});\par
00161         btnSelect.setText({\cf22 "Select File"});\par
00162         FormData fd_btnSelect = {\cf17 new} FormData();\par
00163         fd_btnSelect.top = {\cf17 new} FormAttachment(text, 6);\par
00164         fd_btnSelect.right = {\cf17 new} FormAttachment(btnMemory, 0, SWT.RIGHT);\par
00165         fd_btnSelect.left = {\cf17 new} FormAttachment(btnMemory, 0, SWT.LEFT);\par
00166         btnSelect.setLayoutData(fd_btnSelect);\par
00167         \par
00168         Label lblFilePath = {\cf17 new} Label(shell, SWT.NONE);\par
00169         fd_text.top = {\cf17 new} FormAttachment(lblFilePath, -1, SWT.TOP);\par
00170         fd_text.right = {\cf17 new} FormAttachment(lblFilePath, 221, SWT.RIGHT);\par
00171         fd_text.left = {\cf17 new} FormAttachment(lblFilePath, 6);\par
00172         lblFilePath.setAlignment(SWT.RIGHT);\par
00173         FormData fd_lblFilePath = {\cf17 new} FormData();\par
00174         fd_lblFilePath.top = {\cf17 new} FormAttachment(0, 12);\par
00175         fd_lblFilePath.left = {\cf17 new} FormAttachment(0, 10);\par
00176         fd_lblFilePath.right = {\cf17 new} FormAttachment(0, 77);\par
00177         lblFilePath.setLayoutData(fd_lblFilePath);\par
00178         lblFilePath.setText({\cf22 "File Path"});\par
00179 \par
00180         {\cf20 /*TableItem tableItems[] = new TableItem[4];}\par
00181 {\cf20         }\par
00182 {\cf20         tableItems[0].setText(0, "Directory");}\par
00183 {\cf20         tableItems[1].setText(0, "Version");}\par
00184 {\cf20         tableItems[2].setText(0, "Name");       }\par
00185 {\cf20         tableItems[3].setText(0, "PID");*/}\par
00186         Menu menu = {\cf17 new} Menu(shell, SWT.BAR);\par
00187         shell.setMenuBar(menu);\par
00188         \par
00189         MenuItem mntmFile = {\cf17 new} MenuItem(menu, SWT.CASCADE);\par
00190         mntmFile.setText({\cf22 "File"});\par
00191         \par
00192         Menu menu_1 = {\cf17 new} Menu(mntmFile);\par
00193         mntmFile.setMenu(menu_1);\par
00194         \par
00195         MenuItem mntmOpen = {\cf17 new} MenuItem(menu_1, SWT.NONE);\par
00196         mntmOpen.setText({\cf22 "Open"});\par
00197         \par
00198         MenuItem mntmProcess = {\cf17 new} MenuItem(menu, SWT.CASCADE);\par
00199         mntmProcess.setText({\cf22 "Process"});\par
00200         \par
00201         Menu menu_2 = {\cf17 new} Menu(mntmProcess);\par
00202         mntmProcess.setMenu(menu_2);\par
00203         \par
00204         MenuItem mntmSelectProcess = {\cf17 new} MenuItem(menu_2, SWT.NONE);\par
00205         mntmSelectProcess.setText({\cf22 "Select Process"});\par
00206         btnProcess.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00207             @Override\par
00208             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00209                 {\cf19 if} (btnProcess.getSelection())\par
00210                 \{\par
00211                     lblFilePath.setText({\cf22 "Process ID"});\par
00212                     btnSelect.setText({\cf22 "Select Process"});\par
00213                 \}\par
00214                 {\cf19 else}\par
00215                 \{\par
00216                     lblFilePath.setText({\cf22 "File Path"});\par
00217                     btnSelect.setText({\cf22 "Select File"});\par
00218                 \}\par
00219             \}\par
00220         \});\par
00221         FormData fd_btnProcess = {\cf17 new} FormData();\par
00222         fd_btnProcess.top = {\cf17 new} FormAttachment(btnSelect, 4, SWT.TOP);\par
00223         fd_btnProcess.right = {\cf17 new} FormAttachment(btnSelect, -53);\par
00224         fd_btnProcess.left = {\cf17 new} FormAttachment(text, 0, SWT.LEFT);\par
00225         btnProcess.setLayoutData(fd_btnProcess);\par
00226         btnProcess.setText({\cf22 "Process"});\par
00227         btnLaunch.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00228             @Override\par
00229             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00230                 btnMemory.setEnabled({\cf17 true});\par
00231                 btnAdvanced.setEnabled({\cf17 true});\par
00232                 {\cf19 if}(!btnProcess.getSelection())\par
00233                 \{\par
00234                     btnInstructions.setEnabled({\cf17 true});\par
00235                     String filePath = text.getText();\par
00236                     ProcessManager process = {\cf17 new} ProcessManager({\cf17 new} File(filePath));\par
00237                     CodeExtract codeExtract = {\cf17 new} CodeExtract({\cf17 new} File(filePath));              \par
00238                     {\cf20 //tableItems[0].setText(1, filePath);}\par
00239                     {\cf19 if}(codeExtract.getPeFile().isX32())\par
00240                     \{\par
00241                         {\cf20 //tableItems[1].setText(1, "32-bit");}\par
00242                     \}\par
00243                     {\cf19 else}\par
00244                     \{\par
00245                         {\cf20 //tableItems[1].setText(1, "64-bit");}\par
00246                     \}  \par
00247                     {\cf20 //tableItems[2].setText(1, process.getName());}\par
00248                     {\cf20 //tableItems[3].setText(1, process.getPidAsString());}\par
00249                 \}\par
00250                 {\cf19 else}\par
00251                 \{\par
00252                     btnInstructions.setEnabled({\cf17 false});\par
00253                 \}\par
00254             \}\par
00255         \});\par
00256         FormData fd_btnLaunch = {\cf17 new} FormData();\par
00257         fd_btnLaunch.right = {\cf17 new} FormAttachment(100, -345);\par
00258         fd_btnLaunch.left = {\cf17 new} FormAttachment(0, 135);\par
00259         fd_btnLaunch.top = {\cf17 new} FormAttachment(0, 34);\par
00260         fd_btnLaunch.bottom = {\cf17 new} FormAttachment(100, -245);\par
00261         btnLaunch.setLayoutData(fd_btnLaunch);\par
00262         btnLaunch.setText({\cf22 "Launch"});\par
00263         \par
00264     \}\par
00265 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CapstoneTest.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/CapstoneTest.java}
{\xe \v src/dynamicAnalysis/CapstoneTest.java}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Java Program to illustrate ProxySelector Class}\par
00002 {\cf20 // of java.net package}\par
00003 {\cf20 // only creating methods here}\par
00004   \par
00005 {\cf20 // Importing standard input output classes}\par
00006 {\cf17 import} java.io.IOException;\par
00007 {\cf20 // Importing classes from java.net package}\par
00008 {\cf17 import} java.net.InetSocketAddress;\par
00009 {\cf17 import} java.net.Proxy;\par
00010 {\cf17 import} java.net.ProxySelector;\par
00011 {\cf17 import} java.net.SocketAddress;\par
00012 {\cf17 import} java.net.URI;\par
00013 {\cf20 // Importing List and ArrayList as utility classes from}\par
00014 {\cf20 // java.util package}\par
00015 {\cf17 import} java.util.ArrayList;\par
00016 {\cf17 import} java.util.List;\par
00017   \par
00018 {\cf20 // Class 1}\par
00022 {\cf20 }{\cf20 // Helper class extending ProxySelector class}\par
00023 {\cf17 public} {\cf17 class }CapstoneTest {\cf17 extends} ProxySelector \{\par
00024   \par
00025     {\cf20 // According to API we need to return List<Proxy>}\par
00026     {\cf20 // even if we return only one element, so}\par
00027   \par
00029     {\cf20 // Creating List class object of Proxy type}\par
00030     {\cf17 private} {\cf17 final} List<Proxy> noProxy = {\cf17 new} ArrayList<>();\par
00031     \par
00033     {\cf17 private} {\cf17 final} List<Proxy> proxies = {\cf17 new} ArrayList<>();\par
00034   \par
00038     {\cf20 // Constructor of this class}\par
00039     {\cf17 public} {\cf18 void}  PrivateDataProxy()\par
00040     \{\par
00041   \par
00042         {\cf20 // If no proxy required to access resource}\par
00043         {\cf20 // use Proxy.NO_PROXY}\par
00044         noProxy.add(Proxy.NO_PROXY);\par
00045   \par
00046         {\cf20 // Creating  InetSocketAddress, and}\par
00047         {\cf20 // secure.connection.com doesn't exist 443 is an}\par
00048         {\cf20 // https port}\par
00049         InetSocketAddress inetSocketAddress\par
00050             = {\cf17 new} InetSocketAddress({\cf22 "secure.connection.com"},\par
00051                                     443);\par
00052   \par
00053         {\cf20 // Now creating http proxy}\par
00054         Proxy proxy\par
00055             = {\cf17 new} Proxy(Proxy.Type.HTTP, inetSocketAddress);\par
00056   \par
00057         {\cf20 // Finally adding proxy into proxy list}\par
00058         proxies.add(proxy);\par
00059     \}\par
00060   \par
00061     {\cf20 // Method 1 of this class}\par
00068 {\cf20 }    {\cf20 //@Override}\par
00069     {\cf17 public} List<Proxy> select(URI uri)\par
00070     \{\par
00071         {\cf19 if} (uri.getPath().startsWith({\cf22 "/confidential"})) \{\par
00072             {\cf20 // If URI path starts with '/confidential' then}\par
00073             {\cf20 // use proxy server}\par
00074             {\cf19 return} proxies;\par
00075         \}\par
00076   \par
00077         {\cf20 // If url don't start with '/confidential' then}\par
00078         {\cf20 //  no need in proxy}\par
00079         {\cf19 return} noProxy;\par
00080     \}\par
00081   \par
00082     {\cf20 // Method 2 of this class}\par
00090 {\cf20 }    {\cf20 // @Override}\par
00091     {\cf17 public} {\cf18 void} connectFailed(URI arg0, SocketAddress arg1,\par
00092                               IOException arg2)\par
00093     \{\par
00094         {\cf20 // Properly handle connection failing}\par
00095     \}\par
00096 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CodeExtract.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/CodeExtract.java}
{\xe \v src/dynamicAnalysis/CodeExtract.java}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 package }dynamicAnalysis;\par
00002 \par
00003 {\cf17 import} java.io.File;\par
00004 {\cf17 import} java.io.IOException;\par
00005 {\cf17 import} java.io.RandomAccessFile;\par
00006 {\cf17 import} java.nio.file.Files;\par
00007 {\cf17 import} java.nio.file.Paths;\par
00008 {\cf17 import} java.util.Arrays;\par
00009 {\cf17 import} java.util.List;\par
00010 {\cf17 import} capstone.Capstone;\par
00011 \par
00015 {\cf17 public} {\cf17 class }CodeExtract \{\par
00016     \par
00018     {\cf17 private} File file;\par
00019     \par
00021     {\cf17 private} {\cf18 byte}[] instructions;\par
00022     \par
00024     {\cf17 private} String code;\par
00025     \par
00027     {\cf17 private} String[] codeArr;\par
00028     \par
00030     {\cf17 private} PEFile peFile;\par
00031     \par
00033     {\cf17 private} Capstone.CsInsn[] allInsn;\par
00034     \par
00040     {\cf17 public} CodeExtract(File file) \{\par
00041         setFile(file);\par
00042         loadPE(getFile());\par
00043     \}\par
00044 \par
00050     {\cf17 private} {\cf18 void} loadPE(File file)\par
00051     \{\par
00052         peFile = {\cf17 new} PEFile(file);\par
00053         peFile.readFile();\par
00054         \par
00055     \}\par
00056     \par
00062     {\cf17 public} {\cf18 byte}[] loadInstructions()\par
00063     \{\par
00064         {\cf18 long} start = System.currentTimeMillis();\par
00065         {\cf18 byte}[] bytes = peFile.getInstructions();\par
00066         System.out.println({\cf22 "time for loadInstruction: "}+(System.currentTimeMillis()-start));\par
00067         setInstructions(bytes);\par
00068         {\cf19 try}\par
00069         \{\par
00070             codeArr = extractArr(getInstructions());\par
00071         \}\par
00072         {\cf19 catch}(RuntimeException e)\par
00073         \{\par
00074             e.printStackTrace();\par
00075         \}\par
00076         {\cf19 return} bytes;\par
00077     \}\par
00078     \par
00085     {\cf17 private} Capstone.CsInsn[] loadCapstone({\cf18 byte}[] instructions)\par
00086     \{\par
00087         file = {\cf17 new} File(file.getAbsolutePath());\par
00088         @SuppressWarnings({\cf22 "unused"})\par
00089         byte[] bytes = null;\par
00090         try \{\par
00091             bytes = Files.readAllBytes(Paths.get(file.toString()));\par
00092         \} {\cf19 catch} (IOException | NullPointerException e) \{\par
00093             e.printStackTrace();\par
00094         \}\par
00095         Capstone cs = {\cf17 null};\par
00096         {\cf19 if}(peFile.getVersion() == Version.x32)\par
00097         \{\par
00098             cs = {\cf17 new} Capstone(Capstone.CS_ARCH_X86, Capstone.CS_MODE_32);\par
00099             System.out.println({\cf22 "Running x32 exe"});\par
00100         \}\par
00101         {\cf19 else}\par
00102         \{\par
00103             cs = {\cf17 new} Capstone(Capstone.CS_ARCH_X86, Capstone.CS_MODE_64);\par
00104             System.out.println({\cf22 "Running x64 exe"});\par
00105         \}       \par
00106         cs.setDetail(1);\par
00107         {\cf18 long} start = System.currentTimeMillis();\par
00108         Capstone.CsInsn[] allInsn = cs.disasm(instructions, peFile.getPointer());\par
00109         System.out.println({\cf22 "dissasemble time: "}+(System.currentTimeMillis()-start));\par
00110         setAllInsn(allInsn);\par
00111         {\cf19 return} allInsn;\par
00112     \}\par
00113     \par
00120     {\cf17 private} String[] extractArr({\cf18 byte}[] instructions)\par
00121     \{\par
00122         Capstone.CsInsn[] allInsn = loadCapstone(instructions);\par
00123         String[] code = {\cf17 new} String[allInsn.length];\par
00124         {\cf19 for} ({\cf18 int} i=0; i<allInsn.length; i++) \par
00125         \{\par
00126             code[i] = String.format({\cf22 "0x%x: %s %s\\n"}, allInsn[i].address,\par
00127                   allInsn[i].mnemonic, allInsn[i].opStr);\par
00128         \} \par
00129        {\cf19 return} code;\par
00130     \}\par
00131     \par
00137     {\cf17 public} File getFile() \{\par
00138         {\cf19 return} file;\par
00139     \}\par
00140 \par
00146     {\cf17 public} {\cf18 void} setFile(File file) \{\par
00147         this.file = file;\par
00148     \}\par
00149     \par
00155     {\cf17 private} {\cf18 void} setInstructions({\cf18 byte}[] instructions) \{\par
00156         this.instructions = instructions;\par
00157     \}\par
00158     \par
00164     {\cf17 public} {\cf18 byte}[] getInstructions() \{\par
00165         {\cf19 return} instructions;\par
00166     \}\par
00167     \par
00173     {\cf17 public} String getCode() \{\par
00174         {\cf19 return} code;\par
00175     \}\par
00176     \par
00182     {\cf17 public} String[] getCodeArr() \{\par
00183         {\cf19 return} codeArr;\par
00184     \}\par
00185     \par
00191     {\cf17 public} PEFile getPeFile()\par
00192     \{\par
00193         {\cf19 return} peFile;\par
00194     \}\par
00195 \par
00201     {\cf17 public} {\cf18 void} setPeFile(PEFile peFile)\par
00202     \{\par
00203         this.peFile = peFile;\par
00204     \}\par
00205     \par
00211     {\cf17 public} {\cf18 int} getPointer()\par
00212     \{\par
00213         {\cf19 return} peFile.getPointer();\par
00214     \}\par
00215     \par
00221     {\cf17 public} Capstone.CsInsn[] getAllInsn()\par
00222     \{\par
00223         {\cf19 return} allInsn;\par
00224     \}\par
00225 \par
00231     {\cf17 public} {\cf18 void} setAllInsn(Capstone.CsInsn[] allInsn)\par
00232     \{\par
00233         this.allInsn = allInsn;\par
00234     \}\par
00235 \par
00242     {\cf17 public} {\cf18 byte}[] getBytes() throws IOException\par
00243     \{\par
00244         {\cf19 return} peFile.getBytes();\par
00245     \}\par
00246     \par
00252     {\cf17 public} Version getVersion()\par
00253     \{\par
00254         {\cf19 return} peFile.getVersion();\par
00255     \}\par
00256     \par
00262     @Override\par
00263     {\cf17 public} String toString() \{\par
00264         {\cf19 return} {\cf22 "CodeExtract [file="} + file + {\cf22 ", instructions="} + Arrays.toString(instructions) + {\cf22 ", code="} + code + {\cf22 "]"};\par
00265     \}\par
00266 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CommandLine.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/CommandLine.java}
{\xe \v src/dynamicAnalysis/CommandLine.java}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.io.BufferedReader;\par
00007 {\cf17 import} java.io.IOException;\par
00008 {\cf17 import} java.io.InputStreamReader;\par
00009 \par
00013 {\cf17 public} {\cf17 class }CommandLine\par
00014 \{\par
00015     \par
00017     {\cf17 private} {\cf18 long} pid;\par
00018     \par
00024     {\cf17 public} CommandLine({\cf18 long} pid)\par
00025     \{\par
00026         setPid(pid);\par
00027     \}\par
00028 \par
00032     {\cf17 public} CommandLine()\par
00033     \{\par
00034         \par
00035     \}\par
00036     \par
00042     {\cf17 public} {\cf18 long} getPid()\par
00043     \{\par
00044         {\cf19 return} pid;\par
00045     \}\par
00046 \par
00052     {\cf17 public} {\cf18 void} setPid({\cf18 long} pid)\par
00053     \{\par
00054         this.pid = pid;\par
00055     \}\par
00056     \par
00064     {\cf17 private} String run(String command, {\cf18 boolean} cmdCheck)\par
00065     \{\par
00066         String response = {\cf22 ""};\par
00067         ProcessBuilder builder;\par
00068         {\cf19 if}(cmdCheck) builder = {\cf17 new} ProcessBuilder({\cf22 "cmd.exe"}, {\cf22 "/c"}, command);\par
00069         {\cf19 else} builder = {\cf17 new} ProcessBuilder({\cf22 "cmd.exe"}, {\cf22 "/c"}, {\cf22 "cd /d \\""}+System.getProperty({\cf22 "user.dir"})+{\cf22 "\\\\lib\\" && "}+command);\par
00070         builder.redirectErrorStream({\cf17 true});\par
00071         Process p = {\cf17 null};\par
00072         {\cf19 try} \{\par
00073             p = builder.start();\par
00074         \} {\cf19 catch} (IOException e) \{\par
00075             e.printStackTrace();\par
00076         \}\par
00077         BufferedReader r = {\cf17 new} BufferedReader({\cf17 new} InputStreamReader(p.getInputStream()));\par
00078         String line = {\cf22 ""};\par
00079         {\cf19 while} ({\cf17 true}) \{\par
00080             {\cf19 try} \{\par
00081                 line = r.readLine();\par
00082             \} {\cf19 catch} (IOException e) \{\par
00083                 e.printStackTrace();\par
00084             \}\par
00085             {\cf19 if} (line == {\cf17 null}) \{\par
00086                 {\cf19 break};\par
00087             \}\par
00088             response += line + {\cf22 "\\n"};\par
00089         \}\par
00090         {\cf19 return} response;\par
00091     \}\par
00092     \par
00098     {\cf20 //replace with listdlls}\par
00099     {\cf17 public} String runName()\par
00100     \{\par
00101         {\cf19 return} run({\cf22 "tasklist /fi \\"pid eq "}+getPid()+{\cf22 "\\" /fo csv"}, {\cf17 true});\par
00102     \}\par
00103     \par
00109     {\cf17 public} String runDLLs()\par
00110     \{\par
00111         {\cf19 return} run({\cf22 "listdlls "}+getPid(), {\cf17 false});\par
00112     \}\par
00113     \par
00119     {\cf17 public} String runFiles()\par
00120     \{\par
00121         {\cf19 return} run({\cf22 "handle -p "}+getPid()+{\cf22 " -v"}, {\cf17 false});\par
00122     \}\par
00123     \par
00129     {\cf17 public} String getAll()\par
00130     \{\par
00131         {\cf19 return} run({\cf22 "tasklist /fo csv"}, {\cf17 true});\par
00132     \}\par
00133     \par
00139     {\cf17 public} String getNetstat()\par
00140     \{\par
00141         {\cf19 return} run({\cf22 "netstat -ano"}, {\cf17 true});\par
00142     \}\par
00143     \par
00149     @Override\par
00150     {\cf17 public} String toString()\par
00151     \{\par
00152         {\cf19 return} {\cf22 "CommandLine [pid="} + pid + {\cf22 "]"};\par
00153     \}\par
00154     \par
00155 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DataDirectory.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/DataDirectory.java}
{\xe \v src/dynamicAnalysis/DataDirectory.java}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00009 {\cf17 public} {\cf17 class }DataDirectory\par
00010 \{\par
00011     \par
00013     {\cf17 private} {\cf18 byte}[] bytes;\par
00014     \par
00016     {\cf17 private} {\cf18 int} virtualAddress;\par
00017     \par
00019     {\cf17 private} {\cf18 int} size;\par
00020     \par
00028     {\cf17 public} DataDirectory({\cf18 byte}[] bytes, {\cf18 int} virtualAddress, {\cf18 int} size)\par
00029     \{\par
00030         setBytes(bytes);\par
00031         setVirtualAddress(virtualAddress);\par
00032         setSize(size);\par
00033     \}\par
00034     \par
00040     {\cf17 public} {\cf18 byte}[] getBytes()\par
00041     \{\par
00042         {\cf19 return} bytes;\par
00043     \}\par
00044 \par
00050     {\cf17 public} {\cf18 void} setBytes({\cf18 byte}[] bytes)\par
00051     \{\par
00052         this.bytes = bytes;\par
00053     \}\par
00054 \par
00060     {\cf17 public} {\cf18 int} getVirtualAddress()\par
00061     \{\par
00062         {\cf19 return} virtualAddress;\par
00063     \}\par
00064     \par
00070     {\cf17 public} {\cf18 void} setVirtualAddress({\cf18 int} virtualAddress)\par
00071     \{\par
00072         this.virtualAddress = virtualAddress;\par
00073     \}\par
00074     \par
00080     {\cf17 public} {\cf18 int} getSize()\par
00081     \{\par
00082         {\cf19 return} size;\par
00083     \}\par
00084     \par
00090     {\cf17 public} {\cf18 void} setSize({\cf18 int} size)\par
00091     \{\par
00092         this.size = size;\par
00093     \}\par
00094     \par
00095     \par
00096 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Details.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/Details.java}
{\xe \v src/dynamicAnalysis/Details.java}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Composite;\par
00007 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00008 {\cf17 import} org.eclipse.swt.SWT;\par
00009 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00010 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00011 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00012 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00013 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00014 {\cf17 import} org.eclipse.swt.widgets.TableColumn;\par
00015 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00016 \par
00020 {\cf17 public} {\cf17 class }Details {\cf17 extends} Composite\par
00021 \{\par
00022     \par
00024     {\cf17 private} Table table;\par
00025     \par
00027     {\cf17 private} TableItem tableItems[] = {\cf17 new} TableItem[4];\par
00028     \par
00030     {\cf17 private} {\cf18 boolean} selection;\par
00031     \par
00033     {\cf17 private} Button btnInstructions = {\cf17 new} Button({\cf17 this}, SWT.NONE);\par
00034     \par
00036     {\cf17 private} Button btnMemory = {\cf17 new} Button({\cf17 this}, SWT.NONE);\par
00037     \par
00039     {\cf17 private} Button btnAdvanced = {\cf17 new} Button({\cf17 this}, SWT.NONE);\par
00040     \par
00048     {\cf17 public} Details(Composite parent, {\cf18 int} style, {\cf18 boolean} selection)\par
00049     \{\par
00050         super(parent, style);\par
00051         setLayout({\cf17 new} FormLayout());\par
00052         \par
00053         \par
00054         FormData fd_btnInstructions = {\cf17 new} FormData();\par
00055         fd_btnInstructions.right = {\cf17 new} FormAttachment(100, -27);\par
00056         fd_btnInstructions.bottom = {\cf17 new} FormAttachment(table, 25, SWT.TOP);\par
00057         fd_btnInstructions.top = {\cf17 new} FormAttachment(table, 0, SWT.TOP);\par
00058         btnInstructions.setLayoutData(fd_btnInstructions);\par
00059         btnInstructions.setForeground(SWTResourceManager.getColor(SWT.COLOR_WIDGET_LIGHT_SHADOW));\par
00060         btnInstructions.setText({\cf22 "x86 Instructions"});\par
00061         \par
00062         \par
00063         FormData fd_btnMemory = {\cf17 new} FormData();\par
00064         fd_btnMemory.right = {\cf17 new} FormAttachment(100, -27);\par
00065         fd_btnMemory.left = {\cf17 new} FormAttachment(0, 191);\par
00066         fd_btnMemory.top = {\cf17 new} FormAttachment(btnInstructions, 10);\par
00067 \par
00068         btnMemory.setLayoutData(fd_btnMemory);\par
00069         btnMemory.setText({\cf22 "Virtual Memory"});\par
00070         \par
00071         \par
00072         FormData fd_btnAdvanced = {\cf17 new} FormData();\par
00073         \par
00074         fd_btnAdvanced.left = {\cf17 new} FormAttachment(0, 191);\par
00075         fd_btnAdvanced.top = {\cf17 new} FormAttachment(table, -25, SWT.BOTTOM);\par
00076         fd_btnAdvanced.bottom = {\cf17 new} FormAttachment(table, 0, SWT.BOTTOM);\par
00077         btnAdvanced.setLayoutData(fd_btnAdvanced);\par
00078         btnAdvanced.setText({\cf22 "Advanced"});\par
00079         \par
00080         table = {\cf17 new} Table({\cf17 this}, SWT.FULL_SELECTION | SWT.NO_SCROLL);\par
00081         fd_btnAdvanced.bottom = {\cf17 new} FormAttachment(table, 0, SWT.BOTTOM);\par
00082         fd_btnAdvanced.top = {\cf17 new} FormAttachment(btnMemory, 10, SWT.BOTTOM);\par
00083         FormData fd_table = {\cf17 new} FormData();\par
00084         fd_table.left = {\cf17 new} FormAttachment(btnInstructions, -191, SWT.LEFT);\par
00085         fd_table.right = {\cf17 new} FormAttachment(50, 20);\par
00086         fd_table.top = {\cf17 new} FormAttachment(0);\par
00087         fd_table.bottom = {\cf17 new} FormAttachment(100, -20);\par
00088         table.setLayoutData(fd_table);\par
00089         table.setLinesVisible({\cf17 true});\par
00090         table.setHeaderVisible({\cf17 false});\par
00091         \par
00092         fd_btnAdvanced.top = {\cf17 new} FormAttachment(table, -25, SWT.BOTTOM);\par
00093         fd_btnAdvanced.right = {\cf17 new} FormAttachment(btnInstructions, 0, SWT.RIGHT);\par
00094         fd_btnMemory.right = {\cf17 new} FormAttachment(btnInstructions, 0, SWT.RIGHT);\par
00095         fd_btnInstructions.right = {\cf17 new} FormAttachment(table, 100, SWT.RIGHT);\par
00096         fd_btnInstructions.left = {\cf17 new} FormAttachment(table, 5, SWT.RIGHT);\par
00097         \par
00098         TableColumn labels = {\cf17 new} TableColumn(table, SWT.NONE);\par
00099         labels.setWidth(100);\par
00100         \par
00101         TableColumn values = {\cf17 new} TableColumn(table, SWT.CENTER | SWT.V_SCROLL);\par
00102         values.setWidth(150);\par
00103 \par
00104         \par
00105         \par
00106         {\cf19 for}({\cf18 int} index = 0;index<tableItems.length;index++)\par
00107         \{\par
00108             tableItems[index] = {\cf17 new} TableItem(table, SWT.NONE);\par
00109         \}\par
00110         \par
00111         tableItems[0].setText(0, {\cf22 "Directory"});\par
00112         tableItems[1].setText(0, {\cf22 "Version"});\par
00113         tableItems[2].setText(0, {\cf22 "Name"});       \par
00114         tableItems[3].setText(0, {\cf22 "PID"});\par
00115 \par
00116     \}\par
00117     \par
00121     {\cf17 public} {\cf18 void} clearData()\par
00122     \{\par
00123         tableItems[0].setText(1, {\cf22 ""});\par
00124         tableItems[1].setText(1, {\cf22 ""});\par
00125         tableItems[2].setText(1, {\cf22 ""});       \par
00126         tableItems[3].setText(1, {\cf22 ""});\par
00127         btnMemory.setEnabled({\cf17 true});\par
00128         btnAdvanced.setEnabled({\cf17 true});\par
00129         tableItems[0].setGrayed(isSelection());\par
00130         tableItems[1].setGrayed(isSelection());\par
00131         btnInstructions.setEnabled(!isSelection());\par
00132     \}\par
00133     \par
00139     {\cf17 public} {\cf18 boolean} isSelection()\par
00140     \{\par
00141         {\cf19 return} selection;\par
00142     \}\par
00143 \par
00149     {\cf17 public} {\cf18 void} setSelection({\cf18 boolean} selection)\par
00150     \{\par
00151         this.selection = selection;\par
00152     \}\par
00153 \par
00157     @Override\par
00158     {\cf17 protected} {\cf18 void} checkSubclass()\par
00159     \{\par
00160         {\cf20 // Disable the check that prevents subclassing of SWT components}\par
00161     \}\par
00162 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DllFile.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/DllFile.java}
{\xe \v src/dynamicAnalysis/DllFile.java}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.io.File;\par
00007 \par
00011 {\cf17 public} {\cf17 class }DllFile\par
00012 \{\par
00013     \par
00015     {\cf17 private} String path;\par
00016     \par
00018     {\cf17 private} File file;\par
00019 \par
00025     {\cf17 public} DllFile(String path)\par
00026     \{\par
00027         setPath(path);\par
00028         file = createFile();\par
00029     \}\par
00030 \par
00036     {\cf17 public} String getPath()\par
00037     \{\par
00038         {\cf19 return} path;\par
00039     \}\par
00040 \par
00046     {\cf17 public} {\cf18 void} setPath(String path)\par
00047     \{\par
00048         this.path = path;\par
00049     \}\par
00050     \par
00056     {\cf17 public} File getFile()\par
00057     \{\par
00058         {\cf19 return} file;\par
00059     \}\par
00060 \par
00066     {\cf17 private} File createFile()\par
00067     \{\par
00068         {\cf19 return} {\cf17 new} File(getPath());\par
00069     \}\par
00070 \par
00076     @Override\par
00077     {\cf17 public} String toString()\par
00078     \{\par
00079         {\cf19 return} {\cf22 "DllFile [path="} + path + {\cf22 ", file="} + file + {\cf22 "]"};\par
00080     \}\par
00081     \par
00082 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExecuteCode.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/ExecuteCode.java}
{\xe \v src/dynamicAnalysis/ExecuteCode.java}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.io.File;\par
00007 {\cf17 import} java.util.Arrays;\par
00008 \par
00012 {\cf17 public} {\cf17 class }ExecuteCode \{\par
00013     \par
00015     {\cf17 private} {\cf18 byte}[] codes;\par
00016     \par
00018     {\cf17 private} {\cf18 byte} code;\par
00019     \par
00021     {\cf17 private} {\cf18 boolean} isArr;\par
00022     \par
00024     {\cf17 private} File file;\par
00025     \par
00031     {\cf17 private} native {\cf18 void} executeInstruction({\cf18 byte} code);\par
00032     \par
00038     {\cf17 private} native {\cf18 int}[] readRegisters();\par
00039     \par
00040     {\cf17 static} \{System.load(getFile({\cf22 "execute.dll"}));\}\par
00041     \par
00048     {\cf17 public} ExecuteCode({\cf18 byte}[] codes, File file) \{\par
00049         setCodes(codes);\par
00050         setFile(file);\par
00051         isArr={\cf17 true};\par
00052     \}\par
00053     \par
00060     {\cf17 public} ExecuteCode({\cf18 byte} code, File file) \{\par
00061         setCode(code);\par
00062         setFile(file);\par
00063         isArr={\cf17 false};\par
00064     \}\par
00065     \par
00071     {\cf17 public} File getFile()\par
00072     \{\par
00073         {\cf19 return} file;\par
00074     \}\par
00075     \par
00081     {\cf17 public} {\cf18 void} setFile(File file)\par
00082     \{\par
00083         this.file = file;\par
00084     \}\par
00085     \par
00091     {\cf17 public} {\cf18 byte}[] getCodes() \{\par
00092         {\cf19 return} codes;\par
00093     \}\par
00094     \par
00100     {\cf17 public} {\cf18 void} setCodes({\cf18 byte}[] codes) \{\par
00101         this.codes = codes;\par
00102     \}\par
00103     \par
00109     {\cf17 public} {\cf18 byte} getCode() \{\par
00110         {\cf19 return} code;\par
00111     \}\par
00112     \par
00118     {\cf17 public} {\cf18 void} setCode({\cf18 byte} code) \{\par
00119         this.code = code;\par
00120     \}\par
00121     \par
00128     {\cf17 private} {\cf17 static} String getFile(String fileName)\par
00129     \{\par
00130         {\cf19 return} System.getProperty({\cf22 "user.dir"})+{\cf22 "\\\\src\\\\dynamicAnalysis\\\\"}+fileName;\par
00131     \}\par
00132     \par
00138     {\cf17 public} native String test();\par
00139     \par
00140     \par
00141     {\cf20 /*public ProcessManager execute()}\par
00142 {\cf20     \{}\par
00143 {\cf20         ExecuteCode executeCode = new ExecuteCode(getCode(), getFile());}\par
00144 {\cf20         executeCode.executeInstruction(getCode());}\par
00145 {\cf20     \}*/}\par
00151     {\cf17 public} {\cf18 int}[] read()\par
00152     \{\par
00153         {\cf18 int}[] registers = {\cf17 new} {\cf18 int}[4];\par
00154         ExecuteCode executeCode = {\cf17 new} ExecuteCode(getCode(), getFile());\par
00155         registers = executeCode.readRegisters();\par
00156         {\cf19 return} registers;\par
00157     \}\par
00158     \par
00164     @Override\par
00165     {\cf17 public} String toString()\par
00166     \{\par
00167         {\cf19 return} {\cf22 "ExecuteCode [codes="} + Arrays.toString(codes) + {\cf22 ", code="} + code + {\cf22 ", isArr="} + isArr + {\cf22 ", file="} + file\par
00168                 + {\cf22 "]"};\par
00169     \}\par
00170     \par
00171 \}\par
00172  {\cf20 //gcc ExecuteImpl.c -I I:/jre/jre6/include -I I:/jre/jre6/include/win32}\par
00173 {\cf20 //x86_64-w64-mingw32-gcc -I I:/jre/jre6/include -I I:/jre/jre6/include/win32 -shared -o execute.dll ExecuteImpl.c}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FilesComposite.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/FilesComposite.java}
{\xe \v src/dynamicAnalysis/FilesComposite.java}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 package }dynamicAnalysis;\par
00002 \par
00003 {\cf17 import} org.eclipse.swt.widgets.Composite;\par
00004 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00005 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00006 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00007 {\cf17 import} org.eclipse.swt.SWT;\par
00008 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00009 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00010 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00011 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00012 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00013 \par
00017 {\cf17 public} {\cf17 class }FilesComposite {\cf17 extends} Composite\par
00018 \{\par
00019     \par
00021     {\cf17 private} Table dllsTable;\par
00022     \par
00024     {\cf17 private} Table filesTable;\par
00025     \par
00027     {\cf17 private} {\cf18 int} processId;\par
00028 \par
00035     {\cf17 public} FilesComposite(Composite parent, {\cf18 int} style)\par
00036     \{\par
00037         super(parent, style);\par
00038         setProcessId(Window.processId);\par
00039         setLayout({\cf17 new} GridLayout(2, {\cf17 false}));\par
00040         \par
00041         dllsTable = {\cf17 new} Table({\cf17 this}, SWT.BORDER | SWT.FULL_SELECTION);\par
00042         GridData gd_dllsTable = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 false}, {\cf17 true}, 1, 1);\par
00043         gd_dllsTable.widthHint = 222;\par
00044         dllsTable.setLayoutData(gd_dllsTable);\par
00045         dllsTable.setHeaderVisible({\cf17 true});\par
00046         dllsTable.setLinesVisible({\cf17 true});\par
00047         \par
00048         filesTable = {\cf17 new} Table({\cf17 this}, SWT.BORDER | SWT.FULL_SELECTION);\par
00049         filesTable.setLayoutData({\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 true}, {\cf17 true}, 1, 1));\par
00050         filesTable.setHeaderVisible({\cf17 true});\par
00051         filesTable.setLinesVisible({\cf17 true});\par
00052         \par
00053         ProcessManager processManager = {\cf17 new} ProcessManager(getProcessId());\par
00054         String[] DLLs = processManager.getDLLs();\par
00055         {\cf19 for}({\cf18 int} index=0;index<DLLs.length;index++)\par
00056         \{\par
00057             TableItem tableItem = {\cf17 new} TableItem(dllsTable, SWT.NULL);\par
00058             tableItem.setText(DLLs[index]);\par
00059         \}\par
00060         String files[] = processManager.getFiles();\par
00061         System.out.println({\cf22 "files: "}+files.length);\par
00062         {\cf19 for}({\cf18 int} index=0;index<files.length;index++)\par
00063         \{\par
00064             TableItem tableItem = {\cf17 new} TableItem(filesTable, SWT.NULL);\par
00065             System.out.println({\cf22 "files: "}+files[index]);\par
00066             tableItem.setText(files[index]);\par
00067         \}\par
00068         \par
00069     \}\par
00070 \par
00071     \par
00072     \par
00078     {\cf17 public} {\cf18 int} getProcessId()\par
00079     \{\par
00080         {\cf19 return} processId;\par
00081     \}\par
00082 \par
00088     {\cf17 public} {\cf18 void} setProcessId({\cf18 int} processId)\par
00089     \{\par
00090         this.processId = processId;\par
00091     \}\par
00092 \par
00096     @Override\par
00097     {\cf17 protected} {\cf18 void} checkSubclass()\par
00098     \{\par
00099         {\cf20 // Disable the check that prevents subclassing of SWT components}\par
00100     \}\par
00101 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InstructionsComposite.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/InstructionsComposite.java}
{\xe \v src/dynamicAnalysis/InstructionsComposite.java}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Composite;\par
00007 {\cf17 import} org.eclipse.swt.widgets.Control;\par
00008 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00009 {\cf17 import} org.eclipse.swt.widgets.Event;\par
00010 {\cf17 import} org.eclipse.swt.widgets.FileDialog;\par
00011 {\cf17 import} org.eclipse.swt.widgets.Listener;\par
00012 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00013 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00014 \par
00015 {\cf17 import} java.io.File;\par
00016 {\cf17 import} java.io.FileNotFoundException;\par
00017 {\cf17 import} java.io.FileOutputStream;\par
00018 {\cf17 import} java.io.IOException;\par
00019 {\cf17 import} java.util.ArrayList;\par
00020 \par
00021 {\cf17 import} org.eclipse.swt.SWT;\par
00022 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00023 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00024 {\cf17 import} org.eclipse.swt.widgets.TableColumn;\par
00025 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00026 \par
00027 {\cf17 import} capstone.Capstone;\par
00028 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00029 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00030 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00031 {\cf17 import} org.eclipse.swt.graphics.Color;\par
00032 {\cf17 import} org.eclipse.swt.custom.CCombo;\par
00033 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00034 \par
00038 {\cf17 public} {\cf17 class }InstructionsComposite {\cf17 extends} Composite\par
00039 \{\par
00040     \par
00042     {\cf17 private} Table tableInstructions;\par
00043     \par
00045     {\cf17 private} Capstone.CsInsn[] allInsn;\par
00046     \par
00048     {\cf17 private} Text textOpcode;\par
00049     \par
00051     {\cf17 private} TableColumn tblclmnAddress;\par
00052     \par
00054     {\cf17 private} TableColumn tblclmnMnemonic;\par
00055     \par
00057     {\cf17 private} TableColumn tblclmnOpcode;\par
00058     \par
00060     {\cf17 private} {\cf18 byte}[] updatedInstructions;\par
00061     \par
00063     {\cf17 private} Composite parent;\par
00064     \par
00066     {\cf17 private} TableItem[] tableItems = {\cf17 null};\par
00067     \par
00075     {\cf17 public} InstructionsComposite(Composite parent, {\cf18 int} style, File file)\par
00076     \{\par
00077         super(parent, style);\par
00078         this.parent = parent;\par
00079         setLayout({\cf17 new} FormLayout());\par
00080         \par
00081         CodeExtract codeExtract = {\cf17 new} CodeExtract(file);\par
00082         codeExtract.loadInstructions();\par
00083         allInsn = codeExtract.getAllInsn();\par
00084         setAllInsn(allInsn);\par
00085         \par
00086         tableInstructions = {\cf17 new} Table({\cf17 this}, SWT.BORDER | SWT.FULL_SELECTION | SWT.VIRTUAL);\par
00087         FormData fd_tableInstructions = {\cf17 new} FormData();\par
00088         fd_tableInstructions.top = {\cf17 new} FormAttachment(0, 10);\par
00089         fd_tableInstructions.left = {\cf17 new} FormAttachment(0, 10);\par
00090         fd_tableInstructions.right = {\cf17 new} FormAttachment(0, 353);\par
00091         tableInstructions.setLayoutData(fd_tableInstructions);\par
00092         tableInstructions.setHeaderVisible({\cf17 true});\par
00093         tableInstructions.setLinesVisible({\cf17 true});\par
00094         tableInstructions.setItemCount(getAllInsn().length);\par
00095         \par
00096         Text comboMnemonic = {\cf17 new} Text({\cf17 this}, SWT.BORDER);\par
00097         \par
00098         tableInstructions.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00099               {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00100                 Capstone.CsInsn instruction = getAllInsn()[tableInstructions.getSelectionIndex()];\par
00101                 {\cf19 if}(tableItems!={\cf17 null}) clearColors(tableItems);\par
00102                 tableItems = {\cf17 null};\par
00103                 {\cf19 if}(instruction.groups.length == 2)\par
00104                 \{\par
00105                     {\cf19 if}(instruction.groups[0] == 7 && instruction.groups[1] == 1) {\cf20 //group for jump instructions, jmp works differently ?}\par
00106                     \{\par
00107                         {\cf18 long} entryIndex = tableInstructions.getSelectionIndex();\par
00108                         {\cf18 long} operandIndex = instruction.bytes[1] + entryIndex;\par
00109                         {\cf18 boolean} lowerOperand = instruction.bytes[1] < 0;\par
00110                         System.out.println({\cf22 "lower operand: "}+lowerOperand);\par
00111                         System.out.println({\cf22 "entry index"} + entryIndex);\par
00112                         System.out.println({\cf22 "operand index "} + operandIndex );\par
00113                         {\cf19 if}(lowerOperand) entryIndex--;\par
00114                         {\cf19 else} entryIndex++;\par
00115                         System.out.println({\cf22 "instruction addr: "}+Long.decode(instruction.opStr));\par
00116                         tableItems = {\cf17 new} TableItem[Math.abs(instruction.bytes[1])];\par
00117                         {\cf18 int} tableIndex = 0;\par
00118                         {\cf19 while}(Long.decode(instruction.opStr) != ((Capstone.CsInsn)(tableInstructions.getItem(({\cf18 int}) entryIndex).getData())).address)\par
00119                         \{\par
00120                             System.out.println(entryIndex);\par
00121                             {\cf19 try}\par
00122                             \{\par
00123                                 tableItems = setGray(tableInstructions.getItem(({\cf18 int}) entryIndex), tableItems, tableIndex);\par
00124                                 tableIndex++;\par
00125                             \}\par
00126                             {\cf19 catch}(ArrayIndexOutOfBoundsException e1)\par
00127                             \{\par
00128                                 e1.printStackTrace();\par
00129                                 clearColors(tableItems);\par
00130                             \}\par
00131                             {\cf19 if}(lowerOperand) entryIndex--;\par
00132                             {\cf19 else} entryIndex++;\par
00133                         \}                   \par
00134                         tableItems = setGreen(tableInstructions.getItem(({\cf18 int}) entryIndex), tableItems, tableIndex);\par
00135                     \}\par
00136                 \}\par
00137                 TableItem item = tableInstructions.getSelection()[0];\par
00138                 System.out.println(item.getText());\par
00139                 {\cf20 //comboMnemonic.setText(Integer.toString(instruction.bytes[0] & 0xff));}\par
00140                 comboMnemonic.setText(Byte.toString(instruction.bytes[0]));\par
00141                 String opcode = {\cf22 ""};\par
00142                 {\cf19 for}({\cf18 int} index = 1;index<instruction.bytes.length;index++)\par
00143                 \{\par
00144                     {\cf20 //opcode+=Integer.toString(instruction.bytes[index] & 0xff)+" ";}\par
00145                     opcode+=Byte.toString(instruction.bytes[index])+{\cf22 " "};\par
00146                 \}\par
00147                 {\cf19 if}(opcode.length()!=0) textOpcode.setText(opcode.substring(0, opcode.length()-1));\par
00148                 {\cf19 else} textOpcode.setText(opcode);\par
00149                   \par
00150               \}\par
00151         \});\par
00152         \par
00153         tblclmnAddress = {\cf17 new} TableColumn(tableInstructions, SWT.NONE);\par
00154         tblclmnAddress.setWidth(100);\par
00155         tblclmnAddress.setText({\cf22 "Address"});\par
00156         \par
00157         tblclmnMnemonic = {\cf17 new} TableColumn(tableInstructions, SWT.NONE);\par
00158         tblclmnMnemonic.setWidth(100);\par
00159         tblclmnMnemonic.setText({\cf22 "Mnemonic"});\par
00160         \par
00161         tblclmnOpcode = {\cf17 new} TableColumn(tableInstructions, SWT.NONE);\par
00162         tblclmnOpcode.setWidth(5000);   \par
00163         tblclmnOpcode.setText({\cf22 "Opcode"});\par
00164         \par
00165         Button btnSave = {\cf17 new} Button({\cf17 this}, SWT.NONE);\par
00166         btnSave.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00167             @Override\par
00168             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00169                 {\cf18 byte}[] bytes = {\cf17 null};\par
00170                 {\cf19 try}\par
00171                 \{\par
00172                     bytes = codeExtract.getBytes();\par
00173                 \} {\cf19 catch} (IOException e2)\par
00174                 \{\par
00175                     e2.printStackTrace();\par
00176                 \}\par
00177                 {\cf18 int} bytesIndex = codeExtract.getPointer();\par
00178                 {\cf19 for}({\cf18 int} index=0;index<tableInstructions.getItemCount();index++)\par
00179                 \{\par
00180                     Capstone.CsInsn instruction = (Capstone.CsInsn) tableInstructions.getItem(index).getData();\par
00181                     {\cf19 for}({\cf18 int} j = 0; j < instruction.bytes.length; j++)\par
00182                     \{\par
00183                         bytes[bytesIndex] = instruction.bytes[j];\par
00184                         bytesIndex++;\par
00185                     \}\par
00186                 \}\par
00187                 FileDialog fileDialog = {\cf17 new} FileDialog(parent.getShell(), SWT.MULTI);\par
00188                 String[] files = \{\par
00189                         {\cf22 "*.exe"},\par
00190                     \};\par
00191                     fileDialog.setFilterExtensions(files);\par
00192                     fileDialog.setFilterPath(file.getPath());\par
00193                     fileDialog.setFileName(codeExtract.getFile().getName().substring(0, codeExtract.getFile().getName().length()-4)+{\cf22 "_1.exe"});\par
00194                 {\cf19 try} (FileOutputStream fos = {\cf17 new} FileOutputStream(fileDialog.open())) \{\par
00195                        fos.write(bytes);\par
00196                     \} {\cf19 catch} (FileNotFoundException e1)\par
00197                     \{\par
00198                         e1.printStackTrace();\par
00199                     \} {\cf19 catch} (IOException e1)\par
00200                     \{\par
00201                         e1.printStackTrace();\par
00202                     \}\par
00203             \}\par
00204         \});\par
00205         fd_tableInstructions.bottom = {\cf17 new} FormAttachment(100, -41);\par
00206         fd_tableInstructions.right = {\cf17 new} FormAttachment(btnSave, -20);\par
00207         FormData fd_btnSave = {\cf17 new} FormData();\par
00208         fd_btnSave.right = {\cf17 new} FormAttachment(100, -10);\par
00209         fd_btnSave.top = {\cf17 new} FormAttachment(0, 10);\par
00210         btnSave.setLayoutData(fd_btnSave);\par
00211         btnSave.setText({\cf22 "Save"});\par
00212 \par
00213         fillTable();\par
00214         tableInstructions.pack();\par
00215         \par
00216         \par
00217         FormData fd_comboMnemonic = {\cf17 new} FormData();\par
00218         fd_comboMnemonic.top = {\cf17 new} FormAttachment(tableInstructions, 6);\par
00219         fd_comboMnemonic.left = {\cf17 new} FormAttachment(0, 109);\par
00220         fd_comboMnemonic.right = {\cf17 new} FormAttachment(0, 207);\par
00221         comboMnemonic.setLayoutData(fd_comboMnemonic);\par
00222         \par
00223         textOpcode = {\cf17 new} Text({\cf17 this}, SWT.BORDER);\par
00224         FormData fd_textOpcode = {\cf17 new} FormData();\par
00225         fd_textOpcode.left = {\cf17 new} FormAttachment(comboMnemonic, 6);\par
00226         fd_textOpcode.top = {\cf17 new} FormAttachment(tableInstructions, 6);\par
00227         textOpcode.setLayoutData(fd_textOpcode);\par
00228         \par
00229         Button btnNewButton = {\cf17 new} Button({\cf17 this}, SWT.NONE);\par
00230         btnNewButton.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00231             @Override\par
00232             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00233                 String opcodeInstructions = textOpcode.getText();\par
00234                 {\cf18 int} count = 2;\par
00235                 {\cf19 for}({\cf18 int} index = 0;index<opcodeInstructions.length();index++)\par
00236                 \{\par
00237                     {\cf19 if}(opcodeInstructions.charAt(index)=={\cf23 ' '})\par
00238                     \{\par
00239                         count++;\par
00240                     \}\par
00241                 \}\par
00242                 {\cf19 if}(opcodeInstructions.equals({\cf22 ""})) count=1;\par
00243                 {\cf18 byte}[] updatedInstruction = {\cf17 new} {\cf18 byte}[count];\par
00244                 updatedInstruction[0]=Byte.parseByte(comboMnemonic.getText());\par
00245                 Capstone cs;\par
00246                 {\cf19 if}(codeExtract.getVersion() == Version.x32)\par
00247                 \{\par
00248                     cs = {\cf17 new} Capstone(Capstone.CS_ARCH_X86, Capstone.CS_MODE_32);\par
00249                 \}\par
00250                 {\cf19 else}\par
00251                 \{\par
00252                     cs = {\cf17 new} Capstone(Capstone.CS_ARCH_X86, Capstone.CS_MODE_64);\par
00253                 \}\par
00254                 {\cf19 if}(!opcodeInstructions.equals({\cf22 ""}))\par
00255                 \{\par
00256                     {\cf18 int} instructionIndex = 1;\par
00257                     {\cf19 while}(opcodeInstructions.contains({\cf22 " "}))\par
00258                     \{\par
00259                         updatedInstruction[instructionIndex]=Byte.parseByte(opcodeInstructions.substring(0, opcodeInstructions.indexOf({\cf23 ' '})));\par
00260                         opcodeInstructions = opcodeInstructions.substring(opcodeInstructions.indexOf({\cf23 ' '})+1);\par
00261                         instructionIndex++;\par
00262                     \}\par
00263                     updatedInstruction[instructionIndex]=Byte.parseByte(opcodeInstructions);\par
00264                 \}\par
00265                 Capstone.CsInsn[] instruction = cs.disasm(updatedInstruction, ((Capstone.CsInsn)tableInstructions.getSelection()[0].getData()).address);\par
00266                 tableInstructions.getSelection()[0].setText(0, {\cf22 "0x"}+Long.toHexString(instruction[0].address));\par
00267                 tableInstructions.getSelection()[0].setText(1, instruction[0].mnemonic);\par
00268                 tableInstructions.getSelection()[0].setText(2, instruction[0].opStr);\par
00269                 tableInstructions.getSelection()[0].setData(instruction[0]);\par
00270                 System.out.println(((Capstone.CsInsn)tableInstructions.getSelection()[0].getData()).opStr);\par
00271             \}\par
00272         \});\par
00273         fd_textOpcode.right = {\cf17 new} FormAttachment(100, -143);\par
00274         FormData fd_btnNewButton = {\cf17 new} FormData();\par
00275         fd_btnNewButton.bottom = {\cf17 new} FormAttachment(comboMnemonic, 0, SWT.BOTTOM);\par
00276         fd_btnNewButton.top = {\cf17 new} FormAttachment(tableInstructions, 6);\par
00277         fd_btnNewButton.right = {\cf17 new} FormAttachment(tableInstructions, 0, SWT.RIGHT);\par
00278         fd_btnNewButton.left = {\cf17 new} FormAttachment(textOpcode, 28);\par
00279         btnNewButton.setLayoutData(fd_btnNewButton);\par
00280         btnNewButton.setText({\cf22 "Replace"});\par
00281         \par
00282     \}\par
00283     \par
00287     {\cf17 private} {\cf18 void} fillTable()\par
00288     \{\par
00289         {\cf17 new} Thread() \{\par
00290             {\cf17 public} {\cf18 void} run() \{\par
00291                 {\cf18 long} start = System.currentTimeMillis();\par
00292                 Capstone.CsInsn[] allInsn = getAllInsn();\par
00293                 System.out.println({\cf22 "time for capstone load: "}+(System.currentTimeMillis()-start));\par
00294                 TableItem[] tableItems = {\cf17 new} TableItem[allInsn.length];\par
00295                 Display.getDefault().asyncExec({\cf17 new} Runnable() \{\par
00296                     @Override\par
00297                     {\cf17 public} {\cf18 void} run() \{\par
00298                         \par
00299                         {\cf19 for}({\cf18 int} index=0;index<allInsn.length;index++)\par
00300                         \{\par
00301                             tableInstructions.getItem(index).setText(0, {\cf22 "0x"}+Long.toHexString(allInsn[index].address));\par
00302                             tableInstructions.getItem(index).setText(1, allInsn[index].mnemonic);\par
00303                             tableInstructions.getItem(index).setText(2, allInsn[index].opStr);\par
00304                             tableInstructions.getItem(index).setData(allInsn[index]);\par
00305                         \}\par
00306                     \}\par
00307                  \});\par
00308             \}\par
00309         \}.start();\par
00310         \par
00311         \par
00312     \}\par
00313     \par
00323     {\cf17 private} TableItem[] setColor(TableItem item, Color color, TableItem[] items, {\cf18 int} index)\par
00324     \{\par
00325         items[index] = item;\par
00326         item.setBackground(color);\par
00327         {\cf19 return} items;\par
00328     \}\par
00329     \par
00336     {\cf17 private} {\cf18 void} setColor(TableItem item, Color color)\par
00337     \{\par
00338         item.setBackground(color);\par
00339     \}\par
00340     \par
00349     {\cf17 private} TableItem[] setGray(TableItem item, TableItem[] items, {\cf18 int} index)\par
00350     \{\par
00351         {\cf19 return} setColor(item, {\cf17 new} Color(parent.getDisplay(), 200, 200, 200), items, index);\par
00352     \}\par
00353     \par
00362     {\cf17 private} TableItem[] setGreen(TableItem item, TableItem[] items, {\cf18 int} index)\par
00363     \{\par
00364         {\cf19 return} setColor(item, {\cf17 new} Color(parent.getDisplay(), 0, 255, 0), items, index);\par
00365     \}\par
00366     \par
00372     {\cf17 private} {\cf18 void} clearColors(TableItem[] items)\par
00373     \{\par
00374         {\cf19 for}({\cf18 int} index = 0;index < items.length;index++)\par
00375         \{\par
00376             {\cf19 try}\par
00377             \{\par
00378                 System.out.println({\cf22 "data: "}+items[index]);\par
00379                 setColor(items[index], {\cf17 new} Color(parent.getDisplay(), 255, 255, 255));\par
00380             \}\par
00381             {\cf19 catch}(NullPointerException e)\par
00382             \{\par
00383                 {\cf19 break};\par
00384             \}\par
00385         \}\par
00386     \}\par
00387     \par
00391     @Override\par
00392     {\cf17 public} {\cf18 void} layout()\par
00393     \{\par
00394         System.out.println({\cf22 "printing layout"});\par
00395     \}\par
00396     \par
00397     \par
00403     {\cf17 public} Capstone.CsInsn[] getAllInsn()\par
00404     \{\par
00405         {\cf19 return} allInsn;\par
00406     \}\par
00407 \par
00413     {\cf17 public} {\cf18 void} setAllInsn(Capstone.CsInsn[] allInsn)\par
00414     \{\par
00415         this.allInsn = allInsn;\par
00416     \}\par
00417 \par
00421     @Override\par
00422     {\cf17 protected} {\cf18 void} checkSubclass()\par
00423     \{\par
00424         {\cf20 // Disable the check that prevents subclassing of SWT components}\par
00425     \}\par
00426 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LegacyWindow.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/LegacyWindow.java}
{\xe \v src/dynamicAnalysis/LegacyWindow.java}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00007 {\cf17 import} org.eclipse.swt.widgets.Event;\par
00008 {\cf17 import} org.eclipse.swt.widgets.Shell;\par
00009 {\cf17 import} org.eclipse.swt.widgets.Menu;\par
00010 {\cf17 import} org.eclipse.swt.SWT;\par
00011 {\cf17 import} org.eclipse.swt.widgets.MenuItem;\par
00012 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00013 {\cf17 import} org.eclipse.swt.widgets.Listener;\par
00014 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00015 \par
00016 \par
00017 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00018 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00019 \par
00020 {\cf17 import} java.awt.Dimension;\par
00021 {\cf17 import} java.awt.Toolkit;\par
00022 {\cf17 import} java.io.File;\par
00023 \par
00024 {\cf17 import} org.eclipse.jface.viewers.TableViewer;\par
00025 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00026 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00027 {\cf17 import} org.eclipse.swt.widgets.TableColumn;\par
00028 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00029 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00030 \par
00031 {\cf17 import} javax.sound.sampled.*;\par
00032 \par
00036 {\cf17 public} {\cf17 class }LegacyWindow \{\par
00037 \par
00039     {\cf17 protected} Shell shell;\par
00040     \par
00042     {\cf17 private} Table code;\par
00043     \par
00045     {\cf17 private} Table details;\par
00046     \par
00048     {\cf17 private} Table dllImports;\par
00049     \par
00051     {\cf17 private} String filePath;\par
00052     \par
00054     {\cf17 static} TableItem tableItems[] = {\cf17 new} TableItem[4];\par
00055     \par
00061     {\cf17 public} {\cf17 static} {\cf18 void} main(String[] args) \{\par
00062         {\cf19 try} \{\par
00063             LegacyWindow window = {\cf17 new} LegacyWindow();\par
00064             window.open();\par
00065         \} {\cf19 catch} (Exception e) \{\par
00066             e.printStackTrace();\par
00067         \}\par
00068         \par
00069     \}\par
00070     \par
00074     {\cf17 public} {\cf18 void} open() \{\par
00075         Display display = Display.getDefault();\par
00076         createContents();\par
00077         shell.open();\par
00078         shell.layout();\par
00079         {\cf19 while} (!shell.isDisposed()) \{\par
00080             {\cf19 if} (!display.readAndDispatch()) \{\par
00081                 display.sleep();\par
00082             \}\par
00083         \}\par
00084     \}\par
00085 \par
00087     {\cf17 public} {\cf17 static} {\cf18 float} SAMPLE_RATE = 8000f;\par
00088     \par
00096     {\cf17 public} {\cf18 void} tone({\cf18 int} hz, {\cf18 int} msecs) {\cf19 throws} LineUnavailableException \par
00097       \{\par
00098          tone(hz, msecs, 1.0);\par
00099       \}\par
00100 \par
00109     {\cf17 public} {\cf17 static} {\cf18 void} tone({\cf18 int} hz, {\cf18 int} msecs, {\cf18 double} vol)\par
00110           {\cf19 throws} LineUnavailableException \par
00111       \{\par
00112         {\cf18 byte}[] buf = {\cf17 new} {\cf18 byte}[1];\par
00113         AudioFormat af = \par
00114             {\cf17 new} AudioFormat(\par
00115                 SAMPLE_RATE, {\cf20 // sampleRate}\par
00116                 8,           {\cf20 // sampleSizeInBits}\par
00117                 1,           {\cf20 // channels}\par
00118                 {\cf17 true},        {\cf20 // signed}\par
00119                 {\cf17 false});      {\cf20 // bigEndian}\par
00120         SourceDataLine sdl = AudioSystem.getSourceDataLine(af);\par
00121         sdl.open(af);\par
00122         sdl.start();\par
00123         {\cf19 for} ({\cf18 int} i=0; i < msecs*8; i++) \{\par
00124           {\cf18 double} angle = i / (SAMPLE_RATE / hz) * 2.0 * Math.PI;\par
00125           buf[0] = ({\cf18 byte})(Math.sin(angle) * 127.0 * vol);\par
00126           sdl.write(buf,0,1);\par
00127         \}\par
00128         sdl.drain();\par
00129         sdl.stop();\par
00130         sdl.close();\par
00131       \}\par
00132     \par
00136     {\cf17 protected} {\cf18 void} createContents() \{\par
00137         shell = {\cf17 new} Shell();\par
00138         shell.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00139         shell.setSize(881, 520);\par
00140         shell.setText({\cf22 "Dynamic Malware Analysis"});\par
00141         \par
00142         Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();\par
00143         shell.setLocation((dim.width/2)-400,(dim.height/2)-200);\par
00144         \par
00145         GridLayout gl_shell = {\cf17 new} GridLayout(9, {\cf17 false});\par
00146         gl_shell.marginBottom = 15;\par
00147         shell.setLayout(gl_shell);\par
00148         \par
00149         Menu menu = {\cf17 new} Menu(shell, SWT.BAR);\par
00150         shell.setMenuBar(menu);\par
00151         \par
00152         MenuItem mntmFile_1 = {\cf17 new} MenuItem(menu, SWT.CASCADE);\par
00153         mntmFile_1.setText({\cf22 "File"});\par
00154         \par
00155         Menu menu_1 = {\cf17 new} Menu(mntmFile_1);\par
00156         mntmFile_1.setMenu(menu_1);\par
00157         \par
00158         MenuItem mntmEdit = {\cf17 new} MenuItem(menu, SWT.NONE);\par
00159         mntmEdit.setText({\cf22 "Edit"});\par
00160         \par
00161         MenuItem mntmView = {\cf17 new} MenuItem(menu, SWT.CASCADE);\par
00162         mntmView.setText({\cf22 "View"});\par
00163         \par
00164         Menu menu_2 = {\cf17 new} Menu(mntmView);\par
00165         mntmView.setMenu(menu_2);\par
00166         \par
00167         MenuItem mntmVirtualMemory = {\cf17 new} MenuItem(menu_2, SWT.NONE);\par
00168         mntmVirtualMemory.setText({\cf22 "Virtual Memory"});\par
00169         \par
00170         mntmVirtualMemory.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00171             {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00172                 System.out.println(tableItems[3].getText(1));\par
00173                 {\cf19 try}\par
00174                 \{\par
00175                     MemoryWindow memoryWindow = {\cf17 new} MemoryWindow(Integer.parseInt(tableItems[3].getText(1)), shell.getLocation().x, shell.getLocation().y);\par
00176                     memoryWindow.open();\par
00177                 \}\par
00178                 {\cf19 catch}(NumberFormatException e1)\par
00179                 \{\par
00180                     \par
00181                 \}\par
00182             \}\par
00183         \});\par
00184         \par
00185         MenuItem mntmHelp = {\cf17 new} MenuItem(menu, SWT.NONE);\par
00186         mntmHelp.setText({\cf22 "Help"});\par
00187         {\cf17 new} Label(shell, SWT.NONE);\par
00188         {\cf17 new} Label(shell, SWT.NONE);\par
00189         \par
00190         MenuItem mntmOpen = {\cf17 new} MenuItem(menu_1, SWT.NONE);\par
00191         mntmOpen.setText({\cf22 "Open"});       \par
00192         \par
00193         MenuItem mntmRun = {\cf17 new} MenuItem(menu, SWT.NONE);\par
00194         mntmRun.setText({\cf22 "Run"});\par
00195         mntmRun.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00196             @Override\par
00197             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00198                 {\cf19 try}\par
00199                 \{\par
00200                     ProcessManager process = {\cf17 new} ProcessManager({\cf17 new} File(filePath));\par
00201                     tableItems[2].setText(1, process.getName());\par
00202                     tableItems[3].setText(1, process.getPidAsString());\par
00203                     String[] DLLs = process.getDLLs();\par
00204                     dllImports.clearAll();\par
00205                     dllImports.setItemCount(0);\par
00206                     {\cf19 for}({\cf18 int} index=0;index<DLLs.length;index++)\par
00207                     \{\par
00208                         TableItem tableItem = {\cf17 new} TableItem(dllImports, SWT.NULL);\par
00209                         tableItem.setText(DLLs[index]);\par
00210                     \} \par
00211                 \}\par
00212                 {\cf19 catch}(NullPointerException e1) \par
00213                 \{\par
00214                     System.out.println({\cf22 "No file selected"});\par
00215                 \}\par
00216             \}\par
00217         \});\par
00218         {\cf17 new} Label(shell, SWT.NONE);\par
00219         {\cf17 new} Label(shell, SWT.NONE);\par
00220         {\cf17 new} Label(shell, SWT.NONE);\par
00221         {\cf17 new} Label(shell, SWT.NONE);\par
00222         {\cf17 new} Label(shell, SWT.NONE);\par
00223         {\cf17 new} Label(shell, SWT.NONE);\par
00224         {\cf17 new} Label(shell, SWT.NONE);\par
00225         {\cf17 new} Label(shell, SWT.NONE);\par
00226         \par
00227         Label lblCode = {\cf17 new} Label(shell, SWT.NONE);\par
00228         lblCode.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00229         lblCode.setLayoutData({\cf17 new} GridData(SWT.CENTER, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1));\par
00230         lblCode.setAlignment(SWT.RIGHT);\par
00231         lblCode.setFont(SWTResourceManager.getFont({\cf22 "Segoe UI"}, 11, SWT.BOLD));\par
00232         lblCode.setText({\cf22 "Code"});\par
00233         {\cf17 new} Label(shell, SWT.NONE);\par
00234         {\cf17 new} Label(shell, SWT.NONE);\par
00235         {\cf17 new} Label(shell, SWT.NONE);\par
00236         \par
00237         Label lblDetails = {\cf17 new} Label(shell, SWT.NONE);\par
00238         lblDetails.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00239         GridData gd_lblDetails = {\cf17 new} GridData(SWT.CENTER, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1);\par
00240         gd_lblDetails.widthHint = 82;\par
00241         lblDetails.setLayoutData(gd_lblDetails);\par
00242         lblDetails.setText({\cf22 "Details"});\par
00243         lblDetails.setFont(SWTResourceManager.getFont({\cf22 "Segoe UI"}, 11, SWT.BOLD));\par
00244         lblDetails.setAlignment(SWT.CENTER);\par
00245         {\cf17 new} Label(shell, SWT.NONE);\par
00246         \par
00247         Label lblDllImports = {\cf17 new} Label(shell, SWT.NONE);\par
00248         lblDllImports.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00249         lblDllImports.setLayoutData({\cf17 new} GridData(SWT.CENTER, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1));\par
00250         lblDllImports.setText({\cf22 "DLL Imports"});\par
00251         lblDllImports.setFont(SWTResourceManager.getFont({\cf22 "Segoe UI"}, 11, SWT.BOLD));\par
00252         lblDllImports.setAlignment(SWT.CENTER);\par
00253         {\cf17 new} Label(shell, SWT.NONE);\par
00254         {\cf17 new} Label(shell, SWT.NONE);\par
00255         \par
00256         TableViewer tableViewer = {\cf17 new} TableViewer(shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.V_SCROLL);\par
00257         code = tableViewer.getTable();\par
00258         code.setToolTipText({\cf22 "x86 instructions"});\par
00259         code.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00260         code.setHeaderBackground(SWTResourceManager.getColor(192, 192, 192));\par
00261         GridData gd_code = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 true}, {\cf17 true}, 1, 1);\par
00262         gd_code.widthHint = 121;\par
00263         gd_code.heightHint = 313;\par
00264         code.setLayoutData(gd_code);\par
00265         {\cf17 new} Label(shell, SWT.NONE);\par
00266         {\cf17 new} Label(shell, SWT.NONE);\par
00267         {\cf17 new} Label(shell, SWT.NONE);\par
00268         \par
00269         details = {\cf17 new} Table(shell, SWT.BORDER | SWT.FULL_SELECTION);\par
00270         details.setToolTipText({\cf22 "File information"});\par
00271         details.setHeaderBackground(SWTResourceManager.getColor(192, 192, 192));\par
00272         details.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00273         GridData gd_details = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 false}, {\cf17 false}, 1, 1);\par
00274         gd_details.widthHint = 316;\par
00275         details.setLayoutData(gd_details);\par
00276         details.setHeaderVisible({\cf17 true});\par
00277         details.pack();\par
00278         \par
00279         TableColumn labels = {\cf17 new} TableColumn(details, SWT.CENTER);\par
00280         labels.setWidth(160);\par
00281         labels.setText({\cf22 "Labels"});\par
00282         \par
00283         TableColumn values = {\cf17 new} TableColumn(details, SWT.CENTER | SWT.V_SCROLL);\par
00284         values.setWidth(170);\par
00285         values.setText({\cf22 "Values"});\par
00286         {\cf17 new} Label(shell, SWT.NONE);\par
00287         \par
00288         dllImports = {\cf17 new} Table(shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.V_SCROLL);\par
00289         dllImports.setToolTipText({\cf22 "DLL file paths"});\par
00290         dllImports.setHeaderBackground(SWTResourceManager.getColor(192, 192, 192));\par
00291         dllImports.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00292         GridData gd_dllImports = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 true}, {\cf17 false}, 1, 1);\par
00293         gd_dllImports.widthHint = 200;\par
00294         dllImports.setLayoutData(gd_dllImports);\par
00295         {\cf17 new} Label(shell, SWT.NONE);\par
00296         \par
00297         {\cf19 for}({\cf18 int} index = 0;index<tableItems.length;index++)\par
00298         \{\par
00299             tableItems[index] = {\cf17 new} TableItem(details, SWT.NONE);\par
00300         \}\par
00301         tableItems[0].setText(0, {\cf22 "Directory"});\par
00302         tableItems[1].setText(0, {\cf22 "Version"});\par
00303         tableItems[2].setText(0, {\cf22 "Name"});       \par
00304         tableItems[3].setText(0, {\cf22 "PID"});\par
00305         \par
00306         \par
00307         mntmOpen.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00308             {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00309                 SelectFile selectFile = {\cf17 new} SelectFile(shell.getLocation().x, shell.getLocation().y, {\cf17 true});\par
00310                 code.clearAll();\par
00311                 {\cf19 if}(!selectFile.isPidMode())\par
00312                 \{\par
00313                     filePath = selectFile.getText();\par
00314                     {\cf19 try}\par
00315                     \{\par
00316                         tableItems[0].setText(1, filePath);\par
00317                         {\cf19 try}\par
00318                         \{\par
00319                             CodeExtract codeExtract = {\cf17 new} CodeExtract({\cf17 new} File(filePath));\par
00320                             String[] codeArr = codeExtract.getCodeArr();\par
00321                            {\cf20 // byte[] resources = codeExtract.getResources();}\par
00322                             {\cf19 if}(codeExtract.getPeFile().getVersion() == Version.x32)\par
00323                             \{\par
00324                                 tableItems[1].setText(1, {\cf22 "32-bit"});\par
00325                             \}\par
00326                             {\cf19 else}\par
00327                             \{\par
00328                                 tableItems[1].setText(1, {\cf22 "64-bit"});\par
00329                             \}               \par
00330                             code.setItemCount(0);\par
00331                             dllImports.clearAll();\par
00332                             {\cf19 for}({\cf18 int} index=0;index<codeArr.length;index++)\par
00333                             \{\par
00334                                 TableItem tableItem = {\cf17 new} TableItem(code, SWT.NULL);\par
00335                                 tableItem.setText(codeArr[index]);\par
00336                             \}\par
00337                             tableItems[0].setGrayed({\cf17 false});\par
00338                             tableItems[1].setGrayed({\cf17 false});\par
00339                         \}\par
00340                         {\cf19 catch} (NullPointerException e1) \{\}\par
00341                     \}\par
00342                     {\cf19 catch} (IllegalArgumentException e1) \{\}\par
00343                 \}\par
00344                 {\cf19 else}\par
00345                 \{\par
00346                     ProcessManager process = {\cf17 new} ProcessManager(selectFile.getPid());\par
00347                     tableItems[2].setText(1, process.getName());\par
00348                     tableItems[3].setText(1, Integer.toString(selectFile.getPid()));\par
00349                     String[] DLLs = process.getDLLs();\par
00350                     dllImports.clearAll();\par
00351                     dllImports.setItemCount(0);\par
00352                     {\cf19 for}({\cf18 int} index=0;index<DLLs.length;index++)\par
00353                     \{\par
00354                         TableItem tableItem = {\cf17 new} TableItem(dllImports, SWT.NULL);\par
00355                         tableItem.setText(DLLs[index]);\par
00356                     \} \par
00357                     tableItems[0].setGrayed({\cf17 true});\par
00358                     tableItems[1].setGrayed({\cf17 true});\par
00359                 \}\par
00360                {\cf20 /* \}}\par
00361 {\cf20             \}).start();*/}\par
00362             \}\par
00363         \});\par
00364     \}\par
00365 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MemoryComposite.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/MemoryComposite.java}
{\xe \v src/dynamicAnalysis/MemoryComposite.java}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Composite;\par
00007 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00008 {\cf17 import} org.eclipse.swt.widgets.Event;\par
00009 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00010 {\cf17 import} org.eclipse.swt.widgets.Listener;\par
00011 \par
00012 {\cf17 import} java.util.ArrayList;\par
00013 \par
00014 {\cf17 import} org.eclipse.jface.resource.JFaceResources;\par
00015 {\cf17 import} org.eclipse.swt.SWT;\par
00016 {\cf17 import} org.eclipse.swt.events.KeyAdapter;\par
00017 {\cf17 import} org.eclipse.swt.events.KeyEvent;\par
00018 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00019 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00020 {\cf17 import} org.eclipse.swt.graphics.Color;\par
00021 {\cf17 import} org.eclipse.swt.graphics.Font;\par
00022 {\cf17 import} org.eclipse.swt.graphics.Point;\par
00023 {\cf17 import} org.eclipse.swt.graphics.TextLayout;\par
00024 {\cf17 import} org.eclipse.swt.graphics.TextStyle;\par
00025 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00026 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00027 {\cf17 import} org.eclipse.swt.widgets.ProgressBar;\par
00028 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00029 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00030 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00031 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00032 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00033 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00034 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00035 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00036 {\cf17 import} org.eclipse.swt.custom.StyleRange;\par
00037 {\cf17 import} org.eclipse.swt.custom.StyledText;\par
00038 \par
00042 {\cf17 public} {\cf17 class }MemoryComposite {\cf17 extends} Composite\par
00043 \{\par
00044     \par
00046     {\cf17 private} Text memoryField;\par
00047     \par
00049     {\cf17 private} {\cf18 int} processId;\par
00050     \par
00052     {\cf17 private} {\cf18 byte}[] bytes;\par
00053     \par
00055     {\cf17 private} Table asciiTable;\par
00056     \par
00058     {\cf17 private} Text searchText;\par
00059     \par
00061     {\cf17 private} TableItem[] tableStore = {\cf17 null};\par
00062     \par
00064     {\cf17 private} TableItem[] tableItems;\par
00065     \par
00067     {\cf17 private} String[] asciiSections;\par
00068     \par
00070     {\cf17 private} Color red;\par
00071     \par
00073     {\cf17 private} String memory;\par
00074     \par
00076     {\cf17 private} {\cf17 final} {\cf18 int} memoryCount = 10000;\par
00077     \par
00085     {\cf17 public} MemoryComposite(Composite parent, {\cf18 int} style, Color green)\par
00086     \{\par
00087         \par
00088         super(parent, style);\par
00089         setProcessId(Window.processId);\par
00090         setRed(green);\par
00091         setLayout({\cf17 new} GridLayout(4, {\cf17 false}));\par
00092         Button btnUpdate = {\cf17 new} Button({\cf17 this}, SWT.NONE);\par
00093         btnUpdate.setFont(SWTResourceManager.getFont({\cf22 "Segoe UI"}, 9, SWT.NORMAL));\par
00094         btnUpdate.setText({\cf22 "Update"});\par
00095         \par
00096         Label txtLength = {\cf17 new} Label({\cf17 this}, SWT.BORDER);\par
00097         GridData gd_txtLength = {\cf17 new} GridData(SWT.FILL, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1);\par
00098         gd_txtLength.widthHint = 109;\par
00099         txtLength.setLayoutData(gd_txtLength);\par
00100         txtLength.setText({\cf22 "Length: "});\par
00101         \par
00102         searchText = {\cf17 new} Text({\cf17 this}, SWT.BORDER);\par
00103         GridData gd_searchText = {\cf17 new} GridData(SWT.FILL, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1);\par
00104         gd_searchText.widthHint = 157;\par
00105         searchText.setLayoutData(gd_searchText);    \par
00106         \par
00107         Button btnNewButton_1 = {\cf17 new} Button({\cf17 this}, SWT.NONE);\par
00108         btnNewButton_1.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00109             @Override\par
00110             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00111                 searchEvent();\par
00112             \}\par
00113         \});\par
00114         btnNewButton_1.setText({\cf22 "Search"});\par
00115         \par
00116         memoryField = {\cf17 new} Text({\cf17 this}, SWT.BORDER | SWT.WRAP | SWT.V_SCROLL);\par
00117         memoryField.setEditable({\cf17 false});\par
00118         GridData gd_memoryField = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 false}, {\cf17 true}, 2, 1);\par
00119         gd_memoryField.widthHint = 154;\par
00120         gd_memoryField.heightHint = 217;\par
00121         memoryField.setLayoutData(gd_memoryField);\par
00122          \par
00123             \par
00124         asciiTable = {\cf17 new} Table({\cf17 this}, SWT.BORDER | SWT.FULL_SELECTION | SWT.VIRTUAL);\par
00125         \par
00126         GridData gd_asciiTable = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 true}, {\cf17 true}, 2, 1);\par
00127         gd_asciiTable.heightHint = 225;\par
00128         gd_asciiTable.widthHint = 197;\par
00129         asciiTable.setLayoutData(gd_asciiTable);\par
00130         asciiTable.setHeaderVisible({\cf17 true});\par
00131         asciiTable.setLinesVisible({\cf17 true});   \par
00132         \par
00133         {\cf17 new} Thread() \{\par
00134             {\cf17 public} {\cf18 void} run() \{\par
00135                 String memoryText = updateMemory();\par
00136                 asciiSections = findAsciiSections();\par
00137                 Display.getDefault().asyncExec({\cf17 new} Runnable() \{\par
00138                     @Override\par
00139                     {\cf17 public} {\cf18 void} run() \{\par
00140                         System.out.println(memoryText);\par
00141                         memoryField.setText(memoryText);\par
00142                         txtLength.setText({\cf22 "Length: "}+getBytes().length);\par
00143                         tableItems = {\cf17 new} TableItem[asciiSections.length];\par
00144                         asciiTable.setItemCount(asciiSections.length);\par
00145                         {\cf19 for}({\cf18 int} index=0;index<asciiSections.length;index++)\par
00146                         \{\par
00147                             asciiTable.getItem(index).setText(asciiSections[index].substring(asciiSections[index].indexOf({\cf23 '\}'})+1));\par
00148                             asciiTable.getItem(index).setData(Integer.parseInt(asciiSections[index].substring(1, asciiSections[index].indexOf({\cf23 '\}'}))));\par
00149                         \}\par
00150                     \}\par
00151                  \});\par
00152             \}\par
00153         \}.start();\par
00154         btnUpdate.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00155             @Override\par
00156             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00157                 {\cf17 new} Thread() \{\par
00158                     {\cf17 public} {\cf18 void} run() \{\par
00159                         updateMemory();\par
00160                         Display.getDefault().asyncExec({\cf17 new} Runnable() \{\par
00161                             {\cf17 public} {\cf18 void} run() \{\par
00162                                 txtLength.setText({\cf22 "Length: "}+getBytes().length);\par
00163                             \}\par
00164                         \});\par
00165                     \}\par
00166                 \}.start();  \par
00167             \}\par
00168         \});\par
00169         \par
00170         searchText.addKeyListener({\cf17 new} KeyAdapter()\{\par
00171             {\cf17 public} {\cf18 void} keyPressed(KeyEvent e)\{ \par
00172                 {\cf19 if}(e.keyCode == SWT.CR) \{\par
00173                     searchEvent();  \par
00174                 \}   \par
00175             \}   \par
00176         \});\par
00177         \par
00178         asciiTable.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00179             @Override\par
00180             {\cf17 public} {\cf18 void} widgetDefaultSelected(SelectionEvent e) \{\par
00181                 {\cf18 int} index=asciiTable.getSelectionIndex();\par
00182                 \par
00183                 {\cf18 int} startIndex=(int)asciiTable.getItem(index).getData();\par
00184                 System.out.println({\cf22 "index: "}+startIndex);\par
00185                 String tableText = asciiTable.getItem(index).getText();\par
00186                 {\cf20 //System.out.println(tableText);}\par
00187                 populateMemory(memoryField, startIndex, tableText);\par
00188             \}\par
00189         \});\par
00190     \}\par
00191 \par
00197     {\cf17 public} {\cf18 int} getProcessId()\par
00198     \{\par
00199         {\cf19 return} processId;\par
00200     \}\par
00201 \par
00207     {\cf17 public} {\cf18 void} setProcessId({\cf18 int} processId)\par
00208     \{\par
00209         this.processId = processId;\par
00210     \}\par
00211     \par
00217     {\cf17 private} {\cf18 byte}[] readMemory()\par
00218     \{\par
00219         VirtualMemory virtualMemory = {\cf17 new} VirtualMemory(getProcessId());\par
00220         setBytes(virtualMemory.readMemory());\par
00221         {\cf19 return} getBytes();\par
00222     \}\par
00223     \par
00229     {\cf17 public} {\cf18 byte}[] getBytes()\par
00230     \{\par
00231         {\cf19 return} bytes;\par
00232     \}\par
00233 \par
00239     {\cf17 public} {\cf18 void} setBytes({\cf18 byte}[] bytes)\par
00240     \{\par
00241         this.bytes = bytes;\par
00242     \}\par
00243     \par
00249     {\cf17 public} Color getRed() \{\par
00250         {\cf19 return} red;\par
00251     \}\par
00252 \par
00258     {\cf17 public} {\cf18 void} setRed(Color red) \{\par
00259         this.red = red;\par
00260     \}\par
00261 \par
00267     {\cf17 private} String updateMemory()\par
00268     \{\par
00269         {\cf18 long} start = System.currentTimeMillis();\par
00270         {\cf18 byte}[] chars = readMemory();\par
00271         String output = {\cf22 ""};\par
00272         String update = {\cf22 ""};\par
00273         {\cf18 int} sizeIndex = 0;\par
00274         {\cf18 int} index = 0;\par
00275         {\cf19 while}(sizeIndex!=memoryCount)\par
00276         \{\par
00277             {\cf19 try}\par
00278             \{\par
00279                 {\cf19 if}(chars[index]!=0)\par
00280                 \{\par
00281                     output += (char)chars[index];\par
00282                     sizeIndex++;\par
00283                 \}\par
00284                 index++;\par
00285             \}\par
00286             {\cf19 catch}(ArrayIndexOutOfBoundsException e)\par
00287             \{\par
00288                 e.printStackTrace();\par
00289                 {\cf20 //MessageDialog.openError(shell, "Error", "Process was closed.");}\par
00290                 {\cf19 break};\par
00291             \}\par
00292         \}\par
00293         setBytes(chars);\par
00294         System.out.println({\cf22 "memory time: "}+(System.currentTimeMillis()-start));\par
00295         {\cf19 return} output;\par
00296     \}\par
00297     \par
00303     {\cf17 private} String[] findAsciiSections()\par
00304     \{\par
00305         {\cf18 long} startTime = System.currentTimeMillis();\par
00306         {\cf18 int} startIndex = 0;\par
00307         {\cf18 boolean} start = {\cf17 true};\par
00308         ArrayList<String> asciiSections = {\cf17 new} ArrayList<String>();\par
00309         String current={\cf22 ""};\par
00310         {\cf19 for}({\cf18 int} index=0;index<getBytes().length;index++)\par
00311         \{\par
00312             {\cf19 while}(isAscii(({\cf18 char})getBytes()[index]))\par
00313             \{\par
00314                 {\cf19 if}(start)\par
00315                 \{\par
00316                     startIndex=index;\par
00317                     start={\cf17 false};\par
00318                 \}\par
00319                 current+=(char)getBytes()[index];\par
00320                 index++;\par
00321             \}\par
00322             {\cf19 if}(current.length()>8)\par
00323             \{\par
00324                 asciiSections.add({\cf22 "\{"}+startIndex+{\cf22 "\}"}+current);\par
00325             \}\par
00326             {\cf19 if}(!start) start={\cf17 true};\par
00327             current={\cf22 ""};\par
00328         \}\par
00329         {\cf19 return} asciiSections.toArray({\cf17 new} String[0]);\par
00330     \}\par
00331     \par
00338     {\cf17 private} {\cf18 boolean} isAscii({\cf18 char} character)\par
00339     \{\par
00340         {\cf19 return} character>=32&&character<=126;\par
00341     \}\par
00342     \par
00350     {\cf17 private} String[] search(String[] entries, String toSearch)\par
00351     \{\par
00352         ArrayList<String> filtered = {\cf17 new} ArrayList<String>();\par
00353         {\cf19 for}({\cf18 int} index = 0; index < entries.length; index++)\par
00354         \{\par
00355             {\cf19 if}(toSearch.endsWith({\cf22 "*"}))\par
00356             \{\par
00357                 {\cf19 if}(entries[index].toLowerCase().substring(entries[index].indexOf({\cf23 '\}'})+1).startsWith(toSearch.toLowerCase().substring(0, toSearch.length()-1)))\par
00358                 \{\par
00359                     filtered.add(entries[index]);\par
00360                 \}\par
00361             \}\par
00362             {\cf19 else} {\cf19 if}(toSearch.startsWith({\cf22 "*"}))\par
00363             \{\par
00364                 {\cf19 if}(entries[index].toLowerCase().substring(entries[index].indexOf({\cf23 '\}'})+1).endsWith(toSearch.toLowerCase().substring(1)))\par
00365                 \{\par
00366                     filtered.add(entries[index]);\par
00367                 \}\par
00368             \}\par
00369             {\cf19 else}\par
00370             \{\par
00371                 {\cf19 if}(entries[index].toLowerCase().substring(entries[index].indexOf({\cf23 '\}'})+1).contains(toSearch.toLowerCase()))\par
00372                 \{\par
00373                     filtered.add(entries[index]);\par
00374                 \}\par
00375             \}\par
00376             \par
00377         \}\par
00378         String[] filteredArray = filtered.toArray({\cf17 new} String[0]);\par
00379         {\cf19 return} filteredArray;\par
00380     \}\par
00381     \par
00385     {\cf17 private} {\cf18 void} searchEvent()\par
00386     \{\par
00387         {\cf19 if}(searchText.getText()=={\cf22 ""})\par
00388         \{\par
00389             asciiTable.setItemCount(asciiSections.length);\par
00390             {\cf19 for}({\cf18 int} index=0;index<asciiSections.length;index++)\par
00391             \{\par
00392                 asciiTable.getItem(index).setText(asciiSections[index].substring(asciiSections[index].indexOf({\cf23 '\}'})+1));\par
00393                 asciiTable.getItem(index).setData(Integer.parseInt(asciiSections[index].substring(1, asciiSections[index].indexOf({\cf23 '\}'}))));\par
00394             \}\par
00395         \}\par
00396         {\cf19 else}\par
00397         \{\par
00398             {\cf19 if}(tableStore=={\cf17 null})\par
00399             \{\par
00400                 tableStore = tableItems;\par
00401             \}\par
00402             String[] filtered = search(asciiSections, searchText.getText());\par
00403             asciiTable.setItemCount(filtered.length);\par
00404             {\cf19 for}({\cf18 int} index=0;index<filtered.length;index++)\par
00405             \{\par
00406                 asciiTable.getItem(index).setText(filtered[index].substring(filtered[index].indexOf({\cf23 '\}'})+1));\par
00407                 asciiTable.getItem(index).setData(Integer.parseInt(filtered[index].substring(1, filtered[index].indexOf({\cf23 '\}'}))));\par
00408             \}\par
00409         \}\par
00410     \}\par
00411     \par
00420     {\cf17 private} String populateMemory(Text text, {\cf18 int} memoryIndex, String tableText)\par
00421     \{\par
00422         {\cf18 byte}[] fullMemory = getBytes();\par
00423         memory = {\cf22 ""};\par
00424         {\cf18 int} startIndex;\par
00425         {\cf19 if}(memoryIndex<memoryCount/2) startIndex = 0;\par
00426         {\cf19 else} startIndex=memoryIndex-(memoryCount/2);\par
00427         {\cf19 for}({\cf18 int} index = startIndex; index<startIndex+memoryCount; index++)\par
00428         \{\par
00429             {\cf19 if}(fullMemory[index]>0)\par
00430             \{\par
00431                 memory+=(char)fullMemory[index];\par
00432             \}\par
00433             \par
00434         \}\par
00435         text.setText(memory);\par
00436         System.out.println(memory);\par
00437         System.out.println({\cf22 "startindex: "}+memory.indexOf(tableText));\par
00438         System.out.println({\cf22 "endindex: "}+(memory.indexOf(tableText)+tableText.length()));\par
00439         text.setFocus();\par
00440         text.setSelection( {\cf17 new} Point( text.getText().indexOf(tableText), text.getText().indexOf(tableText)+tableText.length() ) );\par
00441         {\cf19 return} memory;\par
00442     \}\par
00443     \par
00447     @Override\par
00448     {\cf17 protected} {\cf18 void} checkSubclass()\par
00449     \{\par
00450         {\cf20 // Disable the check that prevents subclassing of SWT components}\par
00451     \}\par
00452 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MemoryWindow.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/MemoryWindow.java}
{\xe \v src/dynamicAnalysis/MemoryWindow.java}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00006 {\cf17 import} org.eclipse.swt.widgets.Shell;\par
00007 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00008 \par
00009 {\cf17 import} java.util.ArrayList;\par
00010 \par
00011 {\cf17 import} org.eclipse.jface.dialogs.MessageDialog;\par
00012 {\cf17 import} org.eclipse.swt.SWT;\par
00013 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00014 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00015 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00016 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00017 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00018 {\cf17 import} org.eclipse.swt.events.KeyAdapter;\par
00019 {\cf17 import} org.eclipse.swt.events.KeyEvent;\par
00020 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00021 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00022 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00023 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00024 {\cf17 import} org.eclipse.swt.widgets.ProgressBar;\par
00025 \par
00029 {\cf17 public} {\cf17 class }MemoryWindow\par
00030 \{\par
00031 \par
00033     {\cf17 protected} Shell shell;\par
00034     \par
00036     {\cf17 private} {\cf18 int} processId;\par
00037     \par
00039     {\cf17 private} Text text;\par
00040     \par
00042     {\cf17 private} Label txtLength;\par
00043     \par
00045     {\cf17 private} {\cf18 byte}[] bytes;\par
00046     \par
00048     {\cf17 private} {\cf18 int} x;\par
00049     \par
00051     {\cf17 private} {\cf18 int} y;\par
00052     \par
00054     {\cf17 private} Table asciiTable;\par
00055     \par
00057     {\cf17 private} Button btnNewButton;\par
00058     \par
00060     {\cf17 private} Text searchText;\par
00061     \par
00063     {\cf17 private} TableItem[] tableStore = {\cf17 null};\par
00064     \par
00066     {\cf17 private} TableItem[] tableItems;\par
00067     \par
00069     {\cf17 private} Button btnUpdate;\par
00070     \par
00072     {\cf17 private} GridData gd_asciiTable;\par
00073     \par
00075     {\cf17 private} ProgressBar progressBar;\par
00076     \par
00078     {\cf17 private} String[] asciiSections;\par
00079     \par
00080     {\cf20 /*}\par
00081 {\cf20     public static void main(String[] args)}\par
00082 {\cf20     \{}\par
00083 {\cf20         MemoryWindow memoryWindow = new MemoryWindow();}\par
00084 {\cf20         memoryWindow.open();}\par
00085 {\cf20     \}*/}\par
00086     \par
00094     {\cf17 public} MemoryWindow({\cf18 int} processId, {\cf18 int} x, {\cf18 int} y)\par
00095     \{\par
00096         {\cf19 try}\par
00097         \{\par
00098             setProcessId(processId);\par
00099             setX(x);\par
00100             setY(y);\par
00101         \} {\cf19 catch} (Exception e)\par
00102         \{\par
00103             e.printStackTrace();\par
00104         \}\par
00105     \}\par
00106 \par
00107     \par
00113     {\cf17 public} {\cf18 int} getProcessId()\par
00114     \{\par
00115         {\cf19 return} processId;\par
00116     \}\par
00117 \par
00123     {\cf17 public} {\cf18 void} setProcessId({\cf18 int} processId)\par
00124     \{\par
00125         this.processId = processId;\par
00126     \}\par
00127     \par
00133     {\cf17 public} {\cf18 int} getX()\par
00134     \{\par
00135         {\cf19 return} x;\par
00136     \}\par
00137 \par
00143     {\cf17 public} {\cf18 void} setX({\cf18 int} x)\par
00144     \{\par
00145         this.x = x;\par
00146     \}\par
00147 \par
00153     {\cf17 public} {\cf18 int} getY()\par
00154     \{\par
00155         {\cf19 return} y;\par
00156     \}\par
00157 \par
00158 \par
00164     {\cf17 public} {\cf18 void} setY({\cf18 int} y)\par
00165     \{\par
00166         this.y = y;\par
00167     \}\par
00168 \par
00172     {\cf17 public} {\cf18 void} open()\par
00173     \{\par
00174         Display display = Display.getDefault();\par
00175         createBaseContents();\par
00176         shell.open();\par
00177         createContents();       \par
00178         {\cf19 while} (!shell.isDisposed())\par
00179         \{\par
00180             {\cf19 if} (!display.readAndDispatch())\par
00181             \{\par
00182                 display.sleep();\par
00183             \}\par
00184         \}\par
00185     \}\par
00186 \par
00192     {\cf17 private} {\cf18 byte}[] readMemory()\par
00193     \{\par
00194         VirtualMemory virtualMemory = {\cf17 new} VirtualMemory(getProcessId());\par
00195         {\cf19 return} virtualMemory.readMemory();\par
00196     \}\par
00197     \par
00198     \par
00199     \par
00205     {\cf17 public} {\cf18 byte}[] getBytes()\par
00206     \{\par
00207         {\cf19 return} bytes;\par
00208     \}\par
00209 \par
00210 \par
00216     {\cf17 public} {\cf18 void} setBytes({\cf18 byte}[] bytes)\par
00217     \{\par
00218         this.bytes = bytes;\par
00219     \}\par
00220 \par
00221 \par
00228     {\cf17 private} String updateMemory(Text text)\par
00229     \{\par
00230         {\cf18 long} start = System.currentTimeMillis();\par
00231         {\cf18 byte}[] chars = readMemory();\par
00232         String output = {\cf22 ""};\par
00233         String update = {\cf22 ""};\par
00234         {\cf18 int} sizeIndex = 0;\par
00235         {\cf18 int} index = 0;\par
00236         {\cf19 while}(sizeIndex!=10000)\par
00237         \{\par
00238             {\cf19 try}\par
00239             \{\par
00240                 {\cf19 if}(chars[index]!=0)\par
00241                 \{\par
00242                     output += (char)chars[index];\par
00243                     sizeIndex++;\par
00244                 \}\par
00245                 index++;\par
00246             \}\par
00247             {\cf19 catch}(ArrayIndexOutOfBoundsException e)\par
00248             \{\par
00249                 {\cf20 //MessageDialog.openError(shell, "Error", "Process was closed.");}\par
00250                 {\cf19 break};\par
00251             \}\par
00252         \}\par
00253         setBytes(chars);\par
00254         System.out.println({\cf22 "memory time: "}+(System.currentTimeMillis()-start));\par
00255         {\cf19 return} output;\par
00256     \}\par
00257     \par
00263     {\cf17 private} String[] findAsciiSections()\par
00264     \{\par
00265         {\cf18 long} startTime = System.currentTimeMillis();\par
00266         {\cf18 int} startIndex = 0;\par
00267         {\cf18 boolean} start = {\cf17 true};\par
00268         ArrayList<String> asciiSections = {\cf17 new} ArrayList<String>();\par
00269         String current={\cf22 ""};\par
00270         {\cf19 for}({\cf18 int} index=0;index<getBytes().length;index++)\par
00271         \{\par
00272             {\cf19 while}(isAscii(({\cf18 char})getBytes()[index]))\par
00273             \{\par
00274                 {\cf19 if}(start)\par
00275                 \{\par
00276                     startIndex=index;\par
00277                     start={\cf17 false};\par
00278                 \}\par
00279                 current+=(char)getBytes()[index];\par
00280                 index++;\par
00281             \}\par
00282             {\cf19 if}(current.length()>8)\par
00283             \{\par
00284                 asciiSections.add({\cf22 "\{"}+startIndex+{\cf22 "\}"}+current);\par
00285             \}\par
00286             {\cf19 if}(!start) start={\cf17 true};\par
00287             current={\cf22 ""};\par
00288         \}\par
00289         System.out.println({\cf22 "ascii time: "}+(System.currentTimeMillis()-startTime));\par
00290         {\cf19 return} asciiSections.toArray({\cf17 new} String[0]);\par
00291     \}\par
00292     \par
00299     {\cf17 private} {\cf18 boolean} isAscii({\cf18 char} character)\par
00300     \{\par
00301         {\cf19 return} character>=32&&character<=126;\par
00302     \}\par
00303     \par
00311     {\cf17 private} String[] search(String[] entries, String toSearch)\par
00312     \{\par
00313         ArrayList<String> filtered = {\cf17 new} ArrayList<String>();\par
00314         {\cf19 for}({\cf18 int} index = 0; index < entries.length; index++)\par
00315         \{\par
00316             {\cf19 if}(toSearch.endsWith({\cf22 "*"}))\par
00317             \{\par
00318                 {\cf19 if}(entries[index].toLowerCase().startsWith(toSearch.toLowerCase().substring(0, toSearch.length()-1)))\par
00319                 \{\par
00320                     filtered.add(entries[index]);\par
00321                 \}\par
00322             \}\par
00323             {\cf19 else} {\cf19 if}(toSearch.startsWith({\cf22 "*"}))\par
00324             \{\par
00325                 {\cf19 if}(entries[index].toLowerCase().endsWith(toSearch.toLowerCase().substring(1)))\par
00326                 \{\par
00327                     filtered.add(entries[index]);\par
00328                 \}\par
00329             \}\par
00330             {\cf19 else}\par
00331             \{\par
00332                 {\cf19 if}(entries[index].toLowerCase().contains(toSearch.toLowerCase()))\par
00333                 \{\par
00334                     filtered.add(entries[index]);\par
00335                 \}\par
00336             \}\par
00337             \par
00338         \}\par
00339         String[] filteredArray = filtered.toArray({\cf17 new} String[0]);\par
00340         {\cf19 return} filteredArray;\par
00341     \}\par
00342     \par
00346     {\cf17 private} {\cf18 void} searchEvent()\par
00347     \{\par
00348         {\cf19 if}(searchText.getText()=={\cf22 ""})\par
00349         \{\par
00350             asciiTable.setItemCount(0);\par
00351             {\cf19 for}({\cf18 int} index=0;index<asciiSections.length;index++)\par
00352             \{\par
00353                 {\cf19 if}(index>6000)\par
00354                 \{\par
00355                     {\cf19 break};\par
00356                 \}\par
00357                 tableItems = {\cf17 new} TableItem[asciiSections.length];\par
00358                 tableItems[index]={\cf17 new} TableItem(asciiTable, SWT.NULL);\par
00359                 tableItems[index].setText(asciiSections[index]);\par
00360             \}\par
00361         \}\par
00362         {\cf19 else}\par
00363         \{\par
00364             {\cf19 if}(tableStore=={\cf17 null})\par
00365             \{\par
00366                 tableStore = tableItems;\par
00367             \}\par
00368             String[] filtered = search(asciiSections, searchText.getText());\par
00369             asciiTable.setItemCount(0);\par
00370             tableItems = {\cf17 new} TableItem[filtered.length];\par
00371             {\cf19 for}({\cf18 int} index=0;index<filtered.length;index++)\par
00372             \{\par
00373                 tableItems[index]={\cf17 new} TableItem(asciiTable, SWT.NULL);\par
00374                 tableItems[index].setText(filtered[index]);\par
00375             \}\par
00376         \}\par
00377     \}\par
00378     \par
00382     {\cf17 protected} {\cf18 void} createBaseContents()\par
00383     \{\par
00384         shell = {\cf17 new} Shell();\par
00385         shell.setSize(865, 432);\par
00386         shell.setLayout({\cf17 new} GridLayout(5, {\cf17 false}));\par
00387         shell.setLocation(x+490/2, y+342/2);\par
00388         \par
00389         btnUpdate = {\cf17 new} Button(shell, SWT.NONE);\par
00390         btnUpdate.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00391             @Override\par
00392             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00393                 updateMemory(text);\par
00394                 txtLength.setText({\cf22 "Length: "}+getBytes().length);\par
00395             \}\par
00396         \});\par
00397         btnUpdate.setText({\cf22 "Update"});\par
00398         txtLength = {\cf17 new} Label(shell, SWT.BORDER);\par
00399         txtLength.setText({\cf22 "Length: "});\par
00400         txtLength.setLayoutData({\cf17 new} GridData(SWT.FILL, SWT.CENTER, {\cf17 false}, {\cf17 false}, 1, 1));\par
00401         \par
00402         progressBar = {\cf17 new} ProgressBar(shell, SWT.NONE);\par
00403         {\cf17 new} Label(shell, SWT.NONE);\par
00404         {\cf17 new} Label(shell, SWT.NONE);\par
00405         \par
00406         {\cf17 new} Label(shell, SWT.NONE);\par
00407         \par
00408         text = {\cf17 new} Text(shell, SWT.BORDER | SWT.WRAP | SWT.V_SCROLL);\par
00409         text.setLayoutData({\cf17 new} GridData(SWT.FILL, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1));\par
00410         text.setFont(SWTResourceManager.getFont({\cf22 "Calibri"}, 9, SWT.NORMAL));\par
00411         GridData gd_text = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 true}, {\cf17 true}, 1, 1);\par
00412         gd_text.widthHint = 399;\par
00413         text.setLayoutData(gd_text);\par
00414         \par
00415         asciiTable = {\cf17 new} Table(shell, SWT.BORDER | SWT.FULL_SELECTION);\par
00416         gd_asciiTable = {\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 true}, {\cf17 true}, 1, 1);\par
00417         gd_asciiTable.widthHint = 186;\par
00418         asciiTable.setLayoutData(gd_asciiTable);\par
00419         asciiTable.setHeaderVisible({\cf17 true});\par
00420         asciiTable.setLinesVisible({\cf17 true});\par
00421         \par
00422         searchText = {\cf17 new} Text(shell, SWT.BORDER);\par
00423         GridData gd_searchText = {\cf17 new} GridData(SWT.FILL, SWT.TOP, {\cf17 true}, {\cf17 false}, 1, 1);\par
00424         gd_searchText.widthHint = 70;\par
00425         searchText.setLayoutData(gd_searchText);\par
00426         searchText.addKeyListener({\cf17 new} KeyAdapter()\{\par
00427             {\cf17 public} {\cf18 void} keyPressed(KeyEvent e)\{ \par
00428                 {\cf19 if}(e.keyCode == SWT.CR) \{\par
00429                     searchEvent();  \par
00430                 \}   \par
00431             \}   \par
00432         \});\par
00433         \par
00434         \par
00435         btnNewButton = {\cf17 new} Button(shell, SWT.NONE);\par
00436         GridData gd_btnNewButton = {\cf17 new} GridData(SWT.LEFT, SWT.TOP, {\cf17 false}, {\cf17 false}, 1, 1);\par
00437         gd_btnNewButton.widthHint = 62;\par
00438         btnNewButton.setLayoutData(gd_btnNewButton);\par
00439         btnNewButton.setText({\cf22 "Search"});\par
00440     \}\par
00441     {\cf20 /*}\par
00442 {\cf20     private void updateBar(ProgressBar progresBar, int selection)}\par
00443 {\cf20     \{}\par
00444 {\cf20         progressBar.getDisplay().asyncExec(new Runnable() \{}\par
00445 {\cf20             @Override}\par
00446 {\cf20             public void run() \{}\par
00447 {\cf20                 progressBar.setSelection(selection);}\par
00448 {\cf20             \}\});}\par
00449 {\cf20     \}*/}\par
00450     \par
00454     {\cf17 protected} {\cf17 synchronized} {\cf18 void} createContents()\par
00455     \{\par
00456         progressBar.setMaximum(100);\par
00457         progressBar.setVisible({\cf17 true});\par
00458         {\cf18 long} start = System.currentTimeMillis();\par
00459         text.setText(updateMemory(text));\par
00460         progressBar.setSelection(33);\par
00461         System.out.println({\cf22 "set memory text time: "}+(System.currentTimeMillis()-start));\par
00462         txtLength.setText({\cf22 "Length: "}+getBytes().length);        \par
00463         progressBar.setSelection(66);\par
00464         asciiSections = findAsciiSections();\par
00465         tableItems = {\cf17 new} TableItem[asciiSections.length];\par
00466         start = System.currentTimeMillis();\par
00467         {\cf19 for}({\cf18 int} index=0;index<asciiSections.length;index++)\par
00468         \{\par
00469             {\cf19 if}(index>10000)\par
00470             \{\par
00471                 {\cf19 break};\par
00472             \}\par
00473             tableItems[index] = {\cf17 new} TableItem(asciiTable, SWT.NULL);\par
00474             tableItems[index].setText(asciiSections[index]);\par
00475         \}\par
00476         System.out.println({\cf22 "set table time: "}+(System.currentTimeMillis()-start));\par
00477         \par
00478         btnNewButton.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00479             @Override\par
00480             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00481                 searchEvent();\par
00482             \}\par
00483         \});\par
00484         \par
00485         \par
00486         \par
00487         progressBar.setVisible({\cf17 false});\par
00488     \}\par
00489 \par
00490 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mnem.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/Mnem.java}
{\xe \v src/dynamicAnalysis/Mnem.java}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00009 {\cf17 public} {\cf17 enum} Mnem \{\par
00010     \par
00012     JNE, \par
00014  JMP, \par
00016  JL, \par
00018  JBE, \par
00020  JE, \par
00022  JAE, \par
00024  JB, \par
00026  JA, \par
00028  JLE;\par
00029     \par
00035     {\cf17 public} {\cf18 byte} getByte()\par
00036     \{\par
00037         {\cf19 switch}({\cf17 this})\par
00038         \{\par
00039         {\cf19 case} JAE:\par
00040             {\cf19 return} 115;\par
00041         {\cf19 case} JBE:\par
00042             {\cf19 return} 118;\par
00043         {\cf19 case} JE:\par
00044             {\cf19 return} 15;\par
00045         {\cf19 case} JL:\par
00046             {\cf19 return} 124;\par
00047         {\cf19 case} JMP:\par
00048             {\cf19 return} -21;\par
00049         {\cf19 case} JNE:\par
00050             {\cf19 return} 117;\par
00051         {\cf19 case} JB:\par
00052             {\cf19 return} 114;\par
00053         {\cf19 case} JA:\par
00054             {\cf19 return} 119;\par
00055         {\cf19 case} JLE:\par
00056             {\cf19 return} 126;\par
00057         {\cf19 default}:\par
00058             {\cf19 return} 0;\par
00059             \par
00060         \}\par
00061     \}\par
00062 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NetworkComposite.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/NetworkComposite.java}
{\xe \v src/dynamicAnalysis/NetworkComposite.java}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Composite;\par
00007 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00008 {\cf17 import} org.eclipse.swt.widgets.Event;\par
00009 {\cf17 import} org.eclipse.swt.widgets.ToolBar;\par
00010 {\cf17 import} org.eclipse.swt.SWT;\par
00011 {\cf17 import} org.eclipse.swt.widgets.ToolItem;\par
00012 {\cf17 import} org.pcap4j.core.NotOpenException;\par
00013 {\cf17 import} org.pcap4j.core.PcapNativeException;\par
00014 {\cf17 import} org.pcap4j.packet.IpPacket;\par
00015 {\cf17 import} org.pcap4j.packet.Packet;\par
00016 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00017 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00018 {\cf17 import} org.eclipse.swt.widgets.Combo;\par
00019 {\cf17 import} org.eclipse.swt.widgets.List;\par
00020 {\cf17 import} org.eclipse.swt.widgets.Listener;\par
00021 {\cf17 import} org.eclipse.swt.widgets.MessageBox;\par
00022 \par
00023 {\cf17 import} java.util.ArrayList;\par
00024 {\cf17 import} java.util.HashMap;\par
00025 {\cf17 import} java.util.Map.Entry;\par
00026 {\cf17 import} java.util.concurrent.TimeUnit;\par
00027 \par
00028 {\cf17 import} org.eclipse.jface.viewers.ListViewer;\par
00029 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00030 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00031 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00032 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00033 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00034 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00035 {\cf17 import} org.eclipse.ui.forms.widgets.FormToolkit;\par
00036 {\cf17 import} org.eclipse.swt.custom.StyledText;\par
00037 {\cf17 import} org.eclipse.jface.text.TextViewer;\par
00038 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00039 {\cf17 import} org.eclipse.swt.widgets.Tree;\par
00040 {\cf17 import} org.eclipse.ui.forms.widgets.ExpandableComposite;\par
00041 {\cf17 import} org.eclipse.ui.forms.widgets.ScrolledForm;\par
00042 {\cf17 import} org.eclipse.ui.forms.widgets.FormText;\par
00043 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00044 \par
00048 {\cf17 public} {\cf17 class }NetworkComposite {\cf17 extends} Composite\par
00049 \{\par
00050     \par
00052     {\cf17 private} PacketTrace packetTrace;\par
00053     \par
00055     {\cf17 private} List networkInterfaces;\par
00056     \par
00058     {\cf17 private} List addresses;\par
00059     \par
00061     {\cf17 private} List packets;\par
00062     \par
00064     {\cf17 private} HashMap<String, String> devices;\par
00065     \par
00067     {\cf17 private} {\cf17 final} FormToolkit formToolkit = {\cf17 new} FormToolkit(Display.getDefault());\par
00068     \par
00070     {\cf17 private} {\cf18 boolean} addressSelected = {\cf17 false};\par
00071     \par
00073     {\cf17 private} ActiveConnection[] activeConnections;\par
00074     \par
00076     {\cf17 private} StyledText packetInfo;\par
00077     \par
00079     {\cf17 private} StyledText hexPayload;\par
00080     \par
00082     {\cf17 private} StyledText asciiPayload;\par
00083     \par
00092     {\cf17 public} NetworkComposite(Composite parent, {\cf18 int} style, {\cf18 long} pid) {\cf19 throws} PcapNativeException\par
00093     \{\par
00094         super(parent, style);\par
00095         setLayout({\cf17 new} FormLayout());\par
00096         \par
00097         networkInterfaces = {\cf17 new} List({\cf17 this}, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);\par
00098         FormData fd_networkInterfaces = {\cf17 new} FormData();\par
00099         fd_networkInterfaces.top = {\cf17 new} FormAttachment(0, 41);\par
00100         fd_networkInterfaces.right = {\cf17 new} FormAttachment(0, 211);\par
00101         networkInterfaces.setLayoutData(fd_networkInterfaces);\par
00102         \par
00103         packetInfo = {\cf17 new} StyledText({\cf17 this}, SWT.BORDER | SWT.WRAP);\par
00104         packetInfo.setEditable({\cf17 false});\par
00105         FormData fd_packetInfo = {\cf17 new} FormData();\par
00106         fd_packetInfo.left = {\cf17 new} FormAttachment(networkInterfaces, 5);\par
00107         fd_packetInfo.right = {\cf17 new} FormAttachment(100, -4);\par
00108         fd_packetInfo.bottom = {\cf17 new} FormAttachment(100, -172);\par
00109         fd_packetInfo.top = {\cf17 new} FormAttachment(0, 41);\par
00110         packetInfo.setLayoutData(fd_packetInfo);\par
00111         packetInfo.setFont(SWTResourceManager.getFont({\cf22 "Segoe UI"}, 8, SWT.NORMAL));\par
00112         formToolkit.adapt(packetInfo);\par
00113         formToolkit.paintBordersFor(packetInfo);\par
00114         \par
00115         addresses = {\cf17 new} List({\cf17 this}, SWT.BORDER | SWT.V_SCROLL);\par
00116         fd_networkInterfaces.left = {\cf17 new} FormAttachment(addresses, 0, SWT.LEFT);\par
00117         fd_networkInterfaces.bottom = {\cf17 new} FormAttachment(addresses, -6);\par
00118         FormData fd_addresses = {\cf17 new} FormData();\par
00119         fd_addresses.bottom = {\cf17 new} FormAttachment(0, 203);\par
00120         fd_addresses.right = {\cf17 new} FormAttachment(0, 211);\par
00121         fd_addresses.top = {\cf17 new} FormAttachment(0, 126);\par
00122         fd_addresses.left = {\cf17 new} FormAttachment(0, 5);\par
00123         addresses.setLayoutData(fd_addresses);\par
00124         \par
00125         packets = {\cf17 new} List({\cf17 this}, SWT.BORDER | SWT.V_SCROLL);\par
00126         FormData fd_packets = {\cf17 new} FormData();\par
00127         fd_packets.top = {\cf17 new} FormAttachment(addresses, 5);\par
00128         fd_packets.bottom = {\cf17 new} FormAttachment(100, -5);\par
00129         fd_packets.right = {\cf17 new} FormAttachment(0, 211);\par
00130         fd_packets.left = {\cf17 new} FormAttachment(0, 5);\par
00131         packets.setLayoutData(fd_packets);\par
00132         formToolkit.adapt(packets, {\cf17 true}, {\cf17 true});\par
00133         Label label = {\cf17 new} Label({\cf17 this}, SWT.NONE);\par
00134         FormData fd_label = {\cf17 new} FormData();\par
00135         fd_label.top = {\cf17 new} FormAttachment(0, 271);\par
00136         fd_label.left = {\cf17 new} FormAttachment(0, 216);\par
00137         label.setLayoutData(fd_label);\par
00138         formToolkit.adapt(label, {\cf17 true}, {\cf17 true});\par
00139         \par
00140         hexPayload = {\cf17 new} StyledText({\cf17 this}, SWT.BORDER | SWT.WRAP | SWT.V_SCROLL);\par
00141         hexPayload.setEditable({\cf17 false});\par
00142         FormData fd_hexPayload = {\cf17 new} FormData();\par
00143         fd_hexPayload.right = {\cf17 new} FormAttachment(packetInfo, 0, SWT.RIGHT);\par
00144         fd_hexPayload.bottom = {\cf17 new} FormAttachment(packetInfo, 85, SWT.BOTTOM);\par
00145         fd_hexPayload.top = {\cf17 new} FormAttachment(packetInfo, 6);\par
00146         hexPayload.setLayoutData(fd_hexPayload);\par
00147         formToolkit.adapt(hexPayload);\par
00148         formToolkit.paintBordersFor(hexPayload);\par
00149         \par
00150         asciiPayload = {\cf17 new} StyledText({\cf17 this}, SWT.BORDER | SWT.WRAP | SWT.V_SCROLL);\par
00151         asciiPayload.setEditable({\cf17 false});\par
00152         fd_hexPayload.left = {\cf17 new} FormAttachment(asciiPayload, 0, SWT.LEFT);\par
00153         FormData fd_asciiPayload = {\cf17 new} FormData();\par
00154         fd_asciiPayload.right = {\cf17 new} FormAttachment(100, -4);\par
00155         fd_asciiPayload.top = {\cf17 new} FormAttachment(hexPayload, 6);\par
00156         fd_asciiPayload.bottom = {\cf17 new} FormAttachment(100, -5);\par
00157         asciiPayload.setLayoutData(fd_asciiPayload);\par
00158         formToolkit.adapt(asciiPayload);\par
00159         formToolkit.paintBordersFor(asciiPayload);\par
00160         \par
00161         Label lblNewLabel = formToolkit.createLabel({\cf17 this}, {\cf22 "Hex Payload"}, SWT.NONE);\par
00162         lblNewLabel.setBackground(SWTResourceManager.getColor(240, 240, 240));\par
00163         FormData fd_lblNewLabel = {\cf17 new} FormData();\par
00164         fd_lblNewLabel.top = {\cf17 new} FormAttachment(packetInfo, 6);\par
00165         fd_lblNewLabel.right = {\cf17 new} FormAttachment(hexPayload, -6);\par
00166         lblNewLabel.setLayoutData(fd_lblNewLabel);\par
00167         \par
00168         Label lblAsciiPayload = formToolkit.createLabel({\cf17 this}, {\cf22 "ASCII Payload"}, SWT.NONE);\par
00169         lblAsciiPayload.setBackground(SWTResourceManager.getColor(240, 240, 240));\par
00170         fd_asciiPayload.left = {\cf17 new} FormAttachment(0, 299);\par
00171         FormData fd_lblAsciiPayload = {\cf17 new} FormData();\par
00172         fd_lblAsciiPayload.top = {\cf17 new} FormAttachment(hexPayload, 6);\par
00173         fd_lblAsciiPayload.right = {\cf17 new} FormAttachment(asciiPayload, -6);\par
00174         lblAsciiPayload.setLayoutData(fd_lblAsciiPayload);\par
00175         \par
00176         Button btnFilterByProcess = {\cf17 new} Button({\cf17 this}, SWT.CHECK);\par
00177         btnFilterByProcess.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00178             @Override\par
00179             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00180                 clearAll();\par
00181             \}\par
00182         \});\par
00183         btnFilterByProcess.setGrayed({\cf17 true});\par
00184         btnFilterByProcess.setText({\cf22 "Filter by process"});\par
00185         FormData fd_btnFilterByProcess = {\cf17 new} FormData();\par
00186         fd_btnFilterByProcess.top = {\cf17 new} FormAttachment(0, 11);\par
00187         fd_btnFilterByProcess.bottom = {\cf17 new} FormAttachment(packetInfo, -6);\par
00188         fd_btnFilterByProcess.left = {\cf17 new} FormAttachment(packetInfo, 0, SWT.LEFT);\par
00189         btnFilterByProcess.setLayoutData(fd_btnFilterByProcess);\par
00190         formToolkit.adapt(btnFilterByProcess, {\cf17 true}, {\cf17 true});\par
00191         \par
00192         Label pidMatch = formToolkit.createLabel({\cf17 this}, {\cf22 "New Label"}, SWT.NONE);\par
00193         pidMatch.setBackground(SWTResourceManager.getColor(240, 240, 240));\par
00194         FormData fd_pidMatch = {\cf17 new} FormData();\par
00195         fd_pidMatch.bottom = {\cf17 new} FormAttachment(networkInterfaces, -15);\par
00196         fd_pidMatch.right = {\cf17 new} FormAttachment(btnFilterByProcess, -6);\par
00197         fd_pidMatch.left = {\cf17 new} FormAttachment(0, 5);\par
00198         fd_pidMatch.top = {\cf17 new} FormAttachment(0, 11);\par
00199         pidMatch.setLayoutData(fd_pidMatch);\par
00200         \par
00201         Button btnClear = formToolkit.createButton({\cf17 this}, {\cf22 "Clear"}, SWT.NONE);\par
00202         btnClear.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00203             @Override\par
00204             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00205                 clearAll();\par
00206             \}\par
00207         \});\par
00208         FormData fd_btnClear = {\cf17 new} FormData();\par
00209         fd_btnClear.bottom = {\cf17 new} FormAttachment(packetInfo, -6);\par
00210         fd_btnClear.right = {\cf17 new} FormAttachment(100, -4);\par
00211         fd_btnClear.top = {\cf17 new} FormAttachment(0, 10);\par
00212         btnClear.setLayoutData(fd_btnClear);\par
00213         \par
00214         String address = {\cf22 ""};\par
00215         System.out.println({\cf22 "pid: "}+pid);\par
00216         {\cf19 if}(pid == 0)\par
00217         \{\par
00218             pidMatch.setText({\cf22 "No process selected"});\par
00219         \}\par
00220         {\cf19 else}\par
00221         \{\par
00222             NetworkStats networkStats = {\cf17 new} NetworkStats();\par
00223             activeConnections = networkStats.getActiveConnections();\par
00224             {\cf18 int} count = 1;\par
00225             {\cf18 boolean} extraAddress = {\cf17 false};\par
00226             {\cf19 for}({\cf18 int} index = 0; index < activeConnections.length; index++)\par
00227             \{\par
00228                 {\cf19 if}(activeConnections[index].getPid() == pid)\par
00229                 \{\par
00230                     extraAddress = !address.equals({\cf22 ""});\par
00231                     address = activeConnections[index].getLocalAddress();\par
00232                     pidMatch.setText({\cf22 "Process address: "}+address);\par
00233                     {\cf19 if}(extraAddress) pidMatch.setText(pidMatch.getText()+{\cf22 " (+"}+count+++{\cf22 ")"});\par
00234                 \}\par
00235             \}\par
00236         \}\par
00237         \par
00238         networkInterfaces.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00239               {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00240                 addresses.removeAll();\par
00241                 {\cf19 try}\par
00242                 \{\par
00243                     String deviceName = (String) networkInterfaces.getData(networkInterfaces.getSelection()[0]);\par
00244                     String[] addressesArr = packetTrace.getAddresses(deviceName);\par
00245                     System.out.println({\cf22 "addresses length: "}+addressesArr.length);\par
00246                     {\cf19 for}({\cf18 int} index = 0; index < addressesArr.length; index++)\par
00247                     \{\par
00248                         {\cf19 try}\par
00249                         \{\par
00250                             {\cf19 if}(pid != 0 && btnFilterByProcess.getSelection())\par
00251                             \{\par
00252                                 {\cf19 for}({\cf18 int} j = 0; j < activeConnections.length; j++)\par
00253                                 \{\par
00254                                     {\cf19 if}(activeConnections[j].getPid()==pid && activeConnections[j].getLocalAddress() == addressesArr[index])\par
00255                                     \{\par
00256                                         addresses.add(addressesArr[index]);\par
00257                                     \}\par
00258                                 \}\par
00259                             \}\par
00260                             {\cf19 else}\par
00261                             \{\par
00262                                 addresses.add(addressesArr[index]);\par
00263                             \}\par
00264                         \par
00265                         \}\par
00266                         {\cf19 catch}(IllegalArgumentException e1)\par
00267                         \{\par
00268                             e1.printStackTrace();\par
00269                             {\cf19 continue};\par
00270                         \}\par
00271                     \}\par
00272                 \}\par
00273                 {\cf19 catch}(ArrayIndexOutOfBoundsException e1) \{\}\par
00274               \}\par
00275             \});\par
00276         addresses.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00277               {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00278                   packets.removeAll();\par
00279                   addressSelected = {\cf17 true};             \par
00280               \}\par
00281             \});\par
00282         packets.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00283               {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00284                   IpPacket packet = ((IpPacket)packets.getData(packets.getSelection()[0]));\par
00285                   packetInfo.setText(packet.getHeader().toString());\par
00286                   {\cf18 byte}[] payloadBytes = packet.getPayload().getRawData();\par
00287                   String asciiPayloadStr = {\cf22 ""};\par
00288                   String hexPayloadStr = {\cf22 ""};\par
00289                   {\cf19 for}({\cf18 int} index = 0; index < payloadBytes.length;index++)\par
00290                   \{\par
00291                       asciiPayloadStr+=(char) payloadBytes[index];\par
00292                       hexPayloadStr+=String.format({\cf22 "%02X "}, payloadBytes[index]);\par
00293                   \}\par
00294                   asciiPayload.setText(asciiPayloadStr);\par
00295                   hexPayload.setText(hexPayloadStr);\par
00296               \}\par
00297             \});\par
00298         packetTrace = {\cf17 new} PacketTrace();\par
00299         updateNetwork();\par
00300     \}\par
00301     \par
00305     {\cf17 private} {\cf17 synchronized} {\cf18 void} updateNetwork()\par
00306     \{\par
00307         Thread updateThread = {\cf17 new} Thread(() -> \{ {\cf20 // Set up thread for each network interface}\par
00308             {\cf19 while} ({\cf17 true})\par
00309             \{               \par
00310                 HashMap<String, String> newDevices = packetTrace.getDevices();\par
00311                 \par
00312                     Display.getDefault().asyncExec({\cf17 new} Runnable() \{\par
00313                         {\cf17 public} {\cf18 void} run() \{\par
00314                             {\cf19 if}(!newDevices.equals(devices))\par
00315                             \{\par
00316                                 devices = newDevices;\par
00317                                 networkInterfaces.removeAll();\par
00318                                 {\cf19 for}(Entry<String, String> device : devices.entrySet())\par
00319                                 \{\par
00320                                     networkInterfaces.add(device.getValue());\par
00321                                     networkInterfaces.setData(device.getValue(), device.getKey());\par
00322                                 \}\par
00323                             \}\par
00324                             {\cf19 if}(addressSelected)\par
00325                             \{\par
00326                               {\cf19 try}\par
00327                               \{\par
00328                                   ArrayList<IpPacket> packetList = packetTrace.getPackets(addresses.getSelection()[0], 0);\par
00329                                   {\cf19 if}(packetList == {\cf17 null})\par
00330                                   \{\par
00331                                       errorAlert({\cf22 "Something went wrong when fetching packets."});\par
00332                                   \}\par
00333                                   {\cf19 for}(IpPacket packet : packetList)\par
00334                                   \{\par
00335                                       String packetDescription = packet.getHeader().getProtocol().name()+{\cf22 " - "}+packet.getPayload().getRawData().length+{\cf22 " bytes \{"}+packet.hashCode()+{\cf22 "\}"};\par
00336                                       packets.add(packetDescription);\par
00337                                       packets.setData(packetDescription, packet);\par
00338                                   \}\par
00339                               \}\par
00340                               {\cf19 catch}(ArrayIndexOutOfBoundsException e) \{\}\par
00341                             \}\par
00342                         \}\par
00343                     \});                         \par
00344                 {\cf19 try}\par
00345                 \{\par
00346                     TimeUnit.SECONDS.sleep(1);\par
00347                 \} {\cf19 catch} (InterruptedException e)\par
00348                 \{\par
00349                     e.printStackTrace();\par
00350                 \}\par
00351             \}\par
00352         \});\par
00353         updateThread.start();\par
00354     \}\par
00355     \par
00361     {\cf17 private} {\cf18 void} errorAlert(String message)\par
00362     \{\par
00363         MessageBox messageBox = {\cf17 new} MessageBox(this.getShell(), SWT.ERROR);                     \par
00364         messageBox.setText({\cf22 "Error"});\par
00365         messageBox.setMessage(message);\par
00366         messageBox.open();\par
00367     \}\par
00368     \par
00372     {\cf17 private} {\cf18 void} clearAll()\par
00373     \{\par
00374         networkInterfaces.deselectAll();\par
00375         addresses.removeAll();\par
00376         addresses.deselectAll();\par
00377         packets.removeAll();\par
00378         packets.deselectAll();\par
00379         packetInfo.setText({\cf22 ""});\par
00380         hexPayload.setText({\cf22 ""});\par
00381     \}\par
00382     \par
00386     @Override\par
00387     {\cf17 protected} {\cf18 void} checkSubclass()\par
00388     \{\par
00389         {\cf20 // Disable the check that prevents subclassing of SWT components}\par
00390     \}\par
00391 \}\par
00392 \par
00393 {\cf20 //list netstat info}\par
00394 {\cf20 //dropdowns for network interface, address, list packet}\par
00395 {\cf20 //show udp/tcp info}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NetworkStats.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/NetworkStats.java}
{\xe \v src/dynamicAnalysis/NetworkStats.java}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.util.ArrayList;\par
00007 \par
00011 {\cf17 public} {\cf17 class }NetworkStats\par
00012 \{\par
00013     \par
00015     {\cf17 private} ActiveConnection[] activeConnections;\par
00016 \par
00020     {\cf17 public} NetworkStats()\par
00021     \{\par
00022         CommandLine commandLine = {\cf17 new} CommandLine();\par
00023         String stats = commandLine.getNetstat();\par
00024         System.out.println(stats);\par
00025         stats=stats.substring(stats.indexOf({\cf22 "PID"})+6);\par
00026         ArrayList<ActiveConnection> activeConnectionsList = {\cf17 new} ArrayList<ActiveConnection>();\par
00027         {\cf19 while}(!stats.equals({\cf22 ""}))\par
00028         \{\par
00029             {\cf19 try}\par
00030             \{\par
00031                 String protocol=stats.substring(0, 3);      \par
00032                 stats = spaceBreak(stats);\par
00033                 String localAddress = stats.substring(0, stats.indexOf({\cf23 ' '}));\par
00034                 stats = spaceBreak(stats);\par
00035                 String foreignAddress = stats.substring(0, stats.indexOf({\cf23 ' '}));\par
00036                 stats = spaceBreak(stats);\par
00037                 String state = stats.substring(0, stats.indexOf({\cf23 ' '}));\par
00038                 System.out.println(localAddress);\par
00039                 {\cf18 long} pid = 0;\par
00040                 {\cf19 try}\par
00041                 \{\par
00042                     pid = Long.parseLong(state.substring(0, state.length()-1));\par
00043                 \}\par
00044                 {\cf19 catch}(NumberFormatException e)\par
00045                 \{\par
00046                     stats = spaceBreak(stats);\par
00047                     pid = Long.parseLong(stats.substring(0, stats.indexOf({\cf23 '\\n'})));\par
00048                 \}\par
00049                 \par
00050                 ActiveConnection activeConnection = {\cf17 new} ActiveConnection(protocol, localAddress, foreignAddress, state, pid);\par
00051                 activeConnectionsList.add(activeConnection);\par
00052                 stats = stats.substring(stats.indexOf({\cf23 '\\n'})+3);\par
00053             \}\par
00054             {\cf19 catch}(StringIndexOutOfBoundsException e)\par
00055             \{\par
00056                 {\cf20 //e.printStackTrace();}\par
00057                 {\cf19 break};\par
00058             \}\par
00059         \}\par
00060         ActiveConnection[] activeConnections = {\cf17 new} ActiveConnection[activeConnectionsList.size()];\par
00061         {\cf19 for}({\cf18 int} index = 0;index<activeConnections.length;index++)\par
00062         \{\par
00063             activeConnections[index]=activeConnectionsList.get(index);\par
00064         \}\par
00065         setActiveConnections(activeConnections);\par
00066     \}\par
00067     \par
00074     {\cf17 private} String spaceBreak(String stats)\par
00075     \{\par
00076         {\cf18 int} index=stats.indexOf({\cf23 ' '})+1;\par
00077         {\cf19 while}(stats.charAt(index)=={\cf23 ' '}) index++;\par
00078         {\cf19 return} stats.substring(index);\par
00079     \}\par
00080 \par
00086     {\cf17 public} ActiveConnection[] getActiveConnections()\par
00087     \{\par
00088         {\cf19 return} activeConnections;\par
00089     \}\par
00090 \par
00096     {\cf17 public} {\cf18 void} setActiveConnections(ActiveConnection[] activeConnections)\par
00097     \{\par
00098         this.activeConnections = activeConnections;\par
00099     \}\par
00100     \par
00101 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NetworkTraffic.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/NetworkTraffic.java}
{\xe \v src/dynamicAnalysis/NetworkTraffic.java}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.io.EOFException;\par
00007 {\cf17 import} java.io.IOException;\par
00008 {\cf17 import} java.net.InetAddress;\par
00009 {\cf17 import} java.util.List;\par
00010 {\cf17 import} java.util.concurrent.TimeoutException;\par
00011 \par
00012 {\cf17 import} org.pcap4j.core.*;\par
00013 {\cf17 import} org.pcap4j.core.BpfProgram.BpfCompileMode;\par
00014 {\cf17 import} org.pcap4j.packet.IpPacket;\par
00015 {\cf17 import} org.pcap4j.packet.Packet;\par
00016 {\cf17 import} org.pcap4j.packet.TcpPacket;\par
00017 {\cf17 import} org.pcap4j.packet.namednumber.IpNumber;\par
00018 {\cf17 import} org.pcap4j.packet.namednumber.TcpPort;\par
00019 {\cf17 import} org.pcap4j.packet.namednumber.UdpPort;\par
00020 {\cf17 import} org.pcap4j.packet.IpV4Packet;\par
00021 \par
00022 \par
00026 {\cf17 public} {\cf17 class }NetworkTraffic \{\par
00027 \par
00033     {\cf17 public} {\cf17 static} {\cf18 void} main(String[] args) \{\par
00034         NetworkStats netStats = {\cf17 new} NetworkStats();\par
00035         System.out.println(netStats.getActiveConnections()[0]);\par
00036         {\cf19 try} \{\par
00037             {\cf20 // Get a list of all available network interfaces}\par
00038             List<PcapNetworkInterface> devices = Pcaps.findAllDevs();\par
00039 \par
00040             {\cf20 // Create a separate PcapHandle for each interface and start capturing traffic}\par
00041             {\cf19 for} (PcapNetworkInterface device : devices) \{\par
00042                 {\cf20 //System.out.println(device.getName());}\par
00043                 PcapHandle handle = device.openLive(65536, PcapNetworkInterface.PromiscuousMode.PROMISCUOUS, 10);\par
00044                 {\cf19 try} \{\par
00045                     handle.setFilter({\cf22 "ip"}, BpfProgram.BpfCompileMode.OPTIMIZE);\par
00046                 \} {\cf19 catch} (NotOpenException e1) \{\par
00047                     {\cf20 // TODO Auto-generated catch block}\par
00048                     e1.printStackTrace();\par
00049                 \}\par
00050 \par
00051                 Thread listenerThread = {\cf17 new} Thread(() -> \{\par
00052                     {\cf19 try} \{\par
00053                         {\cf19 while} ({\cf17 true}) \{\par
00054                             Packet packet = handle.getNextPacket();\par
00055                             {\cf19 if}(packet!={\cf17 null})\par
00056                             \{\par
00057                                 {\cf19 if} (packet.contains(IpPacket.class)) \{\par
00058                                     IpPacket ipPacket = packet.get(IpPacket.class);\par
00059                                     {\cf20 //System.out.println(ipPacket);}\par
00060                                     {\cf20 //System.out.println("Port: "+ port.);}\par
00061                                     {\cf20 // Now you can access the IP packet fields}\par
00062                                     String srcAddr = ipPacket.getHeader().getSrcAddr().getHostAddress();\par
00063                                    {\cf20 /* byte[] data = ipPacket.getPayload().getRawData();}\par
00064 {\cf20                                     for(int index = 0;index<data.length;index++)}\par
00065 {\cf20                                     \{}\par
00066 {\cf20                                         System.out.print((char)data[index]+"");}\par
00067 {\cf20                                     \}*/}\par
00068                                     {\cf20 //System.out.println(ipPacket.getHeader().getProtocol().name()+" - "+ipPacket.getPayload().getRawData().length+" bytes \{"+ipPacket.hashCode()+"\}");}\par
00069                                     String dstAddr = ipPacket.getHeader().getDstAddr().getHostAddress();\par
00070                                     int protocol = ipPacket.getHeader().getProtocol().value();\par
00071                                 \}\par
00072                             \}\par
00073                             \par
00074                         \}\par
00075                     \} {\cf19 catch} (NotOpenException e) \{\par
00076                         e.printStackTrace();\par
00077                     \}\par
00078                 \});\par
00079                 listenerThread.start();\par
00080             \}\par
00081 \par
00082         \} {\cf19 catch} (PcapNativeException e1) \{\par
00083             {\cf20 // TODO Auto-generated catch block}\par
00084             e1.printStackTrace();\par
00085         \}\par
00086     \}\par
00087 \par
00088 \}\par
00089 {\cf20 // netstat -ano}\par
00090 {\cf20 // netstat -ano -p tcp - gets local address and port}\par
00091 {\cf20 // Destination port always 49389 (unknown)}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PacketTrace.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/PacketTrace.java}
{\xe \v src/dynamicAnalysis/PacketTrace.java}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.util.ArrayList;\par
00007 {\cf17 import} java.util.Collection;\par
00008 {\cf17 import} java.util.ConcurrentModificationException;\par
00009 {\cf17 import} java.util.HashMap;\par
00010 {\cf17 import} java.util.List;\par
00011 {\cf17 import} java.util.Map;\par
00012 \par
00013 {\cf17 import} org.pcap4j.core.BpfProgram;\par
00014 {\cf17 import} org.pcap4j.core.NotOpenException;\par
00015 {\cf17 import} org.pcap4j.core.PcapHandle;\par
00016 {\cf17 import} org.pcap4j.core.PcapNativeException;\par
00017 {\cf17 import} org.pcap4j.core.PcapNetworkInterface;\par
00018 {\cf17 import} org.pcap4j.core.Pcaps;\par
00019 {\cf17 import} org.pcap4j.packet.IpPacket;\par
00020 {\cf17 import} org.pcap4j.packet.Packet;\par
00021 \par
00022 {\cf17 import} com.google.common.collect.ArrayListMultimap;\par
00023 {\cf17 import} com.google.common.collect.Multimap;\par
00024 \par
00025 {\cf17 import} scala.collection.mutable.MultiMap;\par
00026 \par
00030 {\cf17 public} {\cf17 class }PacketTrace\par
00031 \{\par
00032     \par
00034     {\cf17 private} List<PcapNetworkInterface> devices;\par
00035     \par
00037     {\cf17 private} ArrayList<Multimap<String, IpPacket>> packets = {\cf17 new} ArrayList<Multimap<String, IpPacket>>();\par
00038     \par
00040     {\cf17 private} Multimap<String, String> addressMap = ArrayListMultimap.create();\par
00041     \par
00043     {\cf17 private} HashMap<String, Integer> interfaceMap = {\cf17 new} HashMap<String, Integer>();\par
00044     \par
00046     {\cf17 private} HashMap<String, String> idMap = {\cf17 new} HashMap<String, String>();\par
00047     \par
00049     {\cf17 private} Thread listenerThread;\par
00050     \par
00056     {\cf17 public} PacketTrace() throws PcapNativeException\par
00057     \{\par
00058         devices = Pcaps.findAllDevs();\par
00059         {\cf19 for}({\cf18 int} index = 0;index < devices.size();index++)\par
00060         \{\par
00061             idMap.put(devices.get(index).getName(), devices.get(index).getDescription());\par
00062             interfaceMap.put(devices.get(index).getName(), index); {\cf20 // Separating from multithread to avoid synchronization issues}\par
00063             packets.add(ArrayListMultimap.create());\par
00064         \}\par
00065         {\cf19 for} (PcapNetworkInterface device : devices)\par
00066         \{\par
00067             PcapHandle handle = device.openLive(65536, PcapNetworkInterface.PromiscuousMode.PROMISCUOUS, 10);\par
00068             {\cf19 try} \{\par
00069                 handle.setFilter({\cf22 "ip"}, BpfProgram.BpfCompileMode.OPTIMIZE);\par
00070             \} {\cf19 catch} (NotOpenException e1) \{\par
00071                 e1.printStackTrace();\par
00072             \}\par
00073             listenerThread = {\cf17 new} Thread(() -> \{ {\cf20 // Set up thread for each network interface}\par
00074                 {\cf19 try} \{\par
00075                     {\cf19 while} ({\cf17 true}) \{\par
00076                         Packet packet = handle.getNextPacket();\par
00077                         {\cf19 if}(packet!={\cf17 null})\par
00078                         \{                   \par
00079                             {\cf19 if} (packet.contains(IpPacket.class)) \{\par
00080                                 IpPacket ipPacket = packet.get(IpPacket.class);\par
00081                                 if(!addressMap.containsKey(ipPacket.getHeader().getSrcAddr().getHostAddress())) addressMap.put(device.getName(), ipPacket.getHeader().getSrcAddr().getHostAddress());\par
00082                                 packets.get(interfaceMap.get(device.getName())).put(ipPacket.getHeader().getSrcAddr().getHostAddress(), ipPacket); {\cf20 //needs address}\par
00083                             \}\par
00084                         \}\par
00085                         \par
00086                     \}\par
00087                 \} {\cf19 catch} (NotOpenException e) \{\par
00088                     e.printStackTrace();\par
00089                 \}\par
00090             \});\par
00091             listenerThread.start();\par
00092         \}\par
00093     \}\par
00094     \par
00100     {\cf17 public} HashMap<String, String> getDevices()\par
00101     \{\par
00102         HashMap<String, String> activeDevices = {\cf17 new} HashMap<String, String>();\par
00103         {\cf19 for}(PcapNetworkInterface device : devices)\par
00104         \{\par
00105             {\cf19 if}(addressMap.containsKey(device.getName()))\par
00106             \{\par
00107                 activeDevices.put(device.getName(), device.getDescription());\par
00108             \}\par
00109         \}\par
00110         {\cf19 return} activeDevices;\par
00111     \}\par
00112     \par
00119     {\cf17 public} String[] getAddresses(String deviceName)\par
00120     \{\par
00121         {\cf19 return} addressMap.get(deviceName).toArray({\cf17 new} String[addressMap.size()]);\par
00122     \}\par
00123     \par
00129     {\cf17 public} ArrayList<Multimap<String, IpPacket>> getPackets()\par
00130     \{\par
00131         {\cf19 return} packets;\par
00132     \}\par
00133     \par
00141     {\cf17 public} ArrayList<IpPacket> getPackets(String address, {\cf18 int} attempts)\par
00142     \{\par
00143         {\cf17 final} {\cf18 int} TIMEOUTCOUNTER = 10;\par
00144         ArrayList<IpPacket> packetList = {\cf17 new} ArrayList<IpPacket>();\par
00145         Collection<IpPacket> packetCollection;\par
00146         {\cf19 for}({\cf18 int} index = 0;index < packets.size();index++)\par
00147         \{\par
00148             packetCollection = packets.get(index).get(address);\par
00149             {\cf19 try}\par
00150             \{\par
00151                 {\cf19 for}(IpPacket packet : packetCollection)\par
00152                 \{\par
00153                     packetList.add(packet);\par
00154                 \}\par
00155             \} {\cf19 catch} (ConcurrentModificationException e)\par
00156             \{\par
00157                 {\cf19 if}(attempts > TIMEOUTCOUNTER) {\cf19 return} {\cf17 null};\par
00158                 {\cf19 else} {\cf19 return} getPackets(address, attempts+1);\par
00159             \}\par
00160             \par
00161         \}\par
00162         {\cf19 return} packetList;\par
00163     \}\par
00164 \par
00165 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PEFile.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/PEFile.java}
{\xe \v src/dynamicAnalysis/PEFile.java}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.io.File;\par
00007 {\cf17 import} java.io.IOException;\par
00008 {\cf17 import} java.nio.file.Files;\par
00009 {\cf17 import} java.nio.file.Paths;\par
00010 {\cf17 import} java.util.concurrent.Semaphore;\par
00011 \par
00012 {\cf17 import} org.eclipse.swt.SWT;\par
00013 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00014 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00015 \par
00019 {\cf17 public} {\cf17 class }PEFile \{\par
00020     \par
00022     {\cf17 private} File file;\par
00023     \par
00025     {\cf17 private} {\cf18 int} offset;\par
00026     \par
00028     {\cf17 private} Version version;\par
00029     \par
00031     {\cf17 private} {\cf18 int} pointer;\par
00032     \par
00034     {\cf17 private} {\cf18 byte}[] bytes = {\cf17 null};\par
00035     \par
00037     {\cf17 private} {\cf18 int} pointerToRawData;\par
00038 \par
00044     {\cf17 public} PEFile(File file)\par
00045     \{\par
00046         setFile(file);\par
00047     \}\par
00048 \par
00054     {\cf17 public} File getFile()\par
00055     \{\par
00056         {\cf19 return} file;\par
00057     \}\par
00058 \par
00064     {\cf17 public} {\cf18 void} setFile(File file)\par
00065     \{\par
00066         this.file = file;\par
00067     \}\par
00068     \par
00074     {\cf17 public} {\cf18 int} getOffset()\par
00075     \{\par
00076         {\cf19 return} offset;\par
00077     \}\par
00078 \par
00084     {\cf17 public} Version getVersion()\par
00085     \{\par
00086         {\cf19 return} version;\par
00087     \}\par
00088     \par
00094     {\cf17 public} {\cf18 byte}[] getInstructions()\par
00095     \{\par
00096         {\cf18 int} bytesIndex = offset;\par
00097         {\cf19 while}({\cf17 true})\par
00098         \{\par
00099             {\cf19 if}(bytes[bytesIndex]==0x2e && bytes[bytesIndex+1] == 0x74 && bytes[bytesIndex+2] == 0x65 && bytes[bytesIndex+3] == 0x78 && bytes[bytesIndex+4] == 0x74) {\cf19 break};\par
00100             bytesIndex++;\par
00101         \}\par
00102         bytesIndex+=16;\par
00103         {\cf18 int} sizeOfRawData = ((bytes[bytesIndex] & 0xff) | (bytes[bytesIndex+1] & 0xff) << 8 | (bytes[bytesIndex+2] & 0xff) << 16 | (bytes[bytesIndex+3] & 0xff) << 24);\par
00104         bytesIndex+=4;\par
00105         pointerToRawData = ((bytes[bytesIndex] & 0xff) | (bytes[bytesIndex+1] & 0xff) << 8 | (bytes[bytesIndex+2] & 0xff) << 16 | (bytes[bytesIndex+3] & 0xff) << 24);\par
00106         setPointer(pointerToRawData);\par
00107         {\cf18 byte}[] instructions = {\cf17 new} {\cf18 byte}[sizeOfRawData];\par
00108         {\cf19 for}({\cf18 int} index = pointerToRawData;index < sizeOfRawData + pointerToRawData;index++)\par
00109         \{\par
00110             instructions[index-pointerToRawData] = (byte)(bytes[index] & 0xff);\par
00111             {\cf19 if}(index-pointerToRawData <100) System.out.print(instructions[index-pointerToRawData] + {\cf22 " "});       \par
00112         \}\par
00113         {\cf19 return} instructions;\par
00114     \}\par
00115     \par
00121     {\cf17 public} {\cf18 int} getPointer()\par
00122     \{\par
00123         {\cf19 return} pointer;\par
00124     \}\par
00125 \par
00131     {\cf17 private} {\cf18 void} setPointer({\cf18 int} pointer)\par
00132     \{\par
00133         this.pointer = pointer;\par
00134     \}\par
00135     \par
00142     {\cf17 public} {\cf18 byte}[] getBytes() throws IOException\par
00143     \{\par
00144         {\cf19 return} Files.readAllBytes(Paths.get(file.toString()));\par
00145     \}\par
00146 \par
00152     {\cf17 public} {\cf18 void} setBytes({\cf18 byte}[] bytes)\par
00153     \{\par
00154         this.bytes = bytes;\par
00155     \}\par
00156 \par
00160     {\cf17 public} {\cf18 void} readFile()\par
00161     \{\par
00162         \par
00163         {\cf19 try} \par
00164         \{\par
00165             bytes = Files.readAllBytes(Paths.get(file.toString()));\par
00166             offset = (((bytes[0x3c] & 0xff) | (bytes[0x3d] & 0xff) << 8 | (bytes[0x3e] & 0xff) << 16 | (bytes[0x3f] & 0xff) << 24)) + 24;\par
00167             {\cf19 if}(bytes[offset+1]==0x01) version = Version.x32;\par
00168             {\cf19 else} {\cf19 if} (bytes[offset+1]==0x02) version = Version.x64;\par
00169             {\cf19 else} System.out.println({\cf22 "ERROR finding version"});\par
00170             {\cf18 int} rvaOffset;\par
00171             {\cf19 if}(version == Version.x32) rvaOffset = offset + 92;\par
00172             {\cf19 else} rvaOffset = offset + 108;\par
00173             {\cf18 int} numberOfRvaAndSizes = ((bytes[rvaOffset] & 0xff) | (bytes[rvaOffset+1] & 0xff) << 8 | (bytes[rvaOffset+2] & 0xff) << 16 | (bytes[rvaOffset+3] & 0xff) << 24);\par
00174             DataDirectory dataDirectories[] = {\cf17 new} DataDirectory[numberOfRvaAndSizes];\par
00175             {\cf18 int} directoryOffset;\par
00176             {\cf19 if}(version == Version.x32) directoryOffset = offset + 96;\par
00177             {\cf19 else} directoryOffset = offset + 112;\par
00178             {\cf18 int} virtualAddress;\par
00179             {\cf18 int} size;\par
00180             {\cf19 for}({\cf18 int} index = 0; index < numberOfRvaAndSizes; index++)\par
00181             \{\par
00182                 virtualAddress = ((bytes[directoryOffset] & 0xff) | (bytes[directoryOffset+1] & 0xff) << 8 | (bytes[directoryOffset+2] & 0xff) << 16 | (bytes[directoryOffset+3] & 0xff) << 24);\par
00183                 size = ((bytes[directoryOffset+4] & 0xff) | (bytes[directoryOffset+5] & 0xff) << 8 | (bytes[directoryOffset+6] & 0xff) << 16 | (bytes[directoryOffset+7] & 0xff) << 24);\par
00184                 dataDirectories[index] = {\cf17 new} DataDirectory(bytes, virtualAddress, size);\par
00185             \}       \par
00186         \} \par
00187         {\cf19 catch} (IOException | NullPointerException e)\par
00188         \{\par
00189             e.printStackTrace();\par
00190         \}\par
00191     \}\par
00192     \par
00198     @Override\par
00199     {\cf17 public} String toString()\par
00200     \{\par
00201         {\cf19 return} {\cf22 "PEFile [file="} + file + {\cf22 ", offset="} + offset + {\cf22 ", version="} + version + {\cf22 "]"};\par
00202     \}\par
00203     \par
00204 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ProcessManager.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/ProcessManager.java}
{\xe \v src/dynamicAnalysis/ProcessManager.java}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.io.File;\par
00007 {\cf17 import} java.io.IOException;\par
00008 {\cf17 import} java.util.Arrays;\par
00009 \par
00013 {\cf17 public} {\cf17 class }ProcessManager\par
00014 \{\par
00015     \par
00017     {\cf17 private} File file;\par
00018     \par
00020     {\cf17 private} Process process;\par
00021     \par
00023     {\cf17 private} CommandLine commandLine;\par
00024     \par
00026     {\cf17 private} String name;\par
00027     \par
00029     {\cf17 private} String[] dlls;\par
00030     \par
00032     {\cf17 private} DllFile[] dllFiles;\par
00033     \par
00035     {\cf17 private} String[] files;\par
00036     \par
00042     {\cf17 public} ProcessManager(File file)\par
00043     \{\par
00044         setFile(file);\par
00045         createProcess();\par
00046         commandLine = {\cf17 new} CommandLine(getPid());\par
00047         setName();\par
00048         setDLLs();\par
00049     \}\par
00050 \par
00056     {\cf17 public} ProcessManager({\cf18 int} pid)\par
00057     \{\par
00058         commandLine = {\cf17 new} CommandLine(pid);\par
00059         setName();\par
00060         setDLLs();\par
00061         setFiles();\par
00062     \}\par
00063     \par
00069     {\cf17 public} File getFile()\par
00070     \{\par
00071         {\cf19 return} file;\par
00072     \}\par
00073 \par
00079     {\cf17 public} {\cf18 void} setFile(File file)\par
00080     \{\par
00081         this.file = file;\par
00082     \}\par
00083     \par
00089     {\cf17 public} Process createProcess()\par
00090     \{\par
00091         ProcessBuilder builder = {\cf17 new} ProcessBuilder(getFile().getAbsolutePath());\par
00092         process = {\cf17 null};\par
00093         {\cf19 try}\par
00094         \{\par
00095             process = builder.start();\par
00096         \} {\cf19 catch} (IOException e)\par
00097         \{\par
00098             e.printStackTrace();\par
00099             \par
00100         \}\par
00101         System.out.println({\cf22 "children: "}+process.children());\par
00102         System.out.println({\cf22 "info: "} + process.info());\par
00103         {\cf19 return} process;\par
00104     \}\par
00105     \par
00111     {\cf17 public} {\cf18 long} getPid()\par
00112     \{\par
00113         {\cf19 return} process.pid();\par
00114     \}\par
00115     \par
00121     {\cf17 public} String getPidAsString()\par
00122     \{\par
00123         {\cf19 return} Long.toString(process.pid());\par
00124     \}\par
00125     \par
00129     {\cf17 private} {\cf18 void} setName()\par
00130     \{\par
00131         String name = commandLine.runName();\par
00132         {\cf19 try}\par
00133         \{\par
00134             this.name = name.substring(name.lastIndexOf({\cf22 "\\""}, name.indexOf({\cf22 ".exe"}))+1, name.lastIndexOf({\cf22 "\\""}, name.indexOf({\cf22 ".exe"})+4));\par
00135         \}\par
00136         {\cf19 catch}(StringIndexOutOfBoundsException e)\par
00137         \{\par
00138             e.printStackTrace();\par
00139             this.name = {\cf22 "Error"};\par
00140         \}\par
00141     \}\par
00142     \par
00146     {\cf17 private} {\cf18 void} setDLLs()\par
00147     \{\par
00148         String dllString = commandLine.runDLLs();\par
00149         {\cf18 int} count=0;\par
00150         {\cf19 for}({\cf18 int} index=dllString.indexOf({\cf23 '\\n'}, dllString.indexOf({\cf22 "Path"})+5)+1;index<dllString.length();index++)\par
00151         \{\par
00152             {\cf19 if}(dllString.charAt(index)=={\cf23 '\\n'})\par
00153             \{\par
00154                 count++;\par
00155             \}\par
00156         \}\par
00157         String DLLs[] = {\cf17 new} String[count];\par
00158         {\cf18 int} index=dllString.indexOf({\cf23 '\\n'}, dllString.indexOf({\cf22 "Path"})+5)+1;\par
00159         {\cf18 int} dllIndex=0;     \par
00160         {\cf19 while}(count!=1)\par
00161         \{\par
00162             {\cf19 try}\par
00163             \{\par
00164                 DLLs[dllIndex]=dllString.substring(dllString.lastIndexOf({\cf23 ' '}, dllString.indexOf({\cf23 '\\n'}, index)), dllString.lastIndexOf({\cf23 '\\n'}, dllString.indexOf({\cf23 '\\n'}, index)));\par
00165             \} {\cf19 catch}(StringIndexOutOfBoundsException | IllegalArgumentException e)\par
00166             \{\par
00167                 DLLs[dllIndex] = {\cf22 ""};\par
00168                 e.printStackTrace();\par
00169             \}\par
00170             index=dllString.indexOf({\cf23 '\\n'}, index+1);\par
00171             dllIndex++;\par
00172             count--;\par
00173         \}\par
00174         DLLs[dllIndex]=dllString.substring(dllString.lastIndexOf({\cf23 ' '}));\par
00175         dllFiles = {\cf17 new} DllFile[DLLs.length];\par
00176         {\cf19 for}({\cf18 int} j = 0;j<DLLs.length;j++)\par
00177         \{\par
00178             dllFiles[j] = {\cf17 new} DllFile(DLLs[j]);\par
00179         \}\par
00180         this.dlls = DLLs;\par
00181     \}\par
00182     \par
00188     {\cf17 public} String getName()\par
00189     \{\par
00190         {\cf19 return} this.name;\par
00191     \}\par
00192     \par
00198     {\cf17 public} String[] getDLLs()\par
00199     \{\par
00200         {\cf19 return} this.dlls;\par
00201     \}\par
00202 \par
00208     {\cf17 public} DllFile[] getDllFiles()\par
00209     \{\par
00210         {\cf19 return} dllFiles;\par
00211     \}\par
00212     \par
00218     {\cf17 public} String[] getFiles()\par
00219     \{\par
00220         {\cf19 return} files;\par
00221     \}\par
00222 \par
00226     {\cf17 private} {\cf18 void} setFiles()\par
00227     \{\par
00228         String filesOutput = commandLine.runFiles();\par
00229         {\cf18 int} count=0;\par
00230         {\cf18 int} index = filesOutput.indexOf({\cf22 "File,"});\par
00231         {\cf19 while} (index != -1)\par
00232         \{\par
00233             count++;\par
00234             index = filesOutput.indexOf({\cf22 "File,"}, index+1);\par
00235         \}\par
00236         String filesArr[] = {\cf17 new} String[count];\par
00237         String file={\cf22 ""};\par
00238         index=filesOutput.indexOf({\cf22 "Name"})+7;\par
00239         {\cf18 int} filesIndex=0;\par
00240         {\cf19 while}(count!=0)\par
00241         \{\par
00242             {\cf19 try}\par
00243             \{\par
00244                 file=filesOutput.substring(filesOutput.indexOf({\cf22 "File,"},index)+6, filesOutput.indexOf(10, index+1));\par
00245             \}\par
00246             {\cf19 catch}(StringIndexOutOfBoundsException e)\par
00247             \{\par
00248                 file=filesOutput.substring(filesOutput.indexOf({\cf22 "File,"},index)+6);\par
00249             \}\par
00250             filesArr[filesIndex]=file;\par
00251             filesIndex++;\par
00252             index=filesOutput.indexOf(10, index+1);\par
00253             System.out.println({\cf22 "index: "}+index);\par
00254             count--;\par
00255             System.out.println(count);\par
00256         \}\par
00257         this.files = filesArr;\par
00258     \}\par
00259     \par
00265     {\cf17 public} Process getProcess()\par
00266     \{\par
00267         {\cf19 return} process;\par
00268     \}\par
00269 \par
00275     {\cf17 public} {\cf18 void} setProcess(Process process)\par
00276     \{\par
00277         this.process = process;\par
00278     \}\par
00279 \par
00285     {\cf17 public} {\cf18 boolean} destroyProcess()\par
00286     \{\par
00287         Process process = getProcess();\par
00288         {\cf19 if}(process == {\cf17 null}) {\cf19 return} {\cf17 false};\par
00289         process = process.destroyForcibly();\par
00290         setProcess(process);\par
00291         {\cf19 return} {\cf17 true};\par
00292     \}\par
00293     \par
00299     @Override\par
00300     {\cf17 public} String toString()\par
00301     \{\par
00302         {\cf19 return} {\cf22 "ProcessManager [file="} + file + {\cf22 ", process="} + process + {\cf22 ", commandLine="} + commandLine + {\cf22 ", name="}\par
00303                 + name + {\cf22 ", dlls="} + Arrays.toString(dlls) + {\cf22 ", dllFiles="} + Arrays.toString(dllFiles) + {\cf22 "]"};\par
00304     \}\par
00305     \par
00306 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ReadWrite.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/ReadWrite.java}
{\xe \v src/dynamicAnalysis/ReadWrite.java}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 {\cf17 import} java.io.*;\par
00006 \par
00010 {\cf17 public} {\cf17 class }ReadWrite\par
00011 \{\par
00012     \par
00019      {\cf17 public} {\cf17 static} {\cf18 void} write(String word, String file) {\cf20 //Method for clearing a text file and writing a line.}\par
00020     \{\par
00021         PrintWriter delete={\cf17 null};\par
00022         {\cf19 try}\par
00023             \{\par
00024                 delete = {\cf17 new} PrintWriter(file);\par
00025                 FileWriter writer = {\cf17 new} FileWriter(file);\par
00026                 delete.print({\cf22 ""});\par
00027                 writer.write(word);\par
00028                 writer.close();\par
00029             \}\par
00030         {\cf19 catch} (IOException e) \par
00031             \{\par
00032                 e.printStackTrace();\par
00033             \}\par
00034         {\cf19 finally}\par
00035         \{\par
00036             delete.close();\par
00037         \}\par
00038     \}\par
00039     \par
00046      {\cf17 public} {\cf17 static} {\cf18 void} writeLine(String word, String file) {\cf20 //Method for adding a line to a text file.}\par
00047     \{\par
00048         {\cf19 try}\par
00049             \{\par
00050                 FileWriter writer = {\cf17 new} FileWriter(file, {\cf17 true});\par
00051                 writer.write(word+{\cf22 "\\n"});\par
00052                 writer.close();\par
00053             \}\par
00054         {\cf19 catch} (IOException e) \par
00055             \{\par
00056                 e.printStackTrace();\par
00057             \}\par
00058     \}\par
00059     \par
00065      {\cf17 public} {\cf17 static} {\cf18 void} delete(String file) {\cf20 //Method for clearing a text file.}\par
00066     \{\par
00067         write({\cf22 ""}, file);\par
00068     \}\par
00069     \par
00076      {\cf17 public} {\cf17 static} {\cf18 int} getLength(String file) {\cf20 //Returns how many lines are in the text file.}\par
00077     \{\par
00078         {\cf18 int} count=1;\par
00079         @SuppressWarnings({\cf22 "unused"})\par
00080         String dummy;\par
00081         BufferedReader checkLine={\cf17 null};\par
00082         {\cf19 try}\par
00083         \{\par
00084         FileReader reader = {\cf17 new} FileReader(file);\par
00085         checkLine={\cf17 new} BufferedReader(reader);\par
00086         {\cf19 while} ({\cf17 true})\par
00087                 \{\par
00088                     dummy=checkLine.readLine().toString();\par
00089                     {\cf19 if} (!(checkLine.ready()))\par
00090                     \{\par
00091                         {\cf19 break};\par
00092                     \}\par
00093                     {\cf19 else}\par
00094                     \{\par
00095                         count++;\par
00096                     \}\par
00097                 \}\par
00098         \}\par
00099         {\cf19 catch} (IOException e) \par
00100             \{\par
00101                 e.printStackTrace();\par
00102             \}\par
00103         {\cf19 return} count;\par
00104     \}\par
00105     \par
00113      {\cf17 public} {\cf17 static} String getLine({\cf18 int} number, String file) {\cf20 //Method for returning a line from a text file.}\par
00114     \{\par
00115         String word={\cf22 ""};\par
00116         BufferedReader checkLine={\cf17 null};\par
00117         FileReader reader={\cf17 null};\par
00118         {\cf19 try}\par
00119             \{\par
00120             {\cf19 try}\par
00121             \{\par
00122                 reader = {\cf17 new} FileReader(file);\par
00123             \}\par
00124                 {\cf19 catch} (FileNotFoundException e)\par
00125             \{\par
00126                     {\cf19 return} {\cf22 ""};\par
00127             \}\par
00128                 checkLine={\cf17 new} BufferedReader(reader);\par
00129                 {\cf19 for} ({\cf18 int} index=-1;index<number;index++)\par
00130                     \{\par
00131                         word=checkLine.readLine().toString();\par
00132                         \par
00133                     \}\par
00134                 reader.close();\par
00135             \}\par
00136         {\cf19 catch} (IOException e) \par
00137             \{\par
00138                 e.printStackTrace();\par
00139             \}\par
00140         {\cf19 return} word;\par
00141     \}\par
00142     \par
00150      {\cf17 public} {\cf17 static} {\cf18 int} indexOf(String word, String file) {\cf20 //Returns the index that the word is at.}\par
00151     \{\par
00152         {\cf18 int} index=-1;\par
00153         String temp;\par
00154         BufferedReader checkLine={\cf17 null};\par
00155         {\cf19 try}\par
00156             \{\par
00157                 FileReader reader = {\cf17 new} FileReader(file);\par
00158                 checkLine={\cf17 new} BufferedReader(reader);\par
00159                 {\cf19 while} ({\cf17 true})\par
00160                 \{\par
00161                     {\cf19 if} (!(checkLine.ready()))\par
00162                     \{\par
00163                         index=-1;\par
00164                         {\cf19 break};\par
00165                     \}\par
00166                     index++;\par
00167                     temp=checkLine.readLine().toString();\par
00168                     {\cf19 if} (temp.equals(word))\par
00169                     \{\par
00170                         {\cf19 break};\par
00171                     \}\par
00172                     \par
00173                 \}\par
00174             \}\par
00175         {\cf19 catch} (IOException e) \par
00176             \{\par
00177                 e.printStackTrace();\par
00178             \}\par
00179         {\cf19 return} index;\par
00180     \}\par
00181     \par
00189      {\cf17 public} {\cf17 static} {\cf18 void} replace(String oldWord, String newWord, String file) {\cf20 //Replaces the old word with the new word in a text file.}\par
00190     \{\par
00191         delete({\cf22 "temp.txt"});\par
00192         String temp={\cf22 ""};\par
00193         BufferedReader checkLine;\par
00194         {\cf19 try}\par
00195             \{\par
00196                 FileReader reader = {\cf17 new} FileReader(file);\par
00197                 checkLine={\cf17 new} BufferedReader(reader);\par
00198                 {\cf19 while} ({\cf17 true})\par
00199                 \{\par
00200                     temp=checkLine.readLine().toString();\par
00201                     {\cf19 if} (!(temp.equals(oldWord)))\par
00202                     \{\par
00203                         writeLine(temp,{\cf22 "temp.txt"});\par
00204                     \}\par
00205                     {\cf19 else}\par
00206                     \{\par
00207                         writeLine(newWord,{\cf22 "temp.txt"});\par
00208                     \}\par
00209                     {\cf19 if} (!(checkLine.ready()))\par
00210                     \{\par
00211                         {\cf19 break};\par
00212                     \}\par
00213                 \}\par
00214                 delete(file);\par
00215                 reader = {\cf17 new} FileReader({\cf22 "temp.txt"});\par
00216                 checkLine={\cf17 new} BufferedReader(reader);\par
00217                 {\cf19 while} ({\cf17 true})\par
00218                 \{\par
00219                     writeLine(checkLine.readLine().toString(), file);\par
00220                     {\cf19 if} (!(checkLine.ready()))\par
00221                     \{\par
00222                         {\cf19 break};\par
00223                     \}\par
00224                 \}\par
00225                 \par
00226             \}\par
00227         {\cf19 catch} (IOException e) \par
00228             \{\par
00229                 e.printStackTrace();\par
00230             \}\par
00231     \}\par
00232     \par
00240      {\cf17 public} {\cf17 static} {\cf18 void} replace({\cf18 int} index, String newWord, String file) {\cf20 //Replaces the word at specified index with the new word.}\par
00241     \{\par
00242         delete({\cf22 "temp.txt"});\par
00243         {\cf18 int} increment=-1;\par
00244         String temp={\cf22 ""};\par
00245         BufferedReader checkLine;\par
00246         {\cf19 try}\par
00247             \{\par
00248                 \par
00249                 FileReader reader = {\cf17 new} FileReader(file);\par
00250                 checkLine={\cf17 new} BufferedReader(reader);\par
00251                 {\cf19 while} ({\cf17 true})\par
00252                 \{\par
00253                     increment++;\par
00254                     temp=checkLine.readLine().toString();\par
00255                     {\cf19 if} (increment!=index)\par
00256                     \{\par
00257                         writeLine(temp,{\cf22 "temp.txt"});\par
00258                     \}\par
00259                     {\cf19 else}\par
00260                     \{\par
00261                         writeLine(newWord,{\cf22 "temp.txt"});\par
00262                     \}\par
00263                     {\cf19 if} (!(checkLine.ready()))\par
00264                     \{\par
00265                         {\cf19 break};\par
00266                     \}\par
00267                 \}\par
00268                 delete(file);\par
00269                 reader = {\cf17 new} FileReader({\cf22 "temp.txt"});\par
00270                 checkLine={\cf17 new} BufferedReader(reader);\par
00271                 {\cf19 while} ({\cf17 true})\par
00272                 \{\par
00273                     writeLine(checkLine.readLine().toString(), file);\par
00274                     {\cf19 if} (!(checkLine.ready()))\par
00275                     \{\par
00276                         {\cf19 break};\par
00277                     \}\par
00278                 \}\par
00279                 \par
00280             \}\par
00281         {\cf19 catch} (IOException e) \par
00282             \{\par
00283                 e.printStackTrace();\par
00284             \}\par
00285     \}\par
00286     \par
00293      {\cf17 public} {\cf17 static} {\cf18 boolean} isReady(String file) {\cf20 //Check if text file is ready to be written.}\par
00294     \{\par
00295         {\cf18 boolean} check={\cf17 true};\par
00296         BufferedReader checkLine;\par
00297         {\cf19 try}\par
00298         \{\par
00299             FileReader reader = {\cf17 new} FileReader(file);\par
00300             checkLine={\cf17 new} BufferedReader(reader);\par
00301             check=checkLine.ready();\par
00302         \}\par
00303         {\cf19 catch}(IOException e)\par
00304         \{\par
00305             e.printStackTrace();\par
00306         \}\par
00307         {\cf19 return} check;\par
00308     \}\par
00309     \par
00316      {\cf17 public} {\cf17 static} {\cf18 void} deleteLine({\cf18 int} index, String file) {\cf20 //Deletes the line at a specified index.}\par
00317     \{\par
00318         delete({\cf22 "temp.txt"});\par
00319         {\cf18 int} increment=-1;\par
00320         String temp={\cf22 ""};\par
00321         BufferedReader checkLine;\par
00322         {\cf19 try}\par
00323             \{\par
00324                 \par
00325                 FileReader reader = {\cf17 new} FileReader(file);\par
00326                 checkLine={\cf17 new} BufferedReader(reader);\par
00327                 {\cf19 while} ({\cf17 true})\par
00328                 \{\par
00329                     increment++;\par
00330                     temp=checkLine.readLine().toString();\par
00331                     {\cf19 if} (increment!=index)\par
00332                     \{\par
00333                         writeLine(temp,{\cf22 "temp.txt"});\par
00334                     \}\par
00335                     {\cf19 if} (!(checkLine.ready()))\par
00336                     \{\par
00337                         {\cf19 break};\par
00338                     \}\par
00339                 \}\par
00340                 delete(file);\par
00341                 reader = {\cf17 new} FileReader({\cf22 "temp.txt"});\par
00342                 checkLine={\cf17 new} BufferedReader(reader);\par
00343                 {\cf19 while} ({\cf17 true})\par
00344                 \{\par
00345                     writeLine(checkLine.readLine().toString(), file);\par
00346                     {\cf19 if} (!(checkLine.ready()))\par
00347                     \{\par
00348                         {\cf19 break};\par
00349                     \}\par
00350                 \}\par
00351                 \par
00352             \}\par
00353         {\cf19 catch} (IOException e) \par
00354             \{\par
00355                 e.printStackTrace();\par
00356             \}\par
00357         \par
00358     \}\par
00359     \par
00366      {\cf17 public} {\cf17 static} String toString(String file)\par
00367     \{\par
00368         BufferedReader checkLine;\par
00369         String total={\cf22 ""};\par
00370         {\cf19 try}\par
00371         \{\par
00372         FileReader reader = {\cf17 new} FileReader(file);\par
00373         checkLine={\cf17 new} BufferedReader(reader);\par
00374         {\cf19 while} ({\cf17 true})\par
00375         \{\par
00376             total+=checkLine.readLine().toString()+{\cf22 "\\n"};\par
00377             {\cf19 if} (!(checkLine.ready()))\par
00378             \{\par
00379                 {\cf19 break};\par
00380             \}\par
00381             \par
00382         \}\par
00383         checkLine.close();\par
00384         \}\par
00385         {\cf19 catch}(IOException e)\par
00386         \{\par
00387             e.printStackTrace();\par
00388         \}\par
00389         {\cf19 return} total;\par
00390     \}\par
00391 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SelectFile.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/SelectFile.java}
{\xe \v src/dynamicAnalysis/SelectFile.java}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00007 {\cf17 import} org.eclipse.swt.widgets.FileDialog;\par
00008 {\cf17 import} org.eclipse.swt.widgets.Shell;\par
00009 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00010 \par
00011 {\cf17 import} java.awt.Dimension;\par
00012 {\cf17 import} java.awt.Toolkit;\par
00013 \par
00014 {\cf17 import} org.eclipse.swt.SWT;\par
00015 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00016 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00017 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00018 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00019 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00020 \par
00024 {\cf17 public} {\cf17 class }SelectFile\par
00025 \{\par
00026 \par
00028     {\cf17 protected} Shell shell;\par
00029     \par
00031     {\cf17 private} Text text;\par
00032     \par
00034     {\cf17 private} String filePath;\par
00035     \par
00037     {\cf17 private} {\cf18 int} x;\par
00038     \par
00040     {\cf17 private} {\cf18 int} y;\par
00041     \par
00043     {\cf17 private} {\cf18 boolean} pidMode;\par
00044     \par
00046     {\cf17 private} {\cf18 int} pid;\par
00047     \par
00055     {\cf17 public} SelectFile({\cf18 int} x, {\cf18 int} y, {\cf18 boolean} pidMode)\par
00056     \{\par
00057         setX(x);\par
00058         setY(y);\par
00059         setPidMode(pidMode);\par
00060         open();\par
00061     \}\par
00062 \par
00066     {\cf17 public} {\cf18 void} open()\par
00067     \{\par
00068         Display display = Display.getDefault();\par
00069         createContents();\par
00070         shell.open();\par
00071         shell.layout();\par
00072         {\cf19 while} (!shell.isDisposed())\par
00073         \{\par
00074             {\cf19 try}\par
00075             \{\par
00076                 {\cf19 if} (!display.readAndDispatch())\par
00077                 \{\par
00078                     display.sleep();\par
00079                 \}\par
00080             \}\par
00081             {\cf19 catch}(IllegalArgumentException e) \{\}\par
00082         \}\par
00083     \}\par
00084 \par
00088     {\cf17 protected} {\cf18 void} createContents()\par
00089     \{\par
00090         System.out.println(getX());\par
00091         shell = {\cf17 new} Shell();\par
00092         shell.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00093         shell.setSize(400, 180);\par
00094         \par
00095         {\cf19 if}(!isPidMode()) shell.setText({\cf22 "Choose a file"});\par
00096         {\cf19 else} shell.setText({\cf22 "Choose a Process"});\par
00097         \par
00098         shell.setLocation(getX()+200,getY()+90);\par
00099         \par
00100         text = {\cf17 new} Text(shell, SWT.BORDER);\par
00101         text.setBackground(SWTResourceManager.getColor(255, 255, 255));\par
00102         text.setBounds(69, 38, 250, 25);\par
00103         \par
00104         Button btnOk = {\cf17 new} Button(shell, SWT.NONE);\par
00105         btnOk.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00106             @Override\par
00107             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00108                 {\cf19 if}(!isPidMode())\par
00109                 \{\par
00110                     filePath = text.getText();\par
00111                     shell.dispose();\par
00112                 \}\par
00113                 {\cf19 else}\par
00114                 \{\par
00115                     setPid(Integer.parseInt(text.getText()));\par
00116                     System.out.println({\cf22 "pid: "}+getPid());\par
00117                     shell.dispose();\par
00118                 \}\par
00119             \}\par
00120         \});\par
00121         btnOk.setBounds(315, 105, 46, 25);\par
00122         btnOk.setText({\cf22 "OK"});\par
00123         \par
00124         Button btnSelectFile = {\cf17 new} Button(shell, SWT.NONE);\par
00125         btnSelectFile.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00126             @Override\par
00127             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00128                 {\cf19 if}(!isPidMode())\par
00129                 \{\par
00130                     FileDialog fileDialog = {\cf17 new} FileDialog(shell, SWT.MULTI);\par
00131                     String[] files = \{\par
00132                             {\cf22 "*.exe"},\par
00133                         \};\par
00134                         fileDialog.setFilterExtensions(files);\par
00135                         text.setText(fileDialog.open());\par
00136                 \}\par
00137                 {\cf19 else}\par
00138                 \{\par
00139                     CommandLine commandLine = {\cf17 new} CommandLine();\par
00140                     String output = commandLine.getAll();\par
00141                     {\cf18 int} breakCount = 0;\par
00142                     \par
00143                     {\cf19 for}({\cf18 int} index = 0;index<output.length();index++)\par
00144                     \{\par
00145                         {\cf19 if}(output.charAt(index)=={\cf23 '\\n'})\par
00146                         \{\par
00147                             breakCount++;\par
00148                         \}\par
00149                     \}\par
00150                     \par
00151                     String[] names = {\cf17 new} String[breakCount-2];\par
00152                     {\cf18 int}[] pids = {\cf17 new} {\cf18 int}[breakCount-2];\par
00153                     String[] memory = {\cf17 new} String[breakCount-2];\par
00154                     {\cf18 int} outputIndex = output.indexOf({\cf23 '\\n'});\par
00155                     {\cf18 int} arrayIndex = 0;\par
00156                     {\cf19 while}(outputIndex <= output.length())\par
00157                     \{\par
00158                         {\cf19 try}\par
00159                         \{\par
00160                             names[arrayIndex]=output.substring(outputIndex+2, output.indexOf({\cf23 '\\"'}, outputIndex+2));\par
00161                             pids[arrayIndex]=Integer.parseInt(output.substring(output.indexOf({\cf23 ','}, outputIndex)+2, output.indexOf({\cf23 '\\"'}, output.indexOf({\cf23 ','}, outputIndex)+2))); {\cf20 //stuck here}\par
00162                             memory[arrayIndex]=output.substring(output.lastIndexOf({\cf22 "\\""}, output.indexOf({\cf22 "\\n"}, outputIndex+1)-2)+1, output.lastIndexOf({\cf22 "\\""}, output.indexOf({\cf22 "\\n"}, outputIndex+1)));\par
00163                             outputIndex=output.indexOf({\cf23 '\\n'}, outputIndex+1);\par
00164                         \}\par
00165                         {\cf19 catch}(ArrayIndexOutOfBoundsException e1)\par
00166                         \{\par
00167                             {\cf19 break};\par
00168                         \}\par
00169                         arrayIndex++;\par
00170                     \}\par
00171                     SelectProcess selectProcess = {\cf17 new} SelectProcess(names, pids, memory, shell.getLocation().x, shell.getLocation().y);\par
00172                     selectProcess.open();\par
00173                     {\cf19 if}(selectProcess.getPid() == 0) text.setText({\cf22 ""});\par
00174                     {\cf19 else} text.setText(Integer.toString(selectProcess.getPid()));\par
00175                 \}\par
00176             \}\par
00177         \});\par
00178         btnSelectFile.setBounds(235, 105, 74, 25);\par
00179         btnSelectFile.setText({\cf22 "Select File"});\par
00180         \par
00181         Label lblFileLocation = {\cf17 new} Label(shell, SWT.NONE);\par
00182         lblFileLocation.setBackground(SWTResourceManager.getColor(192, 192, 192));\par
00183         lblFileLocation.setBounds(161, 17, 67, 15);\par
00184         lblFileLocation.setText({\cf22 "File Location"});\par
00185         \par
00186         {\cf19 if}(isPidMode())\par
00187         \{\par
00188             setPidMode({\cf17 true});\par
00189             lblFileLocation.setText({\cf22 "Process ID"});\par
00190             {\cf20 //btnEnterPid.setText("Enter File Location");}\par
00191             btnSelectFile.setText({\cf22 "Select Process"});\par
00192             {\cf20 //btnEnterPid.setBounds(116, 105, 103, 25);}\par
00193             btnSelectFile.setBounds(223, 105, 86, 25);\par
00194             \par
00195         \}\par
00196         {\cf19 else}\par
00197         \{\par
00198             setPidMode({\cf17 false});\par
00199             lblFileLocation.setText({\cf22 "File Location"});\par
00200             {\cf20 //btnEnterPid.setText("Enter PID");}\par
00201             btnSelectFile.setText({\cf22 "Select File"});\par
00202             lblFileLocation.setBounds(161, 17, 67, 15);\par
00203             btnSelectFile.setBounds(235, 105, 74, 25);\par
00204             {\cf20 //btnEnterPid.setBounds(162, 105, 67, 25);}\par
00205             \par
00206         \}\par
00207         \par
00208         Button btnEnterPid = {\cf17 new} Button(shell, SWT.NONE);\par
00209         btnEnterPid.setVisible({\cf17 false});\par
00210         btnEnterPid.setSelection({\cf17 true});\par
00211         btnEnterPid.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00212             @Override\par
00213             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00214                 {\cf19 if}(!isPidMode())\par
00215                 \{\par
00216                     setPidMode({\cf17 true});\par
00217                     lblFileLocation.setText({\cf22 "Process ID"});\par
00218                     btnEnterPid.setText({\cf22 "Enter File Location"});\par
00219                     btnSelectFile.setText({\cf22 "Select Process"});\par
00220                     btnEnterPid.setBounds(116, 105, 103, 25);\par
00221                     btnSelectFile.setBounds(223, 105, 86, 25);\par
00222                     \par
00223                 \}\par
00224                 {\cf19 else}\par
00225                 \{\par
00226                     setPidMode({\cf17 false});\par
00227                     lblFileLocation.setText({\cf22 "File Location"});\par
00228                     btnEnterPid.setText({\cf22 "Enter PID"});\par
00229                     btnSelectFile.setText({\cf22 "Select File"});\par
00230                     lblFileLocation.setBounds(161, 17, 67, 15);\par
00231                     btnSelectFile.setBounds(235, 105, 74, 25);\par
00232                     btnEnterPid.setBounds(162, 105, 67, 25);\par
00233                     \par
00234                 \}\par
00235             \}\par
00236         \});\par
00237         btnEnterPid.setBounds(162, 105, 67, 25);\par
00238         btnEnterPid.setText({\cf22 "Enter PID"});\par
00239 \par
00240     \}\par
00241     \par
00247     {\cf17 public} {\cf18 int} getX()\par
00248     \{\par
00249         {\cf19 return} x;\par
00250     \}\par
00251 \par
00257     {\cf17 public} {\cf18 void} setX({\cf18 int} x)\par
00258     \{\par
00259         this.x = x;\par
00260     \}\par
00261 \par
00267     {\cf17 public} {\cf18 int} getY()\par
00268     \{\par
00269         {\cf19 return} y;\par
00270     \}\par
00271 \par
00277     {\cf17 public} {\cf18 void} setY({\cf18 int} y)\par
00278     \{\par
00279         this.y = y;\par
00280     \}\par
00281     \par
00287     {\cf17 public} {\cf18 boolean} isPidMode()\par
00288     \{\par
00289         {\cf19 return} pidMode;\par
00290     \}\par
00291 \par
00297     {\cf17 public} {\cf18 void} setPidMode({\cf18 boolean} pidMode)\par
00298     \{\par
00299         this.pidMode = pidMode;\par
00300     \}\par
00301 \par
00307     {\cf17 public} String getText()\par
00308     \{\par
00309         {\cf19 return} filePath;\par
00310     \}\par
00311 \par
00317     {\cf17 public} {\cf18 int} getPid()\par
00318     \{\par
00319         {\cf19 return} pid;\par
00320     \}\par
00321 \par
00327     {\cf17 public} {\cf18 void} setPid({\cf18 int} pid)\par
00328     \{\par
00329         this.pid = pid;\par
00330     \}\par
00331     \par
00337     {\cf17 public} {\cf18 boolean} isDisposed()\par
00338     \{\par
00339         {\cf19 return} shell.isDisposed();\par
00340     \}\par
00341     \par
00345     {\cf17 public} {\cf18 void} focus()\par
00346     \{\par
00347         shell.forceFocus();\par
00348     \}\par
00349 \}\par
00350 \par
00351 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SelectProcess.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/SelectProcess.java}
{\xe \v src/dynamicAnalysis/SelectProcess.java}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.util.ArrayList;\par
00007 \par
00008 {\cf17 import} org.eclipse.swt.SWT;\par
00009 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00010 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00011 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00012 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00013 {\cf17 import} org.eclipse.swt.widgets.Event;\par
00014 {\cf17 import} org.eclipse.swt.widgets.Shell;\par
00015 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00016 {\cf17 import} org.eclipse.swt.widgets.TableColumn;\par
00017 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00018 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00019 {\cf17 import} org.eclipse.swt.widgets.Listener;\par
00020 {\cf17 import} org.eclipse.swt.events.KeyAdapter;\par
00021 {\cf17 import} org.eclipse.swt.events.KeyEvent;\par
00022 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00023 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00024 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00025 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00026 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00027 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00028 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00029 \par
00033 {\cf17 public} {\cf17 class }SelectProcess\par
00034 \{\par
00035 \par
00037     {\cf17 protected} Shell shell;\par
00038     \par
00040     {\cf17 private} Table table;\par
00041     \par
00043     {\cf17 private} String[] names;\par
00044     \par
00046     {\cf17 private} {\cf18 int}[] pids;\par
00047     \par
00049     {\cf17 private} String[] memory;\par
00050     \par
00052     {\cf17 private} {\cf18 int} pid;\par
00053     \par
00055     {\cf17 private} {\cf18 int} x;\par
00056     \par
00058     {\cf17 private} {\cf18 int} y;\par
00059     \par
00061     {\cf17 private} Text text;\par
00062     \par
00064     {\cf17 private} TableItem[] tableItems;\par
00065     \par
00076     {\cf17 public} SelectProcess(String[] names, {\cf18 int}[] pids, String[] memory, {\cf18 int} x, {\cf18 int} y)\par
00077     \{\par
00078         setNames(names);\par
00079         setPids(pids);\par
00080         setMemory(memory);\par
00081         setX(x);\par
00082         setY(y);\par
00083     \}\par
00084 \par
00088     {\cf17 public} {\cf18 void} open()\par
00089     \{\par
00090         \par
00091         Display display = Display.getDefault();\par
00092         createContents();\par
00093         shell.open();\par
00094         shell.layout();\par
00095         {\cf19 while} (!shell.isDisposed())\par
00096         \{\par
00097             {\cf19 if} (!display.readAndDispatch())\par
00098             \{\par
00099                 display.sleep();\par
00100             \}\par
00101         \}\par
00102     \}\par
00103     \par
00109     {\cf17 public} String[] getNames()\par
00110     \{\par
00111         {\cf19 return} names;\par
00112     \}\par
00113 \par
00119     {\cf17 public} {\cf18 void} setNames(String[] names)\par
00120     \{\par
00121         this.names = names;\par
00122     \}\par
00123 \par
00129     {\cf17 public} {\cf18 int}[] getPids()\par
00130     \{\par
00131         {\cf19 return} pids;\par
00132     \}\par
00133 \par
00139     {\cf17 public} {\cf18 void} setPids({\cf18 int}[] pids)\par
00140     \{\par
00141         this.pids = pids;\par
00142     \}\par
00143     \par
00149     {\cf17 public} {\cf18 int} getPid()\par
00150     \{\par
00151         {\cf19 return} pid;\par
00152     \}\par
00153 \par
00159     {\cf17 private} {\cf18 void} setPid({\cf18 int} pid)\par
00160     \{\par
00161         this.pid = pid;\par
00162     \}\par
00163     \par
00169     {\cf17 public} String[] getMemory()\par
00170     \{\par
00171         {\cf19 return} memory;\par
00172     \}\par
00173 \par
00179     {\cf17 public} {\cf18 void} setMemory(String[] memory)\par
00180     \{\par
00181         this.memory = memory;\par
00182     \}\par
00183 \par
00189     {\cf17 public} {\cf18 int} getX()\par
00190     \{\par
00191         {\cf19 return} x;\par
00192     \}\par
00193 \par
00199     {\cf17 public} {\cf18 void} setX({\cf18 int} x)\par
00200     \{\par
00201         this.x = x;\par
00202     \}\par
00203 \par
00209     {\cf17 public} {\cf18 int} getY()\par
00210     \{\par
00211         {\cf19 return} y;\par
00212     \}\par
00213 \par
00219     {\cf17 public} {\cf18 void} setY({\cf18 int} y)\par
00220     \{\par
00221         this.y = y;\par
00222     \}\par
00223 \par
00231     {\cf17 private} {\cf18 int}[] search(String[] names, String toSearch)\par
00232     \{\par
00233         ArrayList<Integer> arrayList = {\cf17 new} ArrayList<Integer>();\par
00234         {\cf19 for}({\cf18 int} index = 0; index < names.length; index++)\par
00235         \{\par
00236             {\cf19 if}(names[index].toLowerCase().contains(toSearch.toLowerCase()))\par
00237             \{\par
00238                 arrayList.add(index);\par
00239             \}\par
00240         \}\par
00241         {\cf19 return} arrayList.stream().mapToInt(i -> i).toArray();\par
00242     \}\par
00243     \par
00249     {\cf17 private} {\cf18 void} fullPopulate(Table table)\par
00250     \{\par
00251         table.setItemCount(0);\par
00252         tableItems = {\cf17 new} TableItem[names.length];\par
00253         {\cf19 for}({\cf18 int} index = 0;index < tableItems.length;index++)\par
00254         \{\par
00255             {\cf19 try}\par
00256             \{\par
00257                 tableItems[index] = {\cf17 new} TableItem(table, SWT.NULL);\par
00258                 tableItems[index].setText(0, getNames()[index]);\par
00259                 tableItems[index].setText(1, Integer.toString(getPids()[index]));\par
00260                 tableItems[index].setText(2, getMemory()[index]);\par
00261             \}\par
00262             {\cf19 catch}(IllegalArgumentException e)\par
00263             \{\par
00264                 e.printStackTrace();\par
00265                 {\cf19 continue};\par
00266             \}\par
00267         \}\par
00268     \}\par
00269     \par
00273     {\cf17 private} {\cf18 void} searchEvent()\par
00274     \{\par
00275         {\cf19 if}(text.getText()=={\cf22 ""})\par
00276         \{\par
00277             fullPopulate(table);\par
00278         \}\par
00279         {\cf19 else}\par
00280         \{\par
00281             {\cf18 int}[] indexes = search(getNames(), text.getText());\par
00282             table.setItemCount(0);\par
00283             {\cf19 for}({\cf18 int} index=0;index<indexes.length;index++)\par
00284             \{\par
00285                 tableItems[index] = {\cf17 new} TableItem(table, SWT.NULL);\par
00286                 tableItems[index].setText(0, getNames()[indexes[index]]);\par
00287                 tableItems[index].setText(1, Integer.toString(getPids()[indexes[index]]));\par
00288                 tableItems[index].setText(2, getMemory()[indexes[index]]);\par
00289             \}\par
00290         \}\par
00291     \}\par
00292     \par
00296     {\cf17 protected} {\cf18 void} createContents()\par
00297     \{\par
00298         {\cf19 try}\par
00299         \{\par
00300                         \par
00301             shell = {\cf17 new} Shell();\par
00302             shell.setSize(450, 300);\par
00303             shell.setText({\cf22 "Processes"});\par
00304             shell.setLocation(getX(), getY());\par
00305             shell.setLayout({\cf17 new} FormLayout());\par
00306             Button btnNewButton = {\cf17 new} Button(shell, SWT.NONE);\par
00307             FormData fd_btnNewButton = {\cf17 new} FormData();\par
00308             fd_btnNewButton.top = {\cf17 new} FormAttachment(0, 5);\par
00309             fd_btnNewButton.left = {\cf17 new} FormAttachment(0, 386);\par
00310             btnNewButton.setLayoutData(fd_btnNewButton);\par
00311             \par
00312             table = {\cf17 new} Table(shell, SWT.BORDER | SWT.FULL_SELECTION);\par
00313             FormData fd_table = {\cf17 new} FormData();\par
00314             fd_table.bottom = {\cf17 new} FormAttachment(0, 256);\par
00315             fd_table.right = {\cf17 new} FormAttachment(0, 429);\par
00316             fd_table.top = {\cf17 new} FormAttachment(0, 35);\par
00317             fd_table.left = {\cf17 new} FormAttachment(0, 5);\par
00318             table.setLayoutData(fd_table);\par
00319             table.setHeaderVisible({\cf17 true});\par
00320             table.setLinesVisible({\cf17 true});\par
00321             table.addListener(SWT.SELECTED, {\cf17 new} Listener() \{\par
00322                 {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00323                     btnNewButton.setEnabled({\cf17 true});\par
00324                 \}\par
00325             \});\par
00326             table.addListener(SWT.DefaultSelection, {\cf17 new} Listener() \{\par
00327                 {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00328                     setPid(Integer.parseInt(table.getSelection()[0].getText(1)));\par
00329                     shell.dispose();\par
00330                 \}\par
00331             \});\par
00332             \par
00333             {\cf18 int} width = 140;\par
00334             \par
00335             TableColumn tableNames = {\cf17 new} TableColumn(table, SWT.CENTER);\par
00336             tableNames.setWidth(width);\par
00337             tableNames.setText({\cf22 "Name"});\par
00338             \par
00339             TableColumn tablePids = {\cf17 new} TableColumn(table, SWT.CENTER);\par
00340             tablePids.setWidth(width);\par
00341             tablePids.setText({\cf22 "Process ID"});\par
00342             \par
00343             TableColumn tableMemory = {\cf17 new} TableColumn(table, SWT.CENTER);\par
00344             tableMemory.setWidth(width);\par
00345             tableMemory.setText({\cf22 "Memory"});\par
00346             \par
00347             fullPopulate(table);\par
00348             \par
00349             System.out.println({\cf22 "table items: "}+tableItems.length);\par
00350             \par
00351             btnNewButton.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00352                 @Override\par
00353                 {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00354                     \par
00355                 \}\par
00356             \});\par
00357             btnNewButton.setText({\cf22 "Select"});\par
00358             btnNewButton.setEnabled({\cf17 false});\par
00359             \par
00360             Button btnSearch = {\cf17 new} Button(shell, SWT.NONE);\par
00361             btnSearch.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00362                 @Override\par
00363                 {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00364                     searchEvent();\par
00365                 \}\par
00366             \});\par
00367             FormData fd_btnSearch = {\cf17 new} FormData();\par
00368             fd_btnSearch.top = {\cf17 new} FormAttachment(btnNewButton, 0, SWT.TOP);\par
00369             fd_btnSearch.right = {\cf17 new} FormAttachment(btnNewButton, -232);\par
00370             btnSearch.setLayoutData(fd_btnSearch);\par
00371             btnSearch.setText({\cf22 "Search"});\par
00372             \par
00373             Button button = {\cf17 new} Button(shell, SWT.NONE);\par
00374             button.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00375                 @Override\par
00376                 {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00377                     fullPopulate(table);\par
00378                     text.setText({\cf22 ""});\par
00379                 \}\par
00380             \});\par
00381             fd_btnSearch.left = {\cf17 new} FormAttachment(button, 6);\par
00382             button.setImage(SWTResourceManager.getImage(SelectProcess.class, {\cf22 "/icons/full/message_error.png"}));\par
00383             FormData fd_button = {\cf17 new} FormData();\par
00384             button.setLayoutData(fd_button);\par
00385             \par
00386             text = {\cf17 new} Text(shell, SWT.BORDER);\par
00387             FormData fd_text = {\cf17 new} FormData();\par
00388             fd_text.bottom = {\cf17 new} FormAttachment(btnNewButton, 0, SWT.BOTTOM);\par
00389             fd_text.top = {\cf17 new} FormAttachment(btnNewButton, 0, SWT.TOP);\par
00390             fd_text.right = {\cf17 new} FormAttachment(btnNewButton, -281);\par
00391             fd_text.left = {\cf17 new} FormAttachment(0, 5);\par
00392             text.setLayoutData(fd_text);\par
00393             fd_button.right = {\cf17 new} FormAttachment(text, 0, SWT.RIGHT);\par
00394             fd_button.bottom = {\cf17 new} FormAttachment(text, 0, SWT.BOTTOM);\par
00395             fd_button.left = {\cf17 new} FormAttachment(text, -20);\par
00396             text.addKeyListener({\cf17 new} KeyAdapter()\{\par
00397                 {\cf17 public} {\cf18 void} keyPressed(KeyEvent e)\{ \par
00398                     {\cf19 if}(e.keyCode == SWT.CR) \{\par
00399                         searchEvent();  \par
00400                     \}   \par
00401                 \}   \par
00402             \});\par
00403         \}\par
00404         {\cf19 catch}(Exception e)\par
00405         \{\par
00406             e.printStackTrace();\par
00407         \}\par
00408         \par
00409     \}\par
00410 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/test.java}
{\xe \v src/dynamicAnalysis/test.java}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.SWT;\par
00007 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00008 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00009 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00010 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00011 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00012 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00013 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00014 {\cf17 import} org.eclipse.swt.widgets.Shell;\par
00015 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00016 {\cf17 import} org.eclipse.wb.swt.SWTResourceManager;\par
00017 \par
00021 {\cf17 public} {\cf17 class }test\par
00022 \{\par
00023 \par
00025     {\cf17 protected} Shell shell;\par
00026     \par
00028     {\cf17 private} {\cf18 int} processId;\par
00029     \par
00031     {\cf17 private} Text text;\par
00032     \par
00034     {\cf17 private} Text txtLength;\par
00035 \par
00041     {\cf17 public} {\cf17 static} {\cf18 void} main(String[] args)\par
00042     \{\par
00043         {\cf19 try}\par
00044         \{\par
00045             test window = {\cf17 new} test();\par
00046             window.open();\par
00047         \} {\cf19 catch} (Exception e)\par
00048         \{\par
00049             e.printStackTrace();\par
00050         \}\par
00051     \}\par
00052 \par
00056     {\cf17 public} {\cf18 void} open()\par
00057     \{\par
00058         Display display = Display.getDefault();\par
00059         createContents();\par
00060         shell.open();\par
00061         shell.layout();\par
00062         {\cf19 while} (!shell.isDisposed())\par
00063         \{\par
00064             {\cf19 if} (!display.readAndDispatch())\par
00065             \{\par
00066                 display.sleep();\par
00067             \}\par
00068         \}\par
00069     \}\par
00070 \par
00074     {\cf17 protected} {\cf18 void} createContents()\par
00075     \{\par
00076         shell = {\cf17 new} Shell();\par
00077         shell.setSize(490, 342);\par
00078         shell.setLayout({\cf17 new} GridLayout(3, {\cf17 false}));\par
00079         \par
00080         Button btnUpdate = {\cf17 new} Button(shell, SWT.NONE);\par
00081         btnUpdate.setLayoutData({\cf17 new} GridData(SWT.LEFT, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1));\par
00082         btnUpdate.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00083             @Override\par
00084             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00085                 \par
00086             \}\par
00087         \});\par
00088         btnUpdate.setText({\cf22 "Update"});\par
00089         \par
00090         txtLength = {\cf17 new} Text(shell, SWT.BORDER);\par
00091         txtLength.setText({\cf22 "Length: "});\par
00092         txtLength.setLayoutData({\cf17 new} GridData(SWT.FILL, SWT.CENTER, {\cf17 false}, {\cf17 false}, 1, 1));\par
00093         {\cf17 new} Label(shell, SWT.NONE);\par
00094         \par
00095         text = {\cf17 new} Text(shell, SWT.BORDER | SWT.WRAP | SWT.V_SCROLL);\par
00096         text.setLayoutData({\cf17 new} GridData(SWT.FILL, SWT.CENTER, {\cf17 true}, {\cf17 false}, 1, 1));\par
00097         text.setFont(SWTResourceManager.getFont({\cf22 "Calibri"}, 9, SWT.NORMAL));\par
00098         text.setLayoutData({\cf17 new} GridData(SWT.FILL, SWT.FILL, {\cf17 true}, {\cf17 true}, 1, 1));\par
00099         {\cf17 new} Label(shell, SWT.NONE);\par
00100 \par
00101         {\cf17 new} Label(shell, SWT.NONE);\par
00102 \par
00103     \}\par
00104 \par
00105 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Version.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/Version.java}
{\xe \v src/dynamicAnalysis/Version.java}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00009 {\cf17 public} {\cf17 enum} Version \{\par
00010     \par
00012     x32({\cf17 false}),\par
00013     \par
00015     x64({\cf17 true});\par
00016     \par
00018     {\cf17 private} {\cf17 final} {\cf18 boolean} value;\par
00019 \par
00025     {\cf17 private} Version({\cf18 boolean} value) \{\par
00026         this.value = value;\par
00027     \}\par
00028 \par
00034     {\cf17 public} {\cf18 boolean} getValue() \{\par
00035         {\cf19 switch}(Boolean.hashCode(value)) \{\par
00036         {\cf19 case} 1: {\cf19 return} {\cf17 true};\par
00037         {\cf19 case} 0: {\cf19 return} {\cf17 false};\par
00038         \}\par
00039         {\cf19 return} value;\par
00040     \}\par
00041     \par
00042 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VirtualMemory.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/VirtualMemory.java}
{\xe \v src/dynamicAnalysis/VirtualMemory.java}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} java.io.File;\par
00007 \par
00011 {\cf17 public} {\cf17 class }VirtualMemory\par
00012 \{\par
00013     \par
00015     {\cf17 private} {\cf18 int} processId;\par
00016 \par
00017     {\cf17 static} \{System.load(getFile({\cf22 "memory.dll"}));\}\par
00018     \par
00025     {\cf17 private} native {\cf18 byte}[] scanProcess({\cf18 int} processId);\par
00026     \par
00032     {\cf17 public} VirtualMemory({\cf18 int} processId)\par
00033     \{\par
00034         setProcessId(processId);\par
00035     \}\par
00036 \par
00042     {\cf17 public} {\cf18 int} getProcessId()\par
00043     \{\par
00044         {\cf19 return} processId;\par
00045     \}\par
00046 \par
00052     {\cf17 public} {\cf18 void} setProcessId({\cf18 int} processId)\par
00053     \{\par
00054         this.processId = processId;\par
00055     \}\par
00056     \par
00063     {\cf17 private} {\cf17 static} String getFile(String fileName)\par
00064     \{\par
00065         {\cf20 /*File file = new File(".\\\\"+fileName);}\par
00066 {\cf20         return file.getAbsolutePath();*/} {\cf20 //JAR release}\par
00067         {\cf19 return} System.getProperty({\cf22 "user.dir"})+{\cf22 "\\\\src\\\\dynamicAnalysis\\\\"}+fileName;\par
00068     \}\par
00069     \par
00075     {\cf17 public} {\cf18 byte}[] readMemory()\par
00076     \{\par
00077         VirtualMemory virtualMemory = {\cf17 new} VirtualMemory(getProcessId());\par
00078         {\cf19 return} virtualMemory.scanProcess(getProcessId());\par
00079     \}\par
00080 \}\par
00081 \par
00082 {\cf20 //javac -h . VirtualMemory.java}\par
00083 {\cf20 //g++ -I I:/jre/jre6/include -I I:/jre/jre6/include/win32 -shared -o memory.dll VirtualMemory.cpp}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Window.java\par \pard\plain 
{\tc\tcl2 \v src/dynamicAnalysis/Window.java}
{\xe \v src/dynamicAnalysis/Window.java}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * }\par
00003 {\cf20  */}\par
00004 {\cf17 package }dynamicAnalysis;\par
00005 \par
00006 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00007 {\cf17 import} org.eclipse.swt.widgets.Event;\par
00008 {\cf17 import} org.eclipse.swt.widgets.Shell;\par
00009 {\cf17 import} org.eclipse.swt.layout.GridLayout;\par
00010 {\cf17 import} org.eclipse.swt.widgets.Text;\par
00011 {\cf17 import} org.pcap4j.core.PcapNativeException;\par
00012 \par
00013 {\cf17 import} java.awt.Dimension;\par
00014 {\cf17 import} java.awt.Toolkit;\par
00015 {\cf17 import} java.io.File;\par
00016 \par
00017 {\cf17 import} org.eclipse.swt.SWT;\par
00018 {\cf17 import} org.eclipse.swt.widgets.Label;\par
00019 {\cf17 import} org.eclipse.swt.widgets.Listener;\par
00020 {\cf17 import} org.eclipse.swt.layout.GridData;\par
00021 {\cf17 import} org.eclipse.swt.widgets.Button;\par
00022 {\cf17 import} org.eclipse.swt.widgets.Table;\par
00023 {\cf17 import} org.eclipse.swt.widgets.Composite;\par
00024 {\cf17 import} org.eclipse.swt.widgets.Control;\par
00025 {\cf17 import} org.eclipse.swt.layout.FormLayout;\par
00026 {\cf17 import} org.eclipse.swt.layout.FormData;\par
00027 {\cf17 import} org.eclipse.swt.layout.FormAttachment;\par
00028 {\cf17 import} org.eclipse.swt.events.ModifyEvent;\par
00029 {\cf17 import} org.eclipse.swt.events.ModifyListener;\par
00030 {\cf17 import} org.eclipse.swt.events.SelectionAdapter;\par
00031 {\cf17 import} org.eclipse.swt.events.SelectionEvent;\par
00032 {\cf17 import} org.eclipse.swt.graphics.Color;\par
00033 {\cf17 import} org.eclipse.swt.graphics.Rectangle;\par
00034 {\cf17 import} org.eclipse.swt.custom.StyledText;\par
00035 {\cf17 import} org.eclipse.swt.widgets.TableColumn;\par
00036 {\cf17 import} org.eclipse.swt.widgets.TableItem;\par
00037 {\cf17 import} org.eclipse.swt.widgets.Menu;\par
00038 {\cf17 import} org.eclipse.swt.widgets.MenuItem;\par
00039 {\cf17 import} org.eclipse.swt.widgets.MessageBox;\par
00040 {\cf17 import} org.eclipse.swt.widgets.Group;\par
00041 {\cf17 import} org.eclipse.swt.widgets.TabFolder;\par
00042 {\cf17 import} org.eclipse.swt.widgets.TabItem;\par
00043 {\cf17 import} org.eclipse.swt.custom.CTabFolder;\par
00044 {\cf17 import} org.eclipse.swt.custom.CTabItem;\par
00045 \par
00049 {\cf17 public} {\cf17 class }Window\par
00050 \{\par
00051 \par
00053     {\cf17 protected} Shell shell;\par
00054     \par
00056     {\cf17 private} Label text;\par
00057     \par
00059     {\cf17 private} Table table;\par
00060     \par
00062     {\cf17 private} String filePath;\par
00063     \par
00065     {\cf17 private} SelectFile selectFile;\par
00066     \par
00068     {\cf17 public} {\cf17 static} {\cf18 int} processId;\par
00069     \par
00071     {\cf17 private} Display display;\par
00072     \par
00074     {\cf17 private} ProcessManager process;\par
00075     \par
00081     {\cf17 public} {\cf17 static} {\cf18 void} main(String[] args)\par
00082     \{\par
00083         Window window = {\cf17 null};\par
00084         {\cf19 try}\par
00085         \{\par
00086             window = {\cf17 new} Window();\par
00087             window.open();\par
00088         \} {\cf19 catch} (Exception e)\par
00089         \{\par
00090             e.printStackTrace();\par
00091         \}\par
00092         {\cf19 if}(window.process!={\cf17 null}) window.process.destroyProcess();\par
00093     \}\par
00094 \par
00098     {\cf17 public} {\cf18 void} open()\par
00099     \{\par
00100         display = Display.getDefault();\par
00101         createContents();\par
00102         shell.open();\par
00103         shell.layout();\par
00104         {\cf19 while} (!shell.isDisposed())\par
00105         \{\par
00106             {\cf19 if} (!display.readAndDispatch())\par
00107             \{\par
00108                 display.sleep();\par
00109             \}\par
00110         \}\par
00111         \par
00112     \}\par
00113     \par
00119     {\cf17 private} {\cf18 void} errorAlert(String message)\par
00120     \{\par
00121         MessageBox messageBox = {\cf17 new} MessageBox(shell, SWT.ERROR);                       \par
00122         messageBox.setText({\cf22 "Error"});\par
00123         messageBox.setMessage(message);\par
00124         messageBox.open();\par
00125     \}\par
00126     \par
00130     {\cf17 protected} {\cf18 void} createContents()\par
00131     \{\par
00132         shell = {\cf17 new} Shell();\par
00133         shell.setSize(491, 573);\par
00134         shell.setText({\cf22 "Dynamic Malware Analyzer"});\par
00135         shell.setLayout({\cf17 new} FormLayout());\par
00136         shell.setMinimumSize(491, 573);\par
00137         \par
00138         Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();\par
00139         shell.setLocation((dim.width/2)-200,(dim.height/2)-250);\par
00140         \par
00141         Button btnProcess = {\cf17 new} Button(shell, SWT.CHECK);\par
00142         \par
00143         text = {\cf17 new} Label(shell, SWT.BORDER);\par
00144         \par
00145         Button btnLaunch = {\cf17 new} Button(shell, SWT.NONE);\par
00146         \par
00147         TableItem tableItems[] = {\cf17 new} TableItem[4];\par
00148         \par
00149         FormData fd_text = {\cf17 new} FormData();\par
00150         fd_text.top = {\cf17 new} FormAttachment(0, 11);\par
00151         text.setLayoutData(fd_text);\par
00152         \par
00153         \par
00154         Button btnInstructions = {\cf17 new} Button(shell, SWT.NONE);\par
00155         btnInstructions.setEnabled({\cf17 false});\par
00156         \par
00157         FormData fd_btnInstructions = {\cf17 new} FormData();\par
00158         btnInstructions.setLayoutData(fd_btnInstructions);\par
00159         btnInstructions.setText({\cf22 "x86 Instructions"});\par
00160         \par
00161         Button btnMemory = {\cf17 new} Button(shell, SWT.NONE);\par
00162         fd_btnInstructions.bottom = {\cf17 new} FormAttachment(btnMemory, -6);\par
00163         btnMemory.setEnabled({\cf17 false});\par
00164         \par
00165         btnMemory.setText({\cf22 "Virtual Memory"});\par
00166         FormData fd_btnMemory = {\cf17 new} FormData();\par
00167         fd_btnInstructions.bottom = {\cf17 new} FormAttachment(btnMemory, -6);\par
00168         \par
00169         btnMemory.setLayoutData(fd_btnMemory);\par
00170         \par
00171         Button btnFiles = {\cf17 new} Button(shell, SWT.NONE);\par
00172         fd_btnMemory.bottom = {\cf17 new} FormAttachment(btnFiles, -6);\par
00173         btnFiles.setEnabled({\cf17 false});\par
00174         btnFiles.setText({\cf22 "Files"});\par
00175         FormData fd_btnFiles = {\cf17 new} FormData();\par
00176         fd_btnFiles.bottom = {\cf17 new} FormAttachment(0, 178);\par
00177         fd_btnFiles.top = {\cf17 new} FormAttachment(0, 152);\par
00178         \par
00179         btnFiles.setLayoutData(fd_btnFiles);        \par
00180         table = {\cf17 new} Table(shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.NO_SCROLL);\par
00181         fd_btnFiles.right = {\cf17 new} FormAttachment(table, 101, SWT.RIGHT);\par
00182         fd_btnMemory.right = {\cf17 new} FormAttachment(table, 101, SWT.RIGHT);\par
00183         fd_btnInstructions.right = {\cf17 new} FormAttachment(table, 101, SWT.RIGHT);\par
00184         fd_btnInstructions.left = {\cf17 new} FormAttachment(table, 6);\par
00185         fd_btnMemory.left = {\cf17 new} FormAttachment(table, 6);\par
00186         fd_btnFiles.left = {\cf17 new} FormAttachment(table, 6);\par
00187         fd_btnMemory.left = {\cf17 new} FormAttachment(table, 6);\par
00188         FormData fd_table = {\cf17 new} FormData();\par
00189         fd_table.bottom = {\cf17 new} FormAttachment(0, 177);\par
00190         fd_table.top = {\cf17 new} FormAttachment(0, 90);\par
00191         fd_table.right = {\cf17 new} FormAttachment(0, 331);\par
00192         table.setLayoutData(fd_table);\par
00193         table.setHeaderVisible({\cf17 false});\par
00194         table.setLinesVisible({\cf17 true});\par
00195         \par
00196         Button btnSelect = {\cf17 new} Button(shell, SWT.NONE);\par
00197         btnSelect.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00198             @Override\par
00199             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00200                 System.out.println({\cf22 "selection: "}+btnProcess.getSelection());\par
00201                 selectFile = {\cf17 new} SelectFile(shell.getLocation().x, shell.getLocation().y, btnProcess.getSelection());\par
00202                 filePath = selectFile.getText();    \par
00203                 {\cf19 if}(!selectFile.isPidMode())\par
00204                 \{\par
00205                     {\cf19 try}\par
00206                     \{\par
00207                         text.setText(filePath);\par
00208                         btnLaunch.setEnabled({\cf17 true});\par
00209                     \}\par
00210                     {\cf19 catch}(IllegalArgumentException e1) \par
00211                     \{\par
00212                         btnLaunch.setEnabled({\cf17 false});\par
00213                     \}\par
00214                 \}\par
00215                 {\cf19 else}\par
00216                 \{\par
00217                     {\cf19 try}\par
00218                     \{\par
00219                         text.setText(Integer.toString(selectFile.getPid()));\par
00220                         btnLaunch.setEnabled({\cf17 true});\par
00221                     \}\par
00222                     {\cf19 catch}(IllegalArgumentException e1) \par
00223                     \{\par
00224                         btnLaunch.setEnabled({\cf17 false});\par
00225                     \}\par
00226                 \}\par
00227             \}\par
00228         \});\par
00229         btnSelect.setText({\cf22 "Select File"});\par
00230         FormData fd_btnSelect = {\cf17 new} FormData();\par
00231         fd_btnSelect.right = {\cf17 new} FormAttachment(btnInstructions, 0, SWT.RIGHT);\par
00232         fd_btnSelect.bottom = {\cf17 new} FormAttachment(btnInstructions, -58);\par
00233         fd_btnSelect.left = {\cf17 new} FormAttachment(text, 5, SWT.RIGHT);\par
00234         btnSelect.setLayoutData(fd_btnSelect);\par
00235         \par
00236         Label lblFilePath = {\cf17 new} Label(shell, SWT.NONE);\par
00237         fd_text.right = {\cf17 new} FormAttachment(table, 0, SWT.RIGHT);\par
00238         fd_text.left = {\cf17 new} FormAttachment(lblFilePath, 13);\par
00239         lblFilePath.setAlignment(SWT.RIGHT);\par
00240         fd_table.left = {\cf17 new} FormAttachment(0, 26);\par
00241         FormData fd_lblFilePath = {\cf17 new} FormData();\par
00242         fd_lblFilePath.right = {\cf17 new} FormAttachment(0, 79);\par
00243         fd_lblFilePath.left = {\cf17 new} FormAttachment(0, 26);\par
00244         fd_lblFilePath.top = {\cf17 new} FormAttachment(0, 11);\par
00245         lblFilePath.setLayoutData(fd_lblFilePath);\par
00246         lblFilePath.setText({\cf22 "File Path"});\par
00247         \par
00248         TableColumn labels = {\cf17 new} TableColumn(table, SWT.NONE);\par
00249         labels.setWidth(100);\par
00250         \par
00251         TableColumn values = {\cf17 new} TableColumn(table, SWT.CENTER | SWT.V_SCROLL);\par
00252         values.setWidth(200);\par
00253 \par
00254         \par
00255         {\cf19 for}({\cf18 int} index = 0;index<tableItems.length;index++)\par
00256         \{\par
00257             tableItems[index] = {\cf17 new} TableItem(table, SWT.NONE);\par
00258         \}\par
00259         \par
00260         tableItems[0].setText(0, {\cf22 "Directory"});\par
00261         tableItems[1].setText(0, {\cf22 "Version"});\par
00262         tableItems[2].setText(0, {\cf22 "Name"});       \par
00263         tableItems[3].setText(0, {\cf22 "PID"});\par
00264         Menu menu = {\cf17 new} Menu(shell, SWT.BAR);\par
00265         shell.setMenuBar(menu);\par
00266         \par
00267         MenuItem mntmFile = {\cf17 new} MenuItem(menu, SWT.CASCADE);\par
00268         mntmFile.setText({\cf22 "File"});\par
00269         \par
00270         Menu menu_1 = {\cf17 new} Menu(mntmFile);\par
00271         mntmFile.setMenu(menu_1);\par
00272         \par
00273         MenuItem mntmOpen = {\cf17 new} MenuItem(menu_1, SWT.NONE);\par
00274         mntmOpen.setText({\cf22 "Open"});\par
00275         \par
00276         mntmOpen.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00277             {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00278                 selectFile = {\cf17 new} SelectFile(shell.getLocation().x, shell.getLocation().y, btnProcess.getSelection());\par
00279                 filePath = selectFile.getText();\par
00280                 {\cf19 try}\par
00281                 \{\par
00282                     text.setText(filePath);\par
00283                     btnLaunch.setEnabled({\cf17 true});\par
00284                 \}\par
00285                 {\cf19 catch}(IllegalArgumentException e1) \par
00286                 \{\par
00287                     btnLaunch.setEnabled({\cf17 false});\par
00288                 \}\par
00289             \}\par
00290         \});\par
00291         \par
00292         MenuItem mntmProcess = {\cf17 new} MenuItem(menu, SWT.CASCADE);\par
00293         mntmProcess.setText({\cf22 "Process"});\par
00294         \par
00295         Menu menu_2 = {\cf17 new} Menu(mntmProcess);\par
00296         mntmProcess.setMenu(menu_2);\par
00297         \par
00298         MenuItem mntmDestroyProcess = {\cf17 new} MenuItem(menu_2, SWT.NONE);\par
00299         mntmDestroyProcess.setText({\cf22 "Destroy Process"});\par
00300         \par
00301         MenuItem mntmNetwork = {\cf17 new} MenuItem(menu, SWT.NONE);\par
00302         mntmNetwork.setText({\cf22 "Network"});\par
00303         \par
00304         mntmDestroyProcess.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00305             {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00306                 {\cf19 if}(process!={\cf17 null}) process.destroyProcess();\par
00307             \}\par
00308         \});\par
00309         btnProcess.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00310             @Override\par
00311             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00312                 text.setText({\cf22 ""});\par
00313                 btnLaunch.setEnabled({\cf17 false});\par
00314                 {\cf19 if} (btnProcess.getSelection())\par
00315                 \{\par
00316                     lblFilePath.setText({\cf22 "Process ID"});\par
00317                     btnSelect.setText({\cf22 "Select Process"});\par
00318                 \}\par
00319                 {\cf19 else}\par
00320                 \{\par
00321                     lblFilePath.setText({\cf22 "File Path"});\par
00322                     btnSelect.setText({\cf22 "Select File"});\par
00323                 \}\par
00324             \}\par
00325         \});\par
00326         FormData fd_btnProcess = {\cf17 new} FormData();\par
00327         fd_btnProcess.right = {\cf17 new} FormAttachment(btnLaunch, 130);\par
00328         fd_btnProcess.left = {\cf17 new} FormAttachment(btnLaunch, 10);\par
00329         fd_btnProcess.top = {\cf17 new} FormAttachment(btnSelect, 6);\par
00330         btnProcess.setLayoutData(fd_btnProcess);\par
00331         btnProcess.setText({\cf22 "Process"});\par
00332         btnLaunch.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00333             @Override\par
00334             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00335                 tableItems[0].setText(1, {\cf22 ""});\par
00336                 tableItems[1].setText(1, {\cf22 ""});\par
00337                 tableItems[2].setText(1, {\cf22 ""});       \par
00338                 tableItems[3].setText(1, {\cf22 ""});\par
00339                 btnMemory.setEnabled({\cf17 true});\par
00340                 btnFiles.setEnabled({\cf17 true});\par
00341                 tableItems[0].setGrayed(btnProcess.getSelection());\par
00342                 tableItems[1].setGrayed(btnProcess.getSelection());\par
00343                 btnInstructions.setEnabled(!btnProcess.getSelection());\par
00344                 {\cf19 if}(!btnProcess.getSelection())\par
00345                 \{\par
00346                     String filePath = text.getText();\par
00347                     {\cf19 try}\par
00348                     \{\par
00349                         process = {\cf17 new} ProcessManager({\cf17 new} File(filePath));\par
00350                         CodeExtract codeExtract = {\cf17 new} CodeExtract({\cf17 new} File(filePath));              \par
00351                         tableItems[0].setText(1, filePath);\par
00352                         {\cf19 if}(codeExtract.getPeFile().getVersion() == Version.x32)\par
00353                         \{\par
00354                             tableItems[1].setText(1, {\cf22 "32-bit"});\par
00355                         \}\par
00356                         {\cf19 else}\par
00357                         \{\par
00358                             tableItems[1].setText(1, {\cf22 "64-bit"});\par
00359                         \}  \par
00360                         tableItems[2].setText(1, process.getName());\par
00361                         tableItems[3].setText(1, process.getPidAsString());\par
00362                         System.out.println({\cf22 "version: "}+codeExtract.getPeFile().getVersion());\par
00363                     \}\par
00364                     {\cf19 catch}(NullPointerException e1)\par
00365                     \{\par
00366                         e1.printStackTrace();\par
00367                         errorAlert({\cf22 "Admin privileges are required to run the process."});\par
00368                     \}\par
00369                     {\cf19 catch}(ArrayIndexOutOfBoundsException e1)\par
00370                     \{\par
00371                         e1.printStackTrace();\par
00372                         errorAlert({\cf22 "Could not open the selected process."});\par
00373                     \}\par
00374                 \}\par
00375                 {\cf19 else}\par
00376                 \{\par
00377                     ProcessManager process = {\cf17 new} ProcessManager(Integer.parseInt(text.getText()));\par
00378                     tableItems[2].setText(1, process.getName());\par
00379                     tableItems[3].setText(1, Integer.toString(selectFile.getPid()));\par
00380                 \}\par
00381             \}\par
00382         \});\par
00383         FormData fd_btnLaunch = {\cf17 new} FormData();\par
00384         fd_btnLaunch.top = {\cf17 new} FormAttachment(btnProcess, -4, SWT.TOP);\par
00385         fd_btnLaunch.right = {\cf17 new} FormAttachment(lblFilePath, 66, SWT.RIGHT);\par
00386         fd_btnLaunch.left = {\cf17 new} FormAttachment(text, 0, SWT.LEFT);\par
00387         btnLaunch.setLayoutData(fd_btnLaunch);\par
00388         btnLaunch.setText({\cf22 "Launch"});\par
00389         btnLaunch.setEnabled({\cf17 false});\par
00390         \par
00391         CTabFolder tabFolder = {\cf17 new} CTabFolder(shell, SWT.BORDER);\par
00392         FormData fd_tabFolder = {\cf17 new} FormData();\par
00393         fd_tabFolder.right = {\cf17 new} FormAttachment(100, -45);\par
00394         fd_tabFolder.top = {\cf17 new} FormAttachment(table, 30);\par
00395         fd_tabFolder.bottom = {\cf17 new} FormAttachment(100, -23);\par
00396         fd_tabFolder.left = {\cf17 new} FormAttachment(table, 0, SWT.LEFT);\par
00397         tabFolder.setLayoutData(fd_tabFolder);\par
00398         tabFolder.setSelectionBackground(Display.getCurrent().getSystemColor(SWT.COLOR_TITLE_INACTIVE_BACKGROUND_GRADIENT));\par
00399 \par
00400         \par
00401         btnMemory.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00402             @Override\par
00403             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00404                 CTabItem tbtmMemory = {\cf17 new} CTabItem(tabFolder, SWT.CLOSE);\par
00405                 tbtmMemory.setText({\cf22 "Memory"});\par
00406                 processId = Integer.parseInt(tableItems[3].getText(1));\par
00407                 Color red = display.getSystemColor(SWT.COLOR_RED);\par
00408                 MemoryComposite memoryComposite = {\cf17 new} MemoryComposite(tabFolder, SWT.NULL, red);\par
00409                 memoryComposite.layout();\par
00410                 memoryComposite.setFocus();\par
00411                 System.out.println(memoryComposite.getProcessId());\par
00412                 tbtmMemory.setControl(memoryComposite);\par
00413                 tabFolder.setSelection(tbtmMemory);\par
00414             \}\par
00415         \});\par
00416         \par
00417         btnFiles.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00418             @Override\par
00419             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00420                 CTabItem tbtmAdvanced = {\cf17 new} CTabItem(tabFolder, SWT.CLOSE);\par
00421                 tbtmAdvanced.setText({\cf22 "Advanced"});\par
00422                 processId = Integer.parseInt(tableItems[3].getText(1));\par
00423                 FilesComposite filesComposite = {\cf17 new} FilesComposite(tabFolder, SWT.NULL);\par
00424                 filesComposite.layout();\par
00425                 tbtmAdvanced.setControl(filesComposite);\par
00426                 tabFolder.setSelection(tbtmAdvanced);\par
00427             \}\par
00428         \});\par
00429         \par
00430         btnInstructions.addSelectionListener({\cf17 new} SelectionAdapter() \{\par
00431             @Override\par
00432             {\cf17 public} {\cf18 void} widgetSelected(SelectionEvent e) \{\par
00433                 CTabItem tbtmInstructions = {\cf17 new} CTabItem(tabFolder, SWT.CLOSE);\par
00434                 tbtmInstructions.setText({\cf22 "Instructions"});\par
00435                 InstructionsComposite instructionsComposite = {\cf17 new} InstructionsComposite(tabFolder, SWT.NULL, {\cf17 new} File(filePath));\par
00436                 instructionsComposite.layout();\par
00437                 tbtmInstructions.setControl(instructionsComposite);\par
00438                 tabFolder.setSelection(tbtmInstructions);\par
00439             \}\par
00440         \});\par
00441         \par
00442         mntmNetwork.addListener(SWT.Selection, {\cf17 new} Listener() \{\par
00443             {\cf17 public} {\cf18 void} handleEvent(Event e) \{\par
00444                 CTabItem tbtmNetwork = {\cf17 new} CTabItem(tabFolder, SWT.CLOSE);\par
00445                 {\cf19 try}\par
00446                 \{\par
00447                     processId = Integer.parseInt(tableItems[3].getText(1));\par
00448                 \} {\cf19 catch}(NumberFormatException e1)\par
00449                 \{\par
00450                     processId = 0;\par
00451                 \}\par
00452                 \par
00453                 tbtmNetwork.setText({\cf22 "Network"});\par
00454                 {\cf19 try}\par
00455                 \{\par
00456                     NetworkComposite networkComposite = {\cf17 new} NetworkComposite(tabFolder, SWT.NULL, processId);\par
00457                     tbtmNetwork.setControl(networkComposite);\par
00458                     tabFolder.setSelection(tbtmNetwork);\par
00459                 \} {\cf19 catch} (PcapNativeException e1)\par
00460                 \{\par
00461                     {\cf20 // TODO Auto-generated catch block}\par
00462                     e1.printStackTrace();\par
00463                 \}\par
00464             \}\par
00465         \});\par
00466         \par
00467         shell.addListener (SWT.Resize,  {\cf17 new} Listener () \{\par
00468             {\cf17 public} {\cf18 void} handleEvent (Event e) \{\par
00469                 Control[] composites = tabFolder.getChildren();\par
00470                 {\cf19 for}({\cf18 int} index = 0; index < composites.length; index++)\par
00471                 \{\par
00472                     composites[index].requestLayout();\par
00473                     System.out.println({\cf22 "modified "}+index);\par
00474                 \}\par
00475             \}\par
00476           \});\par
00477     \}\par
00478 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SWTResourceManager.java\par \pard\plain 
{\tc\tcl2 \v src/org/eclipse/wb/swt/SWTResourceManager.java}
{\xe \v src/org/eclipse/wb/swt/SWTResourceManager.java}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*******************************************************************************}\par
00002 {\cf20  * Copyright (c) 2011 Google, Inc.}\par
00003 {\cf20  * All rights reserved. This program and the accompanying materials}\par
00004 {\cf20  * are made available under the terms of the Eclipse Public License v1.0}\par
00005 {\cf20  * which accompanies this distribution, and is available at}\par
00006 {\cf20  * http://www.eclipse.org/legal/epl-v10.html}\par
00007 {\cf20  *}\par
00008 {\cf20  * Contributors:}\par
00009 {\cf20  *    Google, Inc. - initial API and implementation}\par
00010 {\cf20  *******************************************************************************/}\par
00011 {\cf17 package }org.eclipse.wb.swt;\par
00012 \par
00013 {\cf17 import} java.io.FileInputStream;\par
00014 {\cf17 import} java.io.IOException;\par
00015 {\cf17 import} java.io.InputStream;\par
00016 {\cf17 import} java.util.HashMap;\par
00017 {\cf17 import} java.util.Map;\par
00018 \par
00019 {\cf17 import} org.eclipse.swt.SWT;\par
00020 {\cf17 import} org.eclipse.swt.graphics.Color;\par
00021 {\cf17 import} org.eclipse.swt.graphics.Cursor;\par
00022 {\cf17 import} org.eclipse.swt.graphics.Font;\par
00023 {\cf17 import} org.eclipse.swt.graphics.FontData;\par
00024 {\cf17 import} org.eclipse.swt.graphics.GC;\par
00025 {\cf17 import} org.eclipse.swt.graphics.Image;\par
00026 {\cf17 import} org.eclipse.swt.graphics.ImageData;\par
00027 {\cf17 import} org.eclipse.swt.graphics.RGB;\par
00028 {\cf17 import} org.eclipse.swt.graphics.Rectangle;\par
00029 {\cf17 import} org.eclipse.swt.widgets.Display;\par
00030 \par
00043 {\cf17 public} {\cf17 class }SWTResourceManager \{\par
00045     {\cf20 //}\par
00046     {\cf20 // Color}\par
00047     {\cf20 //}\par
00049 {\cf20 }    {\cf17 private} {\cf17 static} Map<RGB, Color> m_colorMap = {\cf17 new} HashMap<RGB, Color>();\par
00057     {\cf17 public} {\cf17 static} Color getColor({\cf18 int} systemColorID) \{\par
00058         Display display = Display.getCurrent();\par
00059         {\cf19 return} display.getSystemColor(systemColorID);\par
00060     \}\par
00072     {\cf17 public} {\cf17 static} Color getColor({\cf18 int} r, {\cf18 int} g, {\cf18 int} b) \{\par
00073         {\cf19 return} getColor({\cf17 new} RGB(r, g, b));\par
00074     \}\par
00082     {\cf17 public} {\cf17 static} Color getColor(RGB rgb) \{\par
00083         Color color = m_colorMap.get(rgb);\par
00084         {\cf19 if} (color == {\cf17 null}) \{\par
00085             Display display = Display.getCurrent();\par
00086             color = {\cf17 new} Color(display, rgb);\par
00087             m_colorMap.put(rgb, color);\par
00088         \}\par
00089         {\cf19 return} color;\par
00090     \}\par
00094     {\cf17 public} {\cf17 static} {\cf18 void} disposeColors() \{\par
00095         {\cf19 for} (Color color : m_colorMap.values()) \{\par
00096             color.dispose();\par
00097         \}\par
00098         m_colorMap.clear();\par
00099     \}\par
00101     {\cf20 //}\par
00102     {\cf20 // Image}\par
00103     {\cf20 //}\par
00105 {\cf20 }\par
00108     {\cf17 private} {\cf17 static} Map<String, Image> m_imageMap = {\cf17 new} HashMap<String, Image>();\par
00116     {\cf17 protected} {\cf17 static} Image getImage(InputStream stream) {\cf19 throws} IOException \{\par
00117         {\cf19 try} \{\par
00118             Display display = Display.getCurrent();\par
00119             ImageData data = {\cf17 new} ImageData(stream);\par
00120             {\cf19 if} (data.transparentPixel > 0) \{\par
00121                 {\cf19 return} {\cf17 new} Image(display, data, data.getTransparencyMask());\par
00122             \}\par
00123             {\cf19 return} {\cf17 new} Image(display, data);\par
00124         \} {\cf19 finally} \{\par
00125             stream.close();\par
00126         \}\par
00127     \}\par
00135     {\cf17 public} {\cf17 static} Image getImage(String path) \{\par
00136         Image image = m_imageMap.get(path);\par
00137         {\cf19 if} (image == {\cf17 null}) \{\par
00138             {\cf19 try} \{\par
00139                 image = getImage({\cf17 new} FileInputStream(path));\par
00140                 m_imageMap.put(path, image);\par
00141             \} {\cf19 catch} (Exception e) \{\par
00142                 image = getMissingImage();\par
00143                 m_imageMap.put(path, image);\par
00144             \}\par
00145         \}\par
00146         {\cf19 return} image;\par
00147     \}\par
00157     {\cf17 public} {\cf17 static} Image getImage(Class<?> clazz, String path) \{\par
00158         String key = clazz.getName() + {\cf23 '|'} + path;\par
00159         Image image = m_imageMap.get(key);\par
00160         {\cf19 if} (image == {\cf17 null}) \{\par
00161             {\cf19 try} \{\par
00162                 image = getImage(clazz.getResourceAsStream(path));\par
00163                 m_imageMap.put(key, image);\par
00164             \} {\cf19 catch} (Exception e) \{\par
00165                 image = getMissingImage();\par
00166                 m_imageMap.put(key, image);\par
00167             \}\par
00168         \}\par
00169         {\cf19 return} image;\par
00170     \}\par
00171     {\cf17 private} {\cf17 static} {\cf17 final} {\cf18 int} MISSING_IMAGE_SIZE = 10;\par
00175     {\cf17 private} {\cf17 static} Image getMissingImage() \{\par
00176         Image image = {\cf17 new} Image(Display.getCurrent(), MISSING_IMAGE_SIZE, MISSING_IMAGE_SIZE);\par
00177         {\cf20 //}\par
00178         GC gc = {\cf17 new} GC(image);\par
00179         gc.setBackground(getColor(SWT.COLOR_RED));\par
00180         gc.fillRectangle(0, 0, MISSING_IMAGE_SIZE, MISSING_IMAGE_SIZE);\par
00181         gc.dispose();\par
00182         {\cf20 //}\par
00183         {\cf19 return} image;\par
00184     \}\par
00188     {\cf17 public} {\cf17 static} {\cf17 final} {\cf18 int} TOP_LEFT = 1;\par
00192     {\cf17 public} {\cf17 static} {\cf17 final} {\cf18 int} TOP_RIGHT = 2;\par
00196     {\cf17 public} {\cf17 static} {\cf17 final} {\cf18 int} BOTTOM_LEFT = 3;\par
00200     {\cf17 public} {\cf17 static} {\cf17 final} {\cf18 int} BOTTOM_RIGHT = 4;\par
00204     {\cf17 protected} {\cf17 static} {\cf17 final} {\cf18 int} LAST_CORNER_KEY = 5;\par
00208     @SuppressWarnings({\cf22 "unchecked"})\par
00209     private static Map<Image, Map<Image, Image>>[] m_decoratedImageMap = new Map[LAST_CORNER_KEY];\par
00219     public static Image decorateImage(Image baseImage, Image decorator) \{\par
00220         {\cf19 return} decorateImage(baseImage, decorator, BOTTOM_RIGHT);\par
00221     \}\par
00233     {\cf17 public} {\cf17 static} Image decorateImage({\cf17 final} Image baseImage, {\cf17 final} Image decorator, {\cf17 final} {\cf18 int} corner) \{\par
00234         {\cf19 if} (corner <= 0 || corner >= LAST_CORNER_KEY) \{\par
00235             {\cf19 throw} {\cf17 new} IllegalArgumentException({\cf22 "Wrong decorate corner"});\par
00236         \}\par
00237         Map<Image, Map<Image, Image>> cornerDecoratedImageMap = m_decoratedImageMap[corner];\par
00238         {\cf19 if} (cornerDecoratedImageMap == {\cf17 null}) \{\par
00239             cornerDecoratedImageMap = {\cf17 new} HashMap<Image, Map<Image, Image>>();\par
00240             m_decoratedImageMap[corner] = cornerDecoratedImageMap;\par
00241         \}\par
00242         Map<Image, Image> decoratedMap = cornerDecoratedImageMap.get(baseImage);\par
00243         {\cf19 if} (decoratedMap == {\cf17 null}) \{\par
00244             decoratedMap = {\cf17 new} HashMap<Image, Image>();\par
00245             cornerDecoratedImageMap.put(baseImage, decoratedMap);\par
00246         \}\par
00247         {\cf20 //}\par
00248         Image result = decoratedMap.get(decorator);\par
00249         {\cf19 if} (result == {\cf17 null}) \{\par
00250             Rectangle bib = baseImage.getBounds();\par
00251             Rectangle dib = decorator.getBounds();\par
00252             {\cf20 //}\par
00253             result = {\cf17 new} Image(Display.getCurrent(), bib.width, bib.height);\par
00254             {\cf20 //}\par
00255             GC gc = {\cf17 new} GC(result);\par
00256             gc.drawImage(baseImage, 0, 0);\par
00257             {\cf19 if} (corner == TOP_LEFT) \{\par
00258                 gc.drawImage(decorator, 0, 0);\par
00259             \} {\cf19 else} {\cf19 if} (corner == TOP_RIGHT) \{\par
00260                 gc.drawImage(decorator, bib.width - dib.width, 0);\par
00261             \} {\cf19 else} {\cf19 if} (corner == BOTTOM_LEFT) \{\par
00262                 gc.drawImage(decorator, 0, bib.height - dib.height);\par
00263             \} {\cf19 else} {\cf19 if} (corner == BOTTOM_RIGHT) \{\par
00264                 gc.drawImage(decorator, bib.width - dib.width, bib.height - dib.height);\par
00265             \}\par
00266             gc.dispose();\par
00267             {\cf20 //}\par
00268             decoratedMap.put(decorator, result);\par
00269         \}\par
00270         {\cf19 return} result;\par
00271     \}\par
00275     {\cf17 public} {\cf17 static} {\cf18 void} disposeImages() \{\par
00276         {\cf20 // dispose loaded images}\par
00277         \{\par
00278             {\cf19 for} (Image image : m_imageMap.values()) \{\par
00279                 image.dispose();\par
00280             \}\par
00281             m_imageMap.clear();\par
00282         \}\par
00283         {\cf20 // dispose decorated images}\par
00284         {\cf19 for} ({\cf18 int} i = 0; i < m_decoratedImageMap.length; i++) \{\par
00285             Map<Image, Map<Image, Image>> cornerDecoratedImageMap = m_decoratedImageMap[i];\par
00286             {\cf19 if} (cornerDecoratedImageMap != {\cf17 null}) \{\par
00287                 {\cf19 for} (Map<Image, Image> decoratedMap : cornerDecoratedImageMap.values()) \{\par
00288                     {\cf19 for} (Image image : decoratedMap.values()) \{\par
00289                         image.dispose();\par
00290                     \}\par
00291                     decoratedMap.clear();\par
00292                 \}\par
00293                 cornerDecoratedImageMap.clear();\par
00294             \}\par
00295         \}\par
00296     \}\par
00298     {\cf20 //}\par
00299     {\cf20 // Font}\par
00300     {\cf20 //}\par
00302 {\cf20 }\par
00305     {\cf17 private} {\cf17 static} Map<String, Font> m_fontMap = {\cf17 new} HashMap<String, Font>();\par
00309     {\cf17 private} {\cf17 static} Map<Font, Font> m_fontToBoldFontMap = {\cf17 new} HashMap<Font, Font>();\par
00321     {\cf17 public} {\cf17 static} Font getFont(String name, {\cf18 int} height, {\cf18 int} style) \{\par
00322         {\cf19 return} getFont(name, height, style, {\cf17 false}, {\cf17 false});\par
00323     \}\par
00340     {\cf17 public} {\cf17 static} Font getFont(String name, {\cf18 int} size, {\cf18 int} style, {\cf18 boolean} strikeout, {\cf18 boolean} underline) \{\par
00341         String fontName = name + {\cf23 '|'} + size + {\cf23 '|'} + style + {\cf23 '|'} + strikeout + {\cf23 '|'} + underline;\par
00342         Font font = m_fontMap.get(fontName);\par
00343         {\cf19 if} (font == {\cf17 null}) \{\par
00344             FontData fontData = {\cf17 new} FontData(name, size, style);\par
00345             {\cf19 if} (strikeout || underline) \{\par
00346                 {\cf19 try} \{\par
00347                     Class<?> logFontClass = Class.forName({\cf22 "org.eclipse.swt.internal.win32.LOGFONT"}); {\cf20 //$NON-NLS-1$}\par
00348                     Object logFont = FontData.class.getField({\cf22 "data"}).get(fontData); {\cf20 //$NON-NLS-1$}\par
00349                     {\cf19 if} (logFont != {\cf17 null} && logFontClass != {\cf17 null}) \{\par
00350                         {\cf19 if} (strikeout) \{\par
00351                             logFontClass.getField({\cf22 "lfStrikeOut"}).set(logFont, Byte.valueOf(({\cf18 byte}) 1)); {\cf20 //$NON-NLS-1$}\par
00352                         \}\par
00353                         {\cf19 if} (underline) \{\par
00354                             logFontClass.getField({\cf22 "lfUnderline"}).set(logFont, Byte.valueOf(({\cf18 byte}) 1)); {\cf20 //$NON-NLS-1$}\par
00355                         \}\par
00356                     \}\par
00357                 \} {\cf19 catch} (Throwable e) \{\par
00358                     System.err.println({\cf22 "Unable to set underline or strikeout"} + {\cf22 " (probably on a non-Windows platform). "} + e); {\cf20 //$NON-NLS-1$ //$NON-NLS-2$}\par
00359                 \}\par
00360             \}\par
00361             font = {\cf17 new} Font(Display.getCurrent(), fontData);\par
00362             m_fontMap.put(fontName, font);\par
00363         \}\par
00364         {\cf19 return} font;\par
00365     \}\par
00373     {\cf17 public} {\cf17 static} Font getBoldFont(Font baseFont) \{\par
00374         Font font = m_fontToBoldFontMap.get(baseFont);\par
00375         {\cf19 if} (font == {\cf17 null}) \{\par
00376             FontData fontDatas[] = baseFont.getFontData();\par
00377             FontData data = fontDatas[0];\par
00378             font = {\cf17 new} Font(Display.getCurrent(), data.getName(), data.getHeight(), SWT.BOLD);\par
00379             m_fontToBoldFontMap.put(baseFont, font);\par
00380         \}\par
00381         {\cf19 return} font;\par
00382     \}\par
00386     {\cf17 public} {\cf17 static} {\cf18 void} disposeFonts() \{\par
00387         {\cf20 // clear fonts}\par
00388         {\cf19 for} (Font font : m_fontMap.values()) \{\par
00389             font.dispose();\par
00390         \}\par
00391         m_fontMap.clear();\par
00392         {\cf20 // clear bold fonts}\par
00393         {\cf19 for} (Font font : m_fontToBoldFontMap.values()) \{\par
00394             font.dispose();\par
00395         \}\par
00396         m_fontToBoldFontMap.clear();\par
00397     \}\par
00399     {\cf20 //}\par
00400     {\cf20 // Cursor}\par
00401     {\cf20 //}\par
00403 {\cf20 }\par
00406     {\cf17 private} {\cf17 static} Map<Integer, Cursor> m_idToCursorMap = {\cf17 new} HashMap<Integer, Cursor>();\par
00414     {\cf17 public} {\cf17 static} Cursor getCursor({\cf18 int} {\cf18 id}) \{\par
00415         Integer key = Integer.valueOf({\cf18 id});\par
00416         Cursor cursor = m_idToCursorMap.get(key);\par
00417         {\cf19 if} (cursor == {\cf17 null}) \{\par
00418             cursor = {\cf17 new} Cursor(Display.getDefault(), {\cf18 id});\par
00419             m_idToCursorMap.put(key, cursor);\par
00420         \}\par
00421         {\cf19 return} cursor;\par
00422     \}\par
00426     {\cf17 public} {\cf17 static} {\cf18 void} disposeCursors() \{\par
00427         {\cf19 for} (Cursor cursor : m_idToCursorMap.values()) \{\par
00428             cursor.dispose();\par
00429         \}\par
00430         m_idToCursorMap.clear();\par
00431     \}\par
00433     {\cf20 //}\par
00434     {\cf20 // General}\par
00435     {\cf20 //}\par
00437 {\cf20 }\par
00441     {\cf17 public} {\cf17 static} {\cf18 void} dispose() \{\par
00442         disposeColors();\par
00443         disposeImages();\par
00444         disposeFonts();\par
00445         disposeCursors();\par
00446     \}\par
00447 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
