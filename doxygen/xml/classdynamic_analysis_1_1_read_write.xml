<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classdynamic_analysis_1_1_read_write" kind="class" language="Java" prot="public">
    <compoundname>dynamicAnalysis::ReadWrite</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1a01123a9927e38d1b4d9f0b5f6c7ecbec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamicAnalysis.ReadWrite.write</definition>
        <argsstring>(String word, String file)</argsstring>
        <name>write</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.write</qualifiedname>
        <param>
          <type>String</type>
          <declname>word</declname>
        </param>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write to a file. Clears existing lines in the file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to be written to the text file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file to write to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="19" column="21" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="19" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1ac656ac717c6e8237ad0685b30ec9b862" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamicAnalysis.ReadWrite.writeLine</definition>
        <argsstring>(String word, String file)</argsstring>
        <name>writeLine</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.writeLine</qualifiedname>
        <param>
          <type>String</type>
          <declname>word</declname>
        </param>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write to a file. Keeps existing lines in the file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to be written to the text file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file to write to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="46" column="21" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="46" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1a497a435c15451bb5f715dd19d4c90544" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamicAnalysis.ReadWrite.delete</definition>
        <argsstring>(String file)</argsstring>
        <name>delete</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.delete</qualifiedname>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file to write to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="65" column="21" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1a30e7c441a11f59cdf7dbaf7b7ba933c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int dynamicAnalysis.ReadWrite.getLength</definition>
        <argsstring>(String file)</argsstring>
        <name>getLength</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.getLength</qualifiedname>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the length.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file to write to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of lines in the file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="76" column="20" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="76" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1a4825e9af5d67a32b58daf246583e4d44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String dynamicAnalysis.ReadWrite.getLine</definition>
        <argsstring>(int number, String file)</argsstring>
        <name>getLine</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.getLine</qualifiedname>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the line at the specified index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>number</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to retrieve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the line at the specified index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="113" column="23" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="113" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1a1f644c7deacc1917b62ca9def959cd54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int dynamicAnalysis.ReadWrite.indexOf</definition>
        <argsstring>(String word, String file)</argsstring>
        <name>indexOf</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.indexOf</qualifiedname>
        <param>
          <type>String</type>
          <declname>word</declname>
        </param>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First index that the specified string is found at. Returns -1 if it is not found.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to be searched in the text file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file to be searched </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index that the string is located in the text file, -1 if it is not found </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="150" column="20" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="150" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1aa65342a787f2d47a7c3d77af30453bba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamicAnalysis.ReadWrite.replace</definition>
        <argsstring>(String oldWord, String newWord, String file)</argsstring>
        <name>replace</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.replace</qualifiedname>
        <param>
          <type>String</type>
          <declname>oldWord</declname>
        </param>
        <param>
          <type>String</type>
          <declname>newWord</declname>
        </param>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace the first occurence of a line with another.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldWord</parametername>
</parameternamelist>
<parameterdescription>
<para>the line to be replaces </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newWord</parametername>
</parameternamelist>
<parameterdescription>
<para>the new line to replace the first occurence of oldWord </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="189" column="21" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="189" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1acf2baf7df5d40f6710359d8e49a9c076" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamicAnalysis.ReadWrite.replace</definition>
        <argsstring>(int index, String newWord, String file)</argsstring>
        <name>replace</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.replace</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>String</type>
          <declname>newWord</declname>
        </param>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace the line at the specified index with a new line.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to be replaces </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newWord</parametername>
</parameternamelist>
<parameterdescription>
<para>the new word to replace at the index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="240" column="21" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="240" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1ac31a5457c6fbb347f78b88993685594d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean dynamicAnalysis.ReadWrite.isReady</definition>
        <argsstring>(String file)</argsstring>
        <name>isReady</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.isReady</qualifiedname>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if the text file is ready to be written and read from.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, if is ready to be read and wrote to </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="293" column="24" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="293" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1aa3363db9e7d5261836e73224da323c0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamicAnalysis.ReadWrite.deleteLine</definition>
        <argsstring>(int index, String file)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.deleteLine</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete line at the specified index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to delete the line at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="316" column="21" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="316" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classdynamic_analysis_1_1_read_write_1a47cc13f146f464533f9ea8f3500afeae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String dynamicAnalysis.ReadWrite.toString</definition>
        <argsstring>(String file)</argsstring>
        <name>toString</name>
        <qualifiedname>dynamicAnalysis.ReadWrite.toString</qualifiedname>
        <param>
          <type>String</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads the entire text file and returns as a string</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the text file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the entire contents of the text file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynamicAnalysis/ReadWrite.java" line="366" column="23" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="366" bodyend="390"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper class for reading and writing to a text file. </para>
    </detaileddescription>
    <location file="src/dynamicAnalysis/ReadWrite.java" line="10" column="7" bodyfile="src/dynamicAnalysis/ReadWrite.java" bodystart="11" bodyend="391"/>
    <listofallmembers>
      <member refid="classdynamic_analysis_1_1_read_write_1a497a435c15451bb5f715dd19d4c90544" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>delete</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1aa3363db9e7d5261836e73224da323c0d" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>deleteLine</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1a30e7c441a11f59cdf7dbaf7b7ba933c7" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>getLength</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1a4825e9af5d67a32b58daf246583e4d44" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>getLine</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1a1f644c7deacc1917b62ca9def959cd54" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>indexOf</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1ac31a5457c6fbb347f78b88993685594d" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>isReady</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1aa65342a787f2d47a7c3d77af30453bba" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>replace</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1acf2baf7df5d40f6710359d8e49a9c076" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>replace</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1a47cc13f146f464533f9ea8f3500afeae" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>toString</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1a01123a9927e38d1b4d9f0b5f6c7ecbec" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>write</name></member>
      <member refid="classdynamic_analysis_1_1_read_write_1ac656ac717c6e8237ad0685b30ec9b862" prot="public" virt="non-virtual"><scope>dynamicAnalysis::ReadWrite</scope><name>writeLine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
